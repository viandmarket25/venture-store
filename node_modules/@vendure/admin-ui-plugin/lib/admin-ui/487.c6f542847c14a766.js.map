{"version":3,"file":"487.c6f542847c14a766.js","mappings":"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","names":["i0","DashboardWidgetComponent","constructor","componentFactoryResolver","this","ngAfterViewInit","loadWidget","_this","_asyncToGenerator","loadComponentResult","widgetConfig","loadComponent","componentType","Promise","componentRef","portal","createComponent","resolveComponentFactory","changeDetectorRef","detectChanges","ngOnDestroy","destroy","id_r2","_r4","$implicit","ctx_r3","addWidget","t","core","Xpm","selectors","viewQuery","rf","ctx","ViewContainerRef","DashboardWidgetComponent_ng_template_2_Template","DashboardWidgetComponent_ng_template_3_Template","tmp_0_0","title","undefined","width_r11","_r14","widget_r8","ctx_r12","setWidgetWidth","width","_c0","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_button_11_Template","_r18","ctx_r16","removeWidget","config","ctx_r9","getSupportedWidths","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_Template","ctx_r7","getClassForWidth","requiresPermissions","$event","_r21","ctx_r20","drop","DashboardComponent_div_12_div_1_Template","_c1","rowIndex_r6","row_r5","ctx_r1","trackRowItem","DashboardComponent","dashboardWidgetService","localStorageService","changedDetectorRef","dataService","deletionMarker","setTitle","titleSetter","ngOnInit","availableWidgetIds$","client","userStatus","stream$","pipe","map","permissions","getAvailableIds","tap","ids","widgetLayout","initLayout","assertNever","supportedWidths","widget","recalculateLayout","trackRow","index","row","item","id","join","getWidgetById","targetRow","length","push","event","currentIndex","previousIndex","previousContainer","container","data","previousLayoutRow","newLayoutRow","splice","availableIds","savedLayoutDef","get","layoutDef","filter","includes","getWidgetLayout","newLayoutDef","reduce","flat","set","setTimeout","markForCheck","i1","decls","vars","consts","template","DashboardComponent_button_9_Template","DashboardComponent_div_12_Template","dashboardRoutes","path","component","pathMatch","order_r5","code","order_r6","state","order_r7","customer","order_r8","totalWithTax","currencyCode","order_r9","orderPlacedAt","gql","LatestOrdersWidgetComponent","latestOrders$","query","GetLatestOrdersDocument","options","take","active","eq","notIn","sort","SortOrder","refetchOnChannelChange","mapStream","orders","items","LatestOrdersWidgetComponent_ng_template_4_Template","LatestOrdersWidgetComponent_ng_template_7_Template","LatestOrdersWidgetComponent_ng_template_10_Template","LatestOrdersWidgetComponent_ng_template_13_Template","LatestOrdersWidgetComponent_ng_template_16_Template","LatestOrdersWidgetModule","oAB","cJS","CoreModule","SharedModule","_r3","ctx_r2","metricType$","next","MetricType","OrderTotal","ctx_r4","OrderCount","ctx_r5","AverageOrderValue","ctx_r6","refresh","activeMetricType_r1","ctx_r0","GET_ORDER_CHART_DATA","OrderChartWidgetComponent","refresh$","Subject","BehaviorSubject","currencyCode$","settings","getActiveChannel","activeChannel","defaultCurrencyCode","uiState$","uiState","distinctUntilChanged","metrics$","combineLatest","switchMap","metricType","startWith","GetOrderChartDataDocument","types","mapSingle","metricSummary","metrics","formatValueAs","locale","language","formatOptions","find","m","type","entries","entry","OrderChartWidgetComponent_div_2_Template","selection$","timeframe","date","today","yesterday","selection_r2","range_r8","start","end","GET_ORDER_SUMMARY","OrderSummaryWidgetComponent","Date","setDate","getDate","dateRange$","selection","dayjs","startOf","toDate","endOf","shareReplay","orderSummary$","GetOrderSummaryDocument","toISOString","totalOrderCount$","res","totalItems","totalOrderValue$","total","order","OrderSummaryWidgetComponent_div_18_Template","OrderSummaryWidgetComponent_div_20_Template","OrderSummaryWidgetModule","DEFAULT_DASHBOARD_WIDGET_LAYOUT","DEFAULT_WIDGETS","_","Permission","orderSummary","latestOrders","DashboardModule","Object","registerWidget","getDefaultLayout","setDefaultLayout","RouterModule","TestWidgetComponent","TestWidgetModule","hideVendureBranding","hideVersion","version","WelcomeWidgetComponent_div_0_p_7_Template","administrator_r1","firstName","lastName","user","lastLogin","WelcomeWidgetComponent","ADMIN_UI_VERSION","brand","getAppConfig","administrator$","administrator","getActiveAdministrator","activeAdministrator","WelcomeWidgetComponent_div_0_Template","WelcomeWidgetModule"],"sourceRoot":"webpack:///","sources":["./src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.html","./src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.ts","./src/lib/dashboard/src/components/dashboard/dashboard.component.html","./src/lib/dashboard/src/components/dashboard/dashboard.component.ts","./src/lib/dashboard/src/dashboard.routes.ts","./src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.html","./src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.ts","./src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.html","./src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.ts","./src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.html","./src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.ts","./src/lib/dashboard/src/default-widgets.ts","./src/lib/dashboard/src/dashboard.module.ts","./src/lib/dashboard/src/widgets/test-widget/test-widget.component.ts","./src/lib/dashboard/src/widgets/test-widget/test-widget.component.html","./src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.html","./src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.ts"],"sourcesContent":["<vdr-card [title]=\"widgetConfig.title ?? '' | translate\">\r\n    <ng-template vdrCardControls>\r\n        <ng-content></ng-content>\r\n    </ng-template>\r\n    <ng-template #portal></ng-template>\r\n</vdr-card>\r\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { DashboardWidgetConfig } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-dashboard-widget',\n    templateUrl: './dashboard-widget.component.html',\n    styleUrls: ['./dashboard-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardWidgetComponent implements AfterViewInit, OnDestroy {\n    @Input() widgetConfig: DashboardWidgetConfig;\n\n    @ViewChild('portal', { read: ViewContainerRef })\n    private portal: ViewContainerRef;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngAfterViewInit(): void {\n        this.loadWidget();\n    }\n\n    private async loadWidget() {\n        const loadComponentResult = this.widgetConfig.loadComponent();\n        const componentType =\n            loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\n        this.componentRef = this.portal.createComponent(\n            this.componentFactoryResolver.resolveComponentFactory(componentType),\n        );\n        this.componentRef.changeDetectorRef.detectChanges();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n}\n","<vdr-page-block>\r\n    <div class=\"widget-header mb-1\">\r\n        <vdr-dropdown>\r\n            <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'dashboard.add-widget' | translate }}\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <button\r\n                    vdrDropdownItem\r\n                    *ngFor=\"let id of availableWidgetIds$ | async\"\r\n                    (click)=\"addWidget(id)\"\r\n                >\r\n                    {{ id }}\r\n                </button>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </div>\r\n    <div cdkDropListGroup>\r\n        <div\r\n            class=\"clr-row dashboard-row\"\r\n            *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\r\n            cdkDropList\r\n            (cdkDropListDropped)=\"drop($event)\"\r\n            cdkDropListOrientation=\"horizontal\"\r\n            [cdkDropListData]=\"{ index: rowIndex }\"\r\n        >\r\n            <div\r\n                *ngFor=\"let widget of row; trackBy: trackRowItem\"\r\n                class=\"dashboard-item\"\r\n                [ngClass]=\"getClassForWidth(widget.width)\"\r\n                cdkDrag\r\n                [cdkDragData]=\"widget\"\r\n            >\r\n                <vdr-dashboard-widget\r\n                    *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\r\n                    [widgetConfig]=\"widget.config\"\r\n                >\r\n                    <div class=\"flex\">\r\n                        <div class=\"drag-handle\" cdkDragHandle>\r\n                            <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n                        </div>\r\n                        <vdr-dropdown>\r\n                            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                                <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\r\n                                <button\r\n                                    vdrDropdownItem\r\n                                    [disabled]=\"width === widget.width\"\r\n                                    *ngFor=\"let width of getSupportedWidths(widget.config)\"\r\n                                    (click)=\"setWidgetWidth(widget, width)\"\r\n                                >\r\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\r\n                                </button>\r\n                                <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                <button vdrDropdownItem (click)=\"removeWidget(widget)\">\r\n                                    <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                    {{ 'dashboard.remove-widget' | translate }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </div>\r\n                </vdr-dashboard-widget>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport {\n    DashboardWidgetConfig,\n    DashboardWidgetService,\n    DashboardWidgetWidth,\n    DataService,\n    LocalStorageService,\n    titleSetter,\n    WidgetLayout,\n    WidgetLayoutDefinition,\n} from '@vendure/admin-ui/core';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardComponent implements OnInit {\n    widgetLayout: WidgetLayout | undefined;\n    availableWidgetIds$: Observable<string[]>;\n    private readonly deletionMarker = '__delete__';\n    private setTitle = titleSetter();\n    constructor(\n        private dashboardWidgetService: DashboardWidgetService,\n        private localStorageService: LocalStorageService,\n        private changedDetectorRef: ChangeDetectorRef,\n        private dataService: DataService,\n    ) {}\n\n    ngOnInit() {\n        this.availableWidgetIds$ = this.dataService.client.userStatus().stream$.pipe(\n            map(({ userStatus }) => userStatus.permissions),\n            map(permissions => this.dashboardWidgetService.getAvailableIds(permissions)),\n            tap(ids => (this.widgetLayout = this.initLayout(ids))),\n        );\n        this.setTitle('breadcrumb.dashboard');\n    }\n\n    getClassForWidth(width: DashboardWidgetWidth): string {\n        switch (width) {\n            case 3:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\n            case 4:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\n            case 6:\n                return `clr-col-12 clr-col-lg-6`;\n            case 8:\n                return `clr-col-12 clr-col-lg-8`;\n            case 12:\n                return `clr-col-12`;\n            default:\n                assertNever(width);\n        }\n    }\n\n    getSupportedWidths(config: DashboardWidgetConfig): DashboardWidgetWidth[] {\n        return config.supportedWidths || [3, 4, 6, 8, 12];\n    }\n\n    setWidgetWidth(widget: WidgetLayout[number][number], width: DashboardWidgetWidth) {\n        widget.width = width;\n        this.recalculateLayout();\n    }\n\n    trackRow(index: number, row: WidgetLayout[number]) {\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\n        return id;\n    }\n\n    trackRowItem(index: number, item: WidgetLayout[number][number]) {\n        return item.config;\n    }\n\n    addWidget(id: string) {\n        const config = this.dashboardWidgetService.getWidgetById(id);\n        if (config) {\n            const width = this.getSupportedWidths(config)[0];\n            const widget: WidgetLayout[number][number] = {\n                id,\n                config,\n                width,\n            };\n            let targetRow: WidgetLayout[number];\n            if (this.widgetLayout && this.widgetLayout.length) {\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\n            } else {\n                targetRow = [];\n                this.widgetLayout?.push(targetRow);\n            }\n            targetRow.push(widget);\n            this.recalculateLayout();\n        }\n    }\n\n    removeWidget(widget: WidgetLayout[number][number]) {\n        widget.id = this.deletionMarker;\n        this.recalculateLayout();\n    }\n\n    drop(event: CdkDragDrop<{ index: number }>) {\n        const { currentIndex, previousIndex, previousContainer, container } = event;\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\n            // Nothing changed\n            return;\n        }\n        if (this.widgetLayout) {\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\n            const newLayoutRow = this.widgetLayout[container.data.index];\n\n            previousLayoutRow.splice(previousIndex, 1);\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\n            this.recalculateLayout();\n        }\n    }\n\n    private initLayout(availableIds: string[]): WidgetLayout {\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\n        let layoutDef: WidgetLayoutDefinition | undefined;\n        if (savedLayoutDef) {\n            // validate all the IDs from the saved layout are still available\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\n        }\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\n    }\n\n    private recalculateLayout() {\n        if (this.widgetLayout) {\n            const flattened = this.widgetLayout\n                .reduce((flat, row) => [...flat, ...row], [])\n                .filter(item => item.id !== this.deletionMarker);\n            const newLayoutDef: WidgetLayoutDefinition = flattened.map(item => ({\n                id: item.id,\n                width: item.width,\n            }));\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\n            setTimeout(() => this.changedDetectorRef.markForCheck());\n        }\n    }\n}\n","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\nexport const dashboardRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        pathMatch: 'full',\r\n    },\r\n];\r\n","<vdr-data-table-2 [items]=\"latestOrders$ | async\" id=\"latest-orders-widget-list\">\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\">\r\n        <ng-template let-order=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['/orders/', order.id]\"\r\n                ><span>{{ order.code }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.state' | translate\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-order=\"item\">\r\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'customer.customer' | translate\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-order=\"item\">\r\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.total' | translate\">\r\n        <ng-template let-order=\"item\">\r\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.placed-at' | translate\">\r\n        <ng-template let-order=\"item\">\r\n            {{ order.orderPlacedAt | timeAgo }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport {\r\n    CoreModule,\r\n    DataService,\r\n    GetLatestOrdersDocument,\r\n    GetLatestOrdersQuery,\r\n    GetOrderListQuery,\r\n    ItemOf,\r\n    SharedModule,\r\n    SortOrder,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst GET_LATEST_ORDERS = gql`\r\n    query GetLatestOrders($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                type\r\n                orderPlacedAt\r\n                code\r\n                state\r\n                total\r\n                totalWithTax\r\n                currencyCode\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-latest-orders-widget',\r\n    templateUrl: './latest-orders-widget.component.html',\r\n    styleUrls: ['./latest-orders-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LatestOrdersWidgetComponent implements OnInit {\r\n    latestOrders$: Observable<Array<ItemOf<GetLatestOrdersQuery, 'orders'>>>;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.latestOrders$ = this.dataService\r\n            .query(GetLatestOrdersDocument, {\r\n                options: {\r\n                    take: 10,\r\n                    filter: {\r\n                        active: { eq: false },\r\n                        state: { notIn: ['Cancelled', 'Draft'] },\r\n                    },\r\n                    sort: {\r\n                        orderPlacedAt: SortOrder.DESC,\r\n                    },\r\n                },\r\n            })\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.orders.items);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule, SharedModule],\r\n    declarations: [LatestOrdersWidgetComponent],\r\n})\r\nexport class LatestOrdersWidgetModule {}\r\n","<vdr-chart [entries]=\"metrics$ | async\" />\r\n<div class=\"flex\" *ngIf=\"metricType$ | async as activeMetricType\">\r\n    <button\r\n        class=\"button-small\"\r\n        (click)=\"metricType$.next(MetricType.OrderTotal)\"\r\n        [class.active]=\"activeMetricType === MetricType.OrderTotal\"\r\n    >\r\n        {{ 'dashboard.metric-order-total-value' | translate }}\r\n    </button>\r\n    <button\r\n        class=\"ml-1 button-small\"\r\n        (click)=\"metricType$.next(MetricType.OrderCount)\"\r\n        [class.active]=\"activeMetricType === MetricType.OrderCount\"\r\n    >\r\n        {{ 'dashboard.metric-number-of-orders' | translate }}\r\n    </button>\r\n    <button\r\n        class=\"ml-1 button-small\"\r\n        (click)=\"metricType$.next(MetricType.AverageOrderValue)\"\r\n        [class.active]=\"activeMetricType === MetricType.AverageOrderValue\"\r\n    >\r\n        {{ 'dashboard.metric-average-order-value' | translate }}\r\n    </button>\r\n    <div class=\"flex-spacer\"></div>\r\n    <button class=\"button-small\" (click)=\"refresh()\">\r\n        <clr-icon shape=\"refresh\"></clr-icon>\r\n    </button>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n    ChartEntry,\r\n    ChartFormatOptions,\r\n    DataService,\r\n    GetOrderChartDataDocument,\r\n    MetricType,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, switchMap } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\r\n\r\nexport const GET_ORDER_CHART_DATA = gql`\r\n    query GetOrderChartData($refresh: Boolean, $types: [MetricType!]!) {\r\n        metricSummary(input: { interval: Daily, types: $types, refresh: $refresh }) {\r\n            interval\r\n            type\r\n            entries {\r\n                label\r\n                value\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-order-chart-widget',\r\n    templateUrl: './order-chart-widget.component.html',\r\n    styleUrls: ['./order-chart-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderChartWidgetComponent implements OnInit {\r\n    constructor(private dataService: DataService) {}\r\n    metrics$: Observable<ChartEntry[]>;\r\n    refresh$ = new Subject<boolean>();\r\n    metricType$ = new BehaviorSubject(MetricType.OrderTotal);\r\n    MetricType = MetricType;\r\n\r\n    ngOnInit() {\r\n        const currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n        const uiState$ = this.dataService.client.uiState().mapStream(data => data.uiState);\r\n        const metricType$ = this.metricType$.pipe(distinctUntilChanged());\r\n        this.metrics$ = combineLatest(metricType$, currencyCode$, uiState$).pipe(\r\n            switchMap(([metricType, currencyCode, uiState]) =>\r\n                this.refresh$.pipe(\r\n                    startWith(false),\r\n                    switchMap(refresh =>\r\n                        this.dataService\r\n                            .query(GetOrderChartDataDocument, {\r\n                                types: [metricType],\r\n                                refresh,\r\n                            })\r\n                            .mapSingle(data => data.metricSummary)\r\n                            .pipe(\r\n                                map(metrics => {\r\n                                    const formatValueAs: 'currency' | 'number' =\r\n                                        metricType === MetricType.OrderCount ? 'number' : 'currency';\r\n                                    const locale = `${uiState.language}-${uiState.locale}`;\r\n\r\n                                    const formatOptions: ChartFormatOptions = {\r\n                                        formatValueAs,\r\n                                        currencyCode,\r\n                                        locale,\r\n                                    };\r\n                                    return (\r\n                                        metrics\r\n                                            .find(m => m.type === metricType)\r\n                                            ?.entries.map(entry => ({ ...entry, formatOptions })) ?? []\r\n                                    );\r\n                                }),\r\n                            ),\r\n                    ),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n}\r\n","<div class=\"stats\">\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">{{ totalOrderCount$ | async }}</div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-orders' | translate }}</div>\r\n    </div>\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">\r\n            {{ totalOrderValue$ | async | currency: (currencyCode$ | async) || undefined }}\r\n        </div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-order-value' | translate }}</div>\r\n    </div>\r\n</div>\r\n<div class=\"footer\">\r\n    <div class=\"flex\" *ngIf=\"selection$ | async as selection\">\r\n        <button class=\"button-small\" [class.active]=\"selection.date === today\" (click)=\"selection$.next({timeframe: 'day', date: today})\">\r\n            {{ 'dashboard.today' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.date === yesterday\" (click)=\"selection$.next({timeframe: 'day', date: yesterday})\">\r\n            {{ 'dashboard.yesterday' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'week'\" (click)=\"selection$.next({timeframe: 'week'})\">\r\n            {{ 'dashboard.thisWeek' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'month'\" (click)=\"selection$.next({timeframe: 'month'})\">\r\n            {{ 'dashboard.thisMonth' | translate }}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"date-range p5\" *ngIf=\"dateRange$ | async as range\">\r\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport { CoreModule, DataService, GetOrderSummaryDocument } from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport dayjs from 'dayjs';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nexport type Timeframe = 'day' | 'week' | 'month';\r\n\r\nexport const GET_ORDER_SUMMARY = gql`\r\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\r\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\r\n            totalItems\r\n            items {\r\n                id\r\n                totalWithTax\r\n                currencyCode\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-order-summary-widget',\r\n    templateUrl: './order-summary-widget.component.html',\r\n    styleUrls: ['./order-summary-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryWidgetComponent implements OnInit {\r\n    today = new Date();\r\n    yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\r\n    totalOrderCount$: Observable<number>;\r\n    totalOrderValue$: Observable<number>;\r\n    currencyCode$: Observable<string | undefined>;\r\n    selection$ = new BehaviorSubject<{ timeframe: Timeframe; date?: Date }>({\r\n        timeframe: 'day',\r\n        date: this.today,\r\n    });\r\n    dateRange$: Observable<{ start: Date; end: Date }>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.dateRange$ = this.selection$.pipe(\r\n            distinctUntilChanged(),\r\n            map(selection => ({\r\n                start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\r\n                end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\r\n            })),\r\n            shareReplay(1),\r\n        );\r\n        const orderSummary$ = this.dateRange$.pipe(\r\n            switchMap(({ start, end }) =>\r\n                this.dataService\r\n                    .query(GetOrderSummaryDocument, { start: start.toISOString(), end: end.toISOString() })\r\n                    .refetchOnChannelChange()\r\n                    .mapStream(data => data.orders),\r\n            ),\r\n            shareReplay(1),\r\n        );\r\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\r\n        this.totalOrderValue$ = orderSummary$.pipe(\r\n            map(res => res.items.reduce((total, order) => total + order.totalWithTax, 0) / 100),\r\n        );\r\n        this.currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [OrderSummaryWidgetComponent],\r\n})\r\nexport class OrderSummaryWidgetModule {}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DashboardWidgetConfig, Permission, WidgetLayoutDefinition } from '@vendure/admin-ui/core';\r\n\r\nimport { LatestOrdersWidgetComponent } from './widgets/latest-orders-widget/latest-orders-widget.component';\r\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\r\nimport { OrderSummaryWidgetComponent } from './widgets/order-summary-widget/order-summary-widget.component';\r\n\r\nexport const DEFAULT_DASHBOARD_WIDGET_LAYOUT: WidgetLayoutDefinition = [\r\n    { id: 'metrics', width: 12 },\r\n    { id: 'orderSummary', width: 6 },\r\n    { id: 'latestOrders', width: 6 },\r\n];\r\n\r\nexport const DEFAULT_WIDGETS: { [id: string]: DashboardWidgetConfig } = {\r\n    metrics: {\r\n        title: _('dashboard.metrics'),\r\n        supportedWidths: [6, 8, 12],\r\n        loadComponent: () => OrderChartWidgetComponent,\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    orderSummary: {\r\n        title: _('dashboard.orders-summary'),\r\n        loadComponent: () => OrderSummaryWidgetComponent,\r\n        supportedWidths: [4, 6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    latestOrders: {\r\n        title: _('dashboard.latest-orders'),\r\n        loadComponent: () => LatestOrdersWidgetComponent,\r\n        supportedWidths: [6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DashboardWidgetService, SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { DashboardWidgetComponent } from './components/dashboard-widget/dashboard-widget.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { dashboardRoutes } from './dashboard.routes';\r\nimport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS } from './default-widgets';\r\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\r\n    declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent],\r\n})\r\nexport class DashboardModule {\r\n    constructor(dashboardWidgetService: DashboardWidgetService) {\r\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) => {\r\n            if (!dashboardWidgetService.getWidgetById(id)) {\r\n                dashboardWidgetService.registerWidget(id, config);\r\n            }\r\n        });\r\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\r\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\n\n@Component({\n    selector: 'vdr-test-widget',\n    templateUrl: './test-widget.component.html',\n    styleUrls: ['./test-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TestWidgetComponent {}\n\n@NgModule({\n    declarations: [TestWidgetComponent],\n})\nexport class TestWidgetModule {}\n","<p>This is a test widget!</p>\r\n","<div *ngIf=\"administrator$ | async as administrator\">\r\n    <h4 class=\"\">\r\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\r\n        <small class=\"p5\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\r\n    </h4>\r\n\r\n    <p class=\"p5\" *ngIf=\"!hideVendureBranding || !hideVersion\">\r\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\r\n    </p>\r\n</div>\r\n<div class=\"placeholder\">\r\n    <clr-icon shape=\"line-chart\" size=\"128\"></clr-icon>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport {\r\n    ADMIN_UI_VERSION,\r\n    CoreModule,\r\n    DataService,\r\n    GetActiveAdministratorQuery,\r\n    getAppConfig,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'vdr-welcome-widget',\r\n    templateUrl: './welcome-widget.component.html',\r\n    styleUrls: ['./welcome-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class WelcomeWidgetComponent implements OnInit {\r\n    version = ADMIN_UI_VERSION;\r\n    administrator$: Observable<GetActiveAdministratorQuery['activeAdministrator']>;\r\n    brand = getAppConfig().brand;\r\n    hideVendureBranding = getAppConfig().hideVendureBranding;\r\n    hideVersion = getAppConfig().hideVersion;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.administrator$ = this.dataService.administrator\r\n            .getActiveAdministrator()\r\n            .mapStream(data => data.activeAdministrator || null);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [WelcomeWidgetComponent],\r\n})\r\nexport class WelcomeWidgetModule {}\r\n"],"x_google_ignoreList":[]}