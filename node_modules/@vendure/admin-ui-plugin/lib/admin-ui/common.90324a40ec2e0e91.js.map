{"version":3,"file":"common.90324a40ec2e0e91.js","mappings":"sHAKAA,IAAA,SAAgBC,EAAgBC,EAAeC,EAAgB,KAC3D,OAAQD,GAAS,IACZE,UAAU,OACVC,QAAQ,mBAAoB,IAC5BC,cACAD,QAAQ,yDAA0C,IAClDA,QAAQ,OAAQF,EACzB,2BCNAH,IAAA,SAAgBO,EAAUC,EAAUC,GAChC,OAAa,MAATA,EACOC,MAAMC,KAAK,IAAIC,IAAIJ,IAGnB,IAAI,IAAIK,IAAIL,EAAIM,IAAIC,GAAQ,CAACA,EAAKN,GAAQM,KAAQC,SAEjE","names":["exports","normalizeString","input","spaceReplacer","normalize","replace","toLowerCase","unique","arr","byKey","Array","from","Set","Map","map","item","values"],"sourceRoot":"webpack:///","sources":["../common/src/normalize-string.ts","../common/src/unique.ts"],"sourcesContent":["/**\n * Normalizes a string to replace non-alphanumeric and diacritical marks with\n * plain equivalents.\n * Based on https://stackoverflow.com/a/37511463/772859\n */\nexport function normalizeString(input: string, spaceReplacer = ' '): string {\n    return (input || '')\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .toLowerCase()\n        .replace(/[!\"£$%^&*()+[\\]{};:@#~?\\\\/,|><`¬'=‘’]/g, '')\n        .replace(/\\s+/g, spaceReplacer);\n}\n","/**\r\n * @description\r\n * Returns an array with only unique values. Objects are compared by reference,\r\n * unless the `byKey` argument is supplied, in which case matching properties will\r\n * be used to check duplicates\r\n */\r\nexport function unique<T>(arr: T[], byKey?: keyof T): T[] {\r\n    if (byKey == null) {\r\n        return Array.from(new Set(arr));\r\n    } else {\r\n        // Based on https://stackoverflow.com/a/58429784/772859\r\n        return [...new Map(arr.map(item => [item[byKey], item])).values()];\r\n    }\r\n}\r\n"],"x_google_ignoreList":[]}