{"version":3,"file":"938.eb1c99978ac4f07a.js","mappings":"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","names":["replaceLast","target","search","replace","lastIndex","lastIndexOf","substr","ProductDetailService","constructor","dataService","this","getTaxCategories","settings","mapSingle","data","taxCategories","items","pipe","shareReplay","createProductWithVariants","input","createVariantsConfig","languageCode","createProduct$","product","createProduct","nonEmptyOptionGroups","groups","filter","g","values","length","createOptionGroups$","createProductOptionGroups","forkJoin","mergeMap","optionGroups","map","optionGroup","addOptionGroupToProduct","productId","id","optionGroupId","of","variants","v","optionIds","optionValues","optionName","index","option","options","find","o","name","Error","og","reduce","flat","createProductVariants","stockLocationId","c","code","normalizeString","translations","createProductOptionGroup","variantData","notNullOrUndefined","join","price","sku","stockLevels","stockOnHand","stock","updateProduct","updateOptions","autoUpdate","productInput","variantsInput","updateOperations","updateVariantsInput","getProductVariantsForProduct","productVariants","push","productOldName","findTranslation","productNewName","variant","currentVariantName","variantInput","existingVariantInput","i","variantTranslation","updateProductVariants","updateProductOption","updateProductVariantNames$","oldOptionName","newOptionName","variantsToUpdate","includes","variantName","deleteProductVariant","switchMap","result","DeletionResult","getProduct","single$","throwError","message","t","i0","i1","core","Yz7","factory","ɵfac","providedIn","_r3","ctx_r2","save","ctx_r0","detailForm","pristine","invalid","ctx_r8","optionGroupCustomFields","optionGroup_r6","get","updatePermission","optionControl_r18","value","optionControl_r19","createdAt","optionControl_r20","updatedAt","optionControl_r21","ctx_r15","optionControl_r22","ctx_r17","optionCustomFields","optionControl_r23","$event","_r25","$implicit","ctx_r24","paginationSettings","currentPage","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_3_Template","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_6_Template","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_9_Template","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_12_Template","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_15_Template","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_18_Template","options_r11","ctx_r9","itemsPerPage","ProductOptionsEditorComponent_form_22_vdr_card_2_ng_container_11_Template","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_Template","i_r7","ctx_r5","getOptions","ProductOptionsEditorComponent_form_22_vdr_card_2_Template","ctx_r1","getOptionGroups","ProductOptionsEditorComponent","BaseDetailComponent","route","router","serverConfigService","productDetailService","formBuilder","changeDetector","notificationService","super","autoUpdateVariantNames","Permission","getCustomFieldConfig","ngOnInit","optionGroups$","snapshot","entity","tap","group","UntypedFormGroup","UntypedFormArray","init","controls","$product","combineLatest","entity$","languageCode$","take","optionGroupForm","dirty","optionGroupEntity","getUpdatedOptionGroup","updateProductOptionGroup","optionForm","getUpdatedOption","subscribe","markAsPristine","markForCheck","success","_","err","error","optionGroupFormGroup","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","optionFormGroup","setFormValues","groupsForm","groupTranslation","groupForm","setOptionGroupForm","setCustomFieldsForm","optionsForm","array","addControl","optionTranslation","setOptionForm","customFields","formGroup","currentTranslation","customValueFieldsGroup","hash","field","setCustomFieldFormValues","control","setValue","i2","i3","i4","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","setLanguage","ProductOptionsEditorComponent_button_20_Template","ProductOptionsEditorComponent_form_22_Template","availableLanguages$","cancel","ctx_r4","confirm","form","CreateProductOptionGroupDialogComponent","Validators","updateCode","nameControl","codeControl","resolveWith","CreateProductOptionGroupDialogComponent_ng_template_0_Template","CreateProductOptionGroupDialogComponent_ng_template_8_Template","optionGroup_r5","ctx_r3","existingVariant","_r7","ctx_r6","CreateProductVariantDialogComponent","record","FormControl","valueChanges","Object","every","entries","groupCode","optionId","groupId","getGroupIdFromCode","getGroupCodeFromId","CreateProductVariantDialogComponent_ng_template_0_Template","CreateProductVariantDialogComponent_vdr_form_field_3_Template","CreateProductVariantDialogComponent_clr_alert_4_Template","CreateProductVariantDialogComponent_div_5_Template","CreateProductVariantDialogComponent_ng_template_13_Template","option_r3","_r8","ctx_r7","removeOption","i_r5","updateOption","cancelBubble","ctx_r11","editName","isLast_r4","lastSelected","locked","groupName","editingIndex","OptionValueInputComponent_div_1_vdr_chip_1_Template","OPTION_VALUE_INPUT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","OptionValueInputComponent","multi","formValue","add","EventEmitter","remove","edit","disabled","isFocussed","registerOnChange","fn","onChangeFn","registerOnTouched","onTouchFn","setDisabledState","isDisabled","writeValue","obj","focus","textArea","nativeElement","event","optionValue","nameInputs","setTimeout","newName","emit","handleKey","key","addOptionValue","preventDefault","removeLastOption","handleBlur","parseInputIntoOptions","unique","split","s","trim","viewQuery","ElementRef","_r12","_r1","OptionValueInputComponent_div_1_Template","group_r10","_r14","i_r11","addOption","ctx_r16","removeOptionGroup","isNew","variant_r18","variant_r19","variant_r20","variant_r21","variant_r22","optionGroup_r23","option_r29","_r33","variant_r25","item","ctx_r31","setOptionToAddToVariant","ctx_r35","addOptionToVariant","ctx_r28","optionsToAddToVariant","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_vdr_chip_0_Template","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_ng_template_1_Template","getOption","_r27","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_Template","variant_r40","currencyCode","variant_r41","priceWithTax","variant_r42","_r44","ctx_r43","deleteVariant","GeneratedVariant","config","keys","ProductVariantsEditorComponent","modalService","formValueChanged","optionsChanged","searchTermControl","selectionManager","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","refresh$","Subject","paramMap","getDefaultUiLanguage","getActiveChannel","activeChannel","defaultCurrencyCode","product$","getProductVariantsOptions","parent","startWith","variants$","term","toLowerCase","totalItems$","p","allUsedOptionIds","allUsedOptionGroupIds","setItemsPerPage","setPageNumber","page","onFormChanged","variantInfo","enabled","canDeactivate","addOptionGroup","fromComponent","locals","EMPTY","next","usedByVariantsCount","dialog","title","body","translationVars","count","buttons","type","label","returnValue","val","removeOptionGroupFromProduct","force","__typename","addOptionToGroup","productOptionGroupId","createProductOption","deleteProductOption","variantId","response","createNewVariant","ProductVariantsEditorComponent_div_2_Template","ProductVariantsEditorComponent_ng_template_20_Template","ProductVariantsEditorComponent_ng_template_23_Template","ProductVariantsEditorComponent_ng_template_26_Template","ProductVariantsEditorComponent_ng_template_29_Template","ProductVariantsEditorComponent_ng_template_32_Template","ProductVariantsEditorComponent_vdr_dt2_column_33_Template","ProductVariantsEditorComponent_ng_template_37_Template","ProductVariantsEditorComponent_ng_template_40_Template","ProductVariantsEditorComponent_ng_template_43_Template","ProductVariantsResolver","BaseEntityResolver","mapStream","createRoutes","pageService","path","component","PageComponent","locationId","breadcrumb","children","getPageTabRoutes","link","CanDeactivateDetailGuard","resolve","inject","DataService","params","createResolveData","productOptionsEditorBreadcrumb","selectValues","selectedValues","ApplyFacetDialogComponent","ngAfterViewInit","selector","FacetValueSelectorComponent","ApplyFacetDialogComponent_ng_template_0_Template","ApplyFacetDialogComponent_ng_template_2_Template","_r2","ASSET_DETAIL_QUERY","gql","ASSET_FRAGMENT","TAG_FRAGMENT","AssetDetailComponent","TypedBaseDetailComponent","FormGroup","tags","ngOnDestroy","destroy","onAssetChange","markAsDirty","updateAsset","AssetDetailComponent_button_5_Template","_c0","AssetListComponent","BaseListComponent","searchTerm$","BehaviorSubject","undefined","filterByTags$","uploading","setQueryFn","args","getAssetList","refetchOnChannelChange","assets","skip","searchTerm","contains","sort","SortOrder","tagsOperator","LogicalOperator","paginationConfig$","itemsPerPage$","currentPage$","totalItems","debounceTime","takeUntil","destroy$","refresh","allTags$","getTagList","filesSelected","files","createAssets","finalize","successCount","deleteAssets","showModalAndDelete","r","assetIds","res","items$","_c1","_r10","previewAsset","featuredAsset","selectAssets","ctx_r13","AssetsComponent_div_0_img_2_Template","AssetsComponent_div_0_div_3_Template","AssetsComponent_div_0_ng_container_5_Template","AssetsComponent_div_0_div_6_Template","updatePermissions","_r20","ctx_r19","_r22","ctx_r21","_r24","ctx_r23","AssetsComponent_ng_template_1_img_1_Template","AssetsComponent_ng_template_1_div_2_Template","AssetsComponent_ng_template_1_ng_container_3_Template","AssetsComponent_ng_template_1_button_4_Template","_r29","dropListDropped","asset_r26","ctx_r30","setAsFeatured","ctx_r32","removeAsset","index_r27","ctx_r25","isFeatured","AssetsComponent_ng_template_3_div_1_Template","compact","AssetsComponent","assetsSetter","slice","change","AssetPickerDialogComponent","size","concat","emitChangeEvent","asset","AssetPreviewDialogComponent","closable","moveItemInArray","previousContainer","container","hostVars","hostBindings","AssetsComponent_div_0_Template","AssetsComponent_ng_template_1_Template","AssetsComponent_ng_template_3_Template","AssignProductsToChannelDialogComponent_ng_template_0_ng_container_0_Template","AssignProductsToChannelDialogComponent_ng_template_0_ng_template_1_Template","isProductVariantMode","selectedChannel","row_r9","pricePreview","ctx_r10","AssignProductsToChannelDialogComponent_tr_33_ng_template_7_Template","AssignProductsToChannelDialogComponent_tr_33_ng_template_8_Template","currentChannel","_r11","ctx_r14","_r18","assign","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_4_Template","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_5_Template","_r15","AssignProductsToChannelDialogComponent","productVariantIds","priceFactorControl","UntypedFormControl","selectedChannelIdControl","activeChannelId$","client","userStatus","activeChannelId","allChannels$","getChannels","channels","availableChannels","ids","selectChannel","variantsPreview$","from","getTopVariants","factor","channelIds","assignVariantsToChannel","channelId","priceFactor","channel","assignProductsToChannel","productIds","_this","_asyncToGenerator","lastValueFrom","getProductVariants","filterOperator","in","AssignProductsToChannelDialogComponent_ng_template_0_Template","AssignProductsToChannelDialogComponent_ng_template_29_Template","AssignProductsToChannelDialogComponent_ng_template_30_Template","AssignProductsToChannelDialogComponent_tr_33_Template","AssignProductsToChannelDialogComponent_ng_template_35_Template","currentChannelIds","GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS","GET_VARIANTS_WITH_FACET_VALUES_BY_IDS","UPDATE_PRODUCTS_BULK","UPDATE_VARIANTS_BULK","item_r6","facetValue_r10","_r13","removeFacetValue","BulkAddFacetValuesDialogComponent_table_7_tr_2_div_4_Template","BulkAddFacetValuesDialogComponent_table_7_tr_2_vdr_facet_value_chip_6_Template","facetValues","BulkAddFacetValuesDialogComponent_table_7_tr_2_Template","addFacetValues","facetValuesRemoved","BulkAddFacetValuesDialogComponent","changeDetectorRef","mode","state","fetchData$","query","products","subscription","unsubscribe","facetValueId","fv","selectedFacetValueIds","sv","mutate","facetValueIds","BulkAddFacetValuesDialogComponent_ng_template_0_Template","BulkAddFacetValuesDialogComponent_table_7_Template","BulkAddFacetValuesDialogComponent_ng_template_8_Template","BulkAddFacetValuesDialogComponent_ng_template_10_Template","variant_r6","variant_r7","variant_r8","variant_r9","variant_r10","CollectionContentsComponent","previewUpdatedFilters","filterTermControl","isLoading","collectionIdChange$","parentIdChange$","filterChanges$","inheritFiltersChanges$","contentsCurrentPage$","queryParamMap","qpm","distinctUntilChanged","contentsItemsPerPage$","perPage","filterTerm$","setContentsPageNumber","asObservable","inheritFilters","collection$","parentId","filterTerm","filters","filterClause","collection","previewCollectionVariants","catchError","getCollectionContents","contents$","contentsTotalItems$","ngOnChanges","changes","collectionId","currentValue","updatedFilters","complete","setParam","setContentsItemsPerPage","navigate","relativeTo","queryParams","n","queryParamsHandling","replaceUrl","contentQueries","dirIndex","TemplateRef","CollectionContentsComponent_ng_container_3_Template","CollectionContentsComponent_ng_template_14_Template","CollectionContentsComponent_ng_template_17_Template","CollectionContentsComponent_ng_template_20_Template","CollectionContentsComponent_ng_template_23_Template","CollectionContentsComponent_ng_template_26_Template","headerTemplate","onToggleAllClick","areAllCurrentItemsSelected","sort_r15","sortOrder","ngIf","toggleSortOrder","CollectionDataTableComponent_th_7_div_4_clr_icon_2_Template","CollectionDataTableComponent_th_7_div_4_clr_icon_3_Template","CollectionDataTableComponent_th_7_div_4_clr_icon_4_Template","CollectionDataTableComponent_th_7_div_4_div_5_Template","CollectionDataTableComponent_th_7_div_4_Template","column_r12","expand","align","heading","activeFilter_r28","ctx_r26","ctx_r27","CollectionDataTableComponent_tr_12_ng_container_8_vdr_data_table_filters_2_Template","CollectionDataTableComponent_tr_12_ng_container_8_vdr_data_table_filters_3_Template","activeFilters","_r30","ctx_r29","toggleSearchFilterRow","CollectionDataTableComponent_tr_12_ng_container_6_Template","CollectionDataTableComponent_tr_12_ng_container_7_Template","CollectionDataTableComponent_tr_12_ng_container_8_Template","showSearchFilterRow","visibleSortedColumns","searchComponent","customSearchTemplate","item_r31","i_r32","emptyStateLabel","_r34","ctx_r33","itemsPerPageChange","_c2","currentStart","currentEnd","_r36","pageChange","_r45","item_r37","onRowClick","ctx_r40","activeIndex","absoluteIndex","isSelected","CollectionDataTableComponent_ng_template_22_td_3_ng_container_2_Template","ctx_r41","column_r47","_c3","depth_r38","CollectionDataTableComponent_ng_template_22_ng_container_5_ng_container_1_Template","subCollection_r50","CollectionDataTableComponent_ng_template_22_td_2_Template","CollectionDataTableComponent_ng_template_22_td_3_Template","CollectionDataTableComponent_ng_template_22_ng_container_5_Template","_c4","getSubcollections","CollectionDataTableComponent","DataTable2Component","localStorageService","dragDrop","changeOrder","dragRefs","sortPredicate","dropList","getSortedItems","subCollections","allCollections","subCollectionMatches","forEach","collectionRowList","removeItem","ref","toArray","dropContainer","_dragRef","_withDropContainer","_dropListRef","addItem","onDrop","isTopLevel","breadcrumbs","pageIndexOffset","parentIndex","findIndex","adjustedIndex","currentIndex","splice","previousIndex","adjustedPreviousIndex","CdkDropList","CdkDrag","CollectionDataTableComponent_th_6_Template","CollectionDataTableComponent_th_7_Template","onColumnReorder","onColumnsReset","CollectionDataTableComponent_tr_12_Template","CollectionDataTableComponent_ng_container_14_Template","CollectionDataTableComponent_tr_17_Template","CollectionDataTableComponent_vdr_items_per_page_controls_19_Template","CollectionDataTableComponent_div_20_Template","CollectionDataTableComponent_vdr_pagination_controls_21_Template","CollectionDataTableComponent_ng_template_22_Template","disableSelect","selection","uiLanguage$","sortedColumns","_c6","trackByFn","_r17","create","ctx_r18","assetsChanged","CollectionDetailComponent_ng_template_11_button_0_Template","entity_r21","breadcrumb_r24","CollectionDetailComponent_vdr_page_block_28_li_3_a_1_Template","CollectionDetailComponent_vdr_page_block_28_li_3_a_2_Template","CollectionDetailComponent_vdr_page_block_28_li_3_ng_container_3_Template","isFirst_r25","isLast_r26","CollectionDetailComponent_vdr_page_block_28_li_3_Template","entity_r22","i_r33","_r35","ctx_r34","removeFilter","filter_r32","ctx_r12","getFilterDefinition","filter_r37","_r39","ctx_r38","addFilter","description","CollectionDetailComponent_div_64_button_9_Template","allFilters","_r42","toggleLivePreview","count_r40","tmp_1_0","tmp_3_0","livePreview","COLLECTION_DETAIL_QUERY","COLLECTION_FRAGMENT","CollectionDetailComponent","slug","unicodePatternValidator","visible","assetChanges","filterRemoved$","getCollectionFilters","collectionFilters","filtersFormArray","inheritFiltersControl","inheritFilters$","updatedFilters$","merge","statusChanges","touched","mapOperationsToInputs","_filter","arg","arguments","parentId$","pm","f","updateSlug","nameValue","slugControl","currentSlugIsEmpty","collectionFilter","filtersArray","argsHash","output","getConfigArgValue","removeAt","markAsTouched","getUpdatedCollection","isPrivate","createCollection","category","updateCollection","contentsComponent","set","JSON","stringify","patchValue","formArray","clear","featuredAssetId","operations","formValueOperations","j","encodeConfigArgValue","CollectionDetailComponent_button_9_Template","CollectionDetailComponent_ng_template_11_Template","CollectionDetailComponent_ng_container_23_Template","CollectionDetailComponent_ng_template_24_Template","CollectionDetailComponent_vdr_card_26_Template","CollectionDetailComponent_vdr_page_block_28_Template","CollectionDetailComponent_vdr_card_46_Template","CollectionDetailComponent_ng_container_59_Template","CollectionDetailComponent_ng_template_60_Template","CollectionDetailComponent_ng_container_63_Template","CollectionDetailComponent_div_64_Template","CollectionDetailComponent_ng_template_72_Template","isNew$","_r4","_c5","CollectionBreadcrumbPipe","transform","collection_r5","depth_r7","_r16","collection_r6","toggleExpanded","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_1_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_2_Template","expandedIds","Yjl","pure","MoveCollectionsDialogComponent_ng_template_14_clr_icon_1_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_Template","MoveCollectionsDialogComponent_ng_template_14_button_3_Template","_r19","item_r26","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_div_1_Template","breadcrumbs_r22","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_Template","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_span_2_Template","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_Template","collection_r20","collection_r28","MoveCollectionsDialogComponent","i18nService","expandedIds$","getCollectionsResult","getCollections","topLevelOnly","refetch","rootCollectionId$","collections","rootCollectionId","translate","position","subCollections$","MoveCollectionsDialogComponent_ng_template_0_Template","MoveCollectionsDialogComponent_ng_template_11_Template","MoveCollectionsDialogComponent_ng_template_14_Template","MoveCollectionsDialogComponent_ng_template_17_Template","MoveCollectionsDialogComponent_ng_template_20_Template","deleteCollectionsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","getItemName","bulkDelete","deleteCollections","moveCollectionsBulkAction","icon","onClick","injector","hostComponent","clearSelection","ModalService","NotificationService","inputs","moveCollection","assignCollectionsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","collectionIds","assignCollectionsToChannel","removeCollectionsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","removeCollectionsFromChannel","collection_r13","collection_r14","collection_r15","collection_r16","depth_r18","_r26","collection_r17","CollectionListComponent_ng_template_11_ng_template_24_button_2_clr_icon_1_Template","CollectionListComponent_ng_template_11_ng_template_24_button_2_clr_icon_2_Template","ctx_r20","CollectionListComponent_ng_template_11_ng_template_24_clr_icon_1_Template","CollectionListComponent_ng_template_11_ng_template_24_button_2_Template","item_r34","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_ng_container_1_div_1_Template","breadcrumbs_r30","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_ng_container_1_Template","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_span_2_Template","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_Template","collection_r36","CollectionListComponent_ng_template_11_ng_template_33_vdr_chip_0_Template","CollectionListComponent_ng_template_11_ng_template_33_vdr_chip_1_Template","collection_r37","collection_r40","customField_r41","sorts","_r43","ctx_r42","ctx_r44","ctx_r45","onRearrange","CollectionListComponent_ng_template_11_ng_template_12_Template","CollectionListComponent_ng_template_11_ng_template_15_Template","CollectionListComponent_ng_template_11_ng_template_18_Template","CollectionListComponent_ng_template_11_ng_template_21_Template","CollectionListComponent_ng_template_11_ng_template_24_Template","CollectionListComponent_ng_template_11_ng_template_27_Template","CollectionListComponent_ng_template_11_ng_template_30_Template","CollectionListComponent_ng_template_11_ng_template_33_Template","CollectionListComponent_ng_template_11_ng_template_36_Template","CollectionListComponent_ng_template_11_vdr_dt2_custom_field_column_37_Template","activeCollectionIndex$","ctx_r46","activeCollectionId$","CollectionListComponent_ng_template_12_ng_container_0_Template","CollectionListComponent","TypedBaseListComponent","createFilterCollection","addDateFilters","kind","filterField","toFilterInput","eq","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetCollectionListDocument","getItems","setVariables","_take","createFilterInput","createSortInput","refreshListOnChanges","activeCollectionTitle$","match","closeContents","contents","setContentLanguage","expanded","CollectionListComponent_a_8_Template","CollectionListComponent_ng_template_11_Template","CollectionListComponent_ng_template_12_Template","contentLanguage$","CollectionTreeService","allMoveListItems","_rearrange$","_delete$","rearrange$","delete$","setCollectionTree","tree","collectionTree","resetMoveList","getMoveListItems","calculateAllMoveListItems","ancestorIdPath","has","newParentId","onMove","onDelete","visit","node","parentPath","child","Set","collection_r2","CollectionTreeNodeComponent_div_3_button_5_clr_icon_1_Template","CollectionTreeNodeComponent_div_3_button_5_clr_icon_2_Template","expandAll","item_r19","move","hasUpdatePermission$","activeCollectionId","toggleSelection","CollectionTreeNodeComponent_div_3_button_5_Template","CollectionTreeNodeComponent_div_3_ng_template_6_Template","CollectionTreeNodeComponent_div_3_vdr_chip_10_Template","CollectionTreeNodeComponent_div_3_div_19_Template","CollectionTreeNodeComponent_div_3_a_24_Template","restoredCtx","i_r3","moveUp","moveDown","CollectionTreeNodeComponent_div_3_button_39_Template","delete","CollectionTreeNodeComponent_div_3_vdr_collection_tree_node_46_Template","depth","_r5","moveListItems","hasDeletePermission$","CollectionTreeNodeComponent","collectionTreeService","parentName","permissions$","permissions","perms","selectionChanges$","expandAllChange","previousValue","drop","arrayToTree","nodes","currentState","topLevelNodes","mappedArr","currentStateMap","treeToMap","nodeMap","Map","hasOwnProperty","mappedElem","CollectionTreeNodeComponent_div_3_Template","i5","i14","styles","changeDetection","CollectionTreeComponent","rearrange","deleteCollection","variant_r3","outputs","CollectionTreeComponent_vdr_collection_tree_node_0_Template","ConfirmVariantDeletionDialogComponent","ConfirmVariantDeletionDialogComponent_ng_template_0_Template","ConfirmVariantDeletionDialogComponent_li_4_Template","ConfirmVariantDeletionDialogComponent_ng_template_5_Template","FacetDetailComponent_ng_template_11_button_0_Template","entity_r14","customValueFields","i_r20","updateValueCode","FacetDetailComponent_vdr_card_42_table_2_tr_13_td_8_Template","deleteFacetValue","value_r19","FacetDetailComponent_vdr_card_42_table_2_ng_container_10_Template","FacetDetailComponent_vdr_card_42_table_2_tr_13_Template","addFacetValue","FacetDetailComponent_vdr_card_42_table_2_Template","FacetDetailComponent_vdr_card_42_button_4_Template","getValuesFormArray","FACET_DETAIL_QUERY","FACET_WITH_VALUES_FRAGMENT","FacetDetailComponent","facet","currentCode","customValueFieldIsSet","valuesFormArray","valueGroup","newValue","fieldDef","insert","facetForm","newFacet","getUpdatedFacet","createFacet","valuesArray","updateFacet","createdValues","getCreatedFacetValues","createFacetValues","GetFacetDetailDocument","updatedValues","getUpdatedFacetValues","updateFacetValues","deleted","deleteFacetValues","currentValuesFormArray","valueTranslation","valueControl","fieldValue","facetFormGroup","facetId","dirtyValues","formRow","toString","dirtyValueValues","FacetDetailComponent_button_9_Template","FacetDetailComponent_ng_template_11_Template","FacetDetailComponent_ng_container_23_Template","FacetDetailComponent_ng_template_24_Template","FacetDetailComponent_vdr_page_entity_info_27_Template","FacetDetailComponent_vdr_card_40_Template","FacetDetailComponent_vdr_card_42_Template","deleteFacetsBulkAction","shouldRetryItem","retrying","deleteFacets","assignFacetsToChannelBulkAction","facetIds","assignFacetsToChannel","removeFacetsFromChannelBulkAction","removeFacetsFromChannel","isErrorResult","removeFacetsFromChannelBulkAction2","getTranslationVars","getChannelCodeFromUserStatus","iconClass","isVisible","currentChannelIsNotDefault","res2","removedCount","errors","errorIds","result2","notRemovedCount","then","channelCode","facet_r9","facet_r10","facet_r11","facet_r12","facet_r13","FacetListComponent_ng_template_34_vdr_chip_0_Template","FacetListComponent_ng_template_34_vdr_chip_1_Template","facet_r14","value_r20","facet_r17","initialLimit","toggleDisplayLimit","FacetListComponent_ng_template_37_button_3_ng_container_1_Template","FacetListComponent_ng_template_37_button_3_ng_template_2_Template","displayLimit","FacetListComponent_ng_template_37_vdr_facet_value_chip_1_Template","FacetListComponent_ng_template_37_button_3_Template","customField_r29","FACET_LIST_QUERY","FacetListComponent","GetFacetListDocument","facets","FacetListComponent_a_8_Template","FacetListComponent_ng_template_19_Template","FacetListComponent_ng_template_22_Template","FacetListComponent_ng_template_25_Template","FacetListComponent_ng_template_28_Template","FacetListComponent_ng_template_31_Template","FacetListComponent_ng_template_34_Template","FacetListComponent_ng_template_37_Template","FacetListComponent_vdr_dt2_custom_field_column_38_Template","group_r2","_r6","handleEnter","generateVariants","location_r17","selectedStockLocationId","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_option_3_Template","stockLocations_r12","variant_r24","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_1_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_2_Template","variantFormValues","GenerateProductVariantsComponent_ng_container_5_div_4_th_4_Template","GenerateProductVariantsComponent_ng_container_5_div_4_th_5_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_Template","GenerateProductVariantsComponent_ng_container_5_clr_alert_1_Template","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_Template","GenerateProductVariantsComponent_ng_container_5_div_4_Template","DEFAULT_VARIANT_CODE","GenerateProductVariantsComponent","variantsChange","stockLocations$","GetStockLocationListDocument","stockLocations","groupNameInputs","sum","generateAllCombinations","nonNullable","copyFromDefault","onFormChange","copyValuesToPristine","optionValueInputComponent","stopPropagation","formControl","correspondingFormControl","emitEvent","variantsToCreate","prop","GenerateProductVariantsComponent_div_0_Template","GenerateProductVariantsComponent_ng_container_5_Template","switchMapTo","innerObservable","resultSelector","isFunction","variant_r14","variant_r15","variant_r16","asset_r21","ProductVariantListComponent_ng_template_20_img_1_Template","ProductVariantListComponent_ng_template_20_ng_template_2_Template","variant_r17","variant_r23","ProductVariantListComponent_ng_template_29_vdr_chip_0_Template","ProductVariantListComponent_ng_template_29_vdr_chip_1_Template","variant_r27","variant_r28","stockLevel_r31","stockAllocated","ProductVariantListComponent_ng_template_38_vdr_chip_0_span_4_Template","stockLocation","ProductVariantListComponent_ng_template_38_vdr_chip_0_Template","variant_r29","field_r34","ProductVariantListComponent","hideLanguageSelect","addFilters","inputType","addSorts","ProductVariantListQueryDocument","ProductVariantListComponent_vdr_page_block_0_Template","ProductVariantListComponent_ng_template_11_Template","ProductVariantListComponent_ng_template_14_Template","ProductVariantListComponent_ng_template_17_Template","ProductVariantListComponent_ng_template_20_Template","ProductVariantListComponent_ng_template_23_Template","ProductVariantListComponent_ng_template_26_Template","ProductVariantListComponent_ng_template_29_Template","ProductVariantListComponent_ng_template_32_Template","ProductVariantListComponent_ng_template_35_Template","ProductVariantListComponent_ng_template_38_Template","ProductVariantListComponent_vdr_dt2_custom_field_column_39_Template","ProductDetailComponent_ng_template_12_button_0_Template","channel_r23","removeFromChannel","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_ng_container_3_vdr_chip_1_Template","ctx_r22","isDefaultChannel","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_ng_container_3_Template","assignToChannel","productChannels$","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_Template","ProductDetailComponent_ng_container_21_vdr_card_1_Template","optionGroup_r33","ProductDetailComponent_vdr_card_23_vdr_chip_3_Template","ProductDetailComponent_vdr_card_23_a_6_Template","facetValue_r34","removeProductFacetValue","_r38","ctx_r37","selectProductFacetValue","entity_r39","_r41","GET_PRODUCT_DETAIL","PRODUCT_DETAIL_FRAGMENT","ProductDetailComponent","productFacetValues$","formFacetValueIdChanges$","getFacetValues","facetValues$","DEFAULT_CHANNEL_CODE","removeProductsFromChannel","assignVariantToChannel","removeVariantFromChannel","removeVariantsFromChannel","displayFacetValueModal","productGroup","currentFacetValueIds","newProduct","getUpdatedProduct","console","updateSlugAfterSave","productFormGroup","results","firstResult","isUpdateMutation","ProductDetailComponent_button_10_Template","ProductDetailComponent_ng_template_12_Template","ProductDetailComponent_clr_toggle_wrapper_20_Template","ProductDetailComponent_ng_container_21_Template","ProductDetailComponent_vdr_card_23_Template","ProductDetailComponent_vdr_facet_value_chip_27_Template","ProductDetailComponent_button_30_Template","ProductDetailComponent_vdr_card_31_Template","ProductDetailComponent_div_42_Template","ProductDetailComponent_vdr_card_54_Template","ProductDetailComponent_div_62_Template","ProductDetailComponent_ng_template_64_Template","ProductDetailComponent_div_66_Template","tmp_16_0","deleteProductsBulkAction","deleteProducts","assignProductsToChannelBulkAction","isMultiChannel","removeProductsFromChannelBulkAction","assignFacetValuesToProductsBulkAction","product_r10","product_r11","product_r12","asset_r17","ProductListComponent_ng_template_36_img_1_Template","ProductListComponent_ng_template_36_ng_template_2_Template","product_r13","product_r18","product_r19","ProductListComponent_ng_template_45_vdr_chip_0_Template","ProductListComponent_ng_template_45_vdr_chip_1_Template","product_r20","product_r23","variantList","customField_r24","ProductListComponent","jobQueueService","pendingSearchIndexUpdates","FacetValueFormInputComponent","serializeValue","deserializeValue","getLabel","ProductListQueryDocument","rebuildSearchIndex","reindex","info","addJob","job","JobState","time","Intl","NumberFormat","format","duration","indexedItemCount","deleteProduct","delay","ProductListComponent_a_8_Template","ProductListComponent_ng_template_27_Template","ProductListComponent_ng_template_30_Template","ProductListComponent_ng_template_33_Template","ProductListComponent_ng_template_36_Template","ProductListComponent_ng_template_39_Template","ProductListComponent_ng_template_42_Template","ProductListComponent_ng_template_45_Template","ProductListComponent_ng_template_48_Template","ProductListComponent_vdr_dt2_custom_field_column_49_Template","taxRate$","grossPrice$","VariantPriceDetailComponent","priceChange$","taxCategoryIdChange$","taxRates$","getTaxRatesSimple","taxRates","activeChannel$","taxCategoryId","defaultTaxZone","applicableRate","taxRate","zone","Math","round","item_r2","selectedVariantId","onSelect","ProductVariantQuickJumpComponent_ng_select_0_ng_template_3_Template","searchFn","priceIncludesTax","VariantPriceDetailComponent_div_3_Template","VariantPriceDetailComponent_div_4_Template","ProductVariantQuickJumpComponent","GetProductVariantsQuickJumpDocument","ProductVariantQuickJumpComponent_ng_select_0_Template","tmp_0_0","availableLanguages_r3","ProductVariantDetailComponent_ng_container_4_vdr_language_selector_1_Template","_r9","stockLevelsForm","pricesForm","optionGroupCode","option_r24","ProductVariantDetailComponent_form_10_vdr_card_7_vdr_chip_3_Template","ProductVariantDetailComponent_form_10_vdr_card_7_a_6_Template","facetValue_r26","_r28","selectFacetValue","entity_r31","taxCategory_r32","_r37","price_r33","toggleDeletePrice","channelDefaultCurrencyCode","ProductVariantDetailComponent_form_10_div_43_div_7_Template","channelPriceIncludesTax$","currencyCode_r42","addPriceInCurrency","ProductVariantDetailComponent_form_10_ng_container_44_div_1_button_8_Template","unusedCurrencyCodes_r39","ProductVariantDetailComponent_form_10_ng_container_44_div_1_Template","stockLevel_r46","tmp_2_0","tmp_5_0","tmp_6_0","stockLocation_r50","_r52","ctx_r51","addStockLocation","ProductVariantDetailComponent_form_10_ng_container_75_div_1_button_8_Template","unusedStockLocations_r47","ProductVariantDetailComponent_form_10_ng_container_75_div_1_Template","ProductVariantDetailComponent_form_10_clr_toggle_wrapper_6_Template","ProductVariantDetailComponent_form_10_vdr_card_7_Template","ProductVariantDetailComponent_form_10_vdr_facet_value_chip_11_Template","ProductVariantDetailComponent_form_10_button_14_Template","ProductVariantDetailComponent_form_10_vdr_page_entity_info_16_Template","ProductVariantDetailComponent_form_10_vdr_card_30_Template","_r55","ctx_r54","ProductVariantDetailComponent_form_10_option_41_Template","ProductVariantDetailComponent_form_10_div_43_Template","ProductVariantDetailComponent_form_10_ng_container_44_Template","ProductVariantDetailComponent_form_10_div_74_Template","ProductVariantDetailComponent_form_10_ng_container_75_Template","taxCategories$","unusedCurrencyCodes$","GlobalFlag","TRUE","FALSE","INHERIT","tmp_37_0","inventoryIsNotTracked","globalOutOfStockThreshold","unusedStockLocation$","ProductVariantDetailComponent","customOptionFields","useGlobalOutOfStockThreshold","outOfStockThreshold","trackInventory","getGlobalSettings","globalSettings","globalTrackInventory","result$","availableCurrencyCodes$","availableCurrencyCodes","prices","currencyCodes","usedIds","l","pricesIncludeTax","stockLevels$","deleteFormControl","stockLocationName","pick","getUpdatedVariant","ProductVariantUpdateMutationDocument","taxCategory","stockLevel","variantFormGroup","ProductVariantDetailComponent_ng_container_4_Template","ProductVariantDetailComponent_button_9_Template","ProductVariantDetailComponent_form_10_Template","assignProductVariantsToChannelBulkAction","removeProductVariantsFromChannelBulkAction","removeProductVariantsFromChannel","deleteProductVariantsBulkAction","deleteProductVariants","optionGroup_r2","featuredAsset_r13","optionGroupName","option_r14","formGroup_r6","ProductVariantsTableComponent_tr_22_ng_container_1_img_4_Template","ProductVariantsTableComponent_tr_22_ng_container_1_ng_template_5_Template","ProductVariantsTableComponent_tr_22_ng_container_1_ng_container_17_Template","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_21_Template","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_22_Template","getFeaturedAsset","channelPriceIncludesTax","ProductVariantsTableComponent_tr_22_ng_container_1_Template","formGroupMap","ProductVariantsTableComponent","buildFormGroupMap","pendingAssetChanges","controlGroup","StockLocationDetailComponent_ng_template_7_button_0_Template","entity_r10","paginationConfig","ProductVariantsTableComponent_ng_container_10_Template","ProductVariantsTableComponent_tr_22_Template","STOCK_LOCATION_DETAIL_FRAGMENT","GET_STOCK_LOCATION_DETAIL","CREATE_STOCK_LOCATION","UPDATE_STOCK_LOCATION","StockLocationDetailComponent","CreateStockLocationDocument","createStockLocation","UpdateStockLocationDocument","StockLocationDetailComponent_button_5_Template","StockLocationDetailComponent_ng_template_7_Template","StockLocationDetailComponent_vdr_card_12_Template","StockLocationDetailComponent_vdr_card_26_Template","deleteStockLocationsBulkAction","DeleteStockLocationsDocument","deleteStockLocations","assignStockLocationsToChannelBulkAction","stockLocationIds","AssignStockLocationsToChannelDocument","assignStockLocationsToChannel","removeStockLocationsFromChannelBulkAction","RemoveStockLocationsFromChannelDocument","removeStockLocationsFromChannel","stockLocation_r7","stockLocation_r8","stockLocation_r9","stockLocation_r10","stockLocation_r11","field_r12","GET_STOCK_LOCATION_LIST","StockLocationListComponent","StockLocationListComponent_a_5_Template","StockLocationListComponent_ng_template_16_Template","StockLocationListComponent_ng_template_19_Template","StockLocationListComponent_ng_template_22_Template","StockLocationListComponent_ng_template_25_Template","StockLocationListComponent_ng_template_28_Template","StockLocationListComponent_vdr_dt2_custom_field_column_29_Template","customFieldsForm","update","UpdateProductOptionDialogComponent","updateVariantName","codeInputTouched","productOption","activeLanguage","cfCurrentTranslation","UpdateProductOptionDialogComponent_ng_template_0_Template","UpdateProductOptionDialogComponent_section_14_Template","UpdateProductOptionDialogComponent_ng_template_15_Template","CatalogModule","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetProductDetailDocument","entityKey","getBreadcrumbs","GetStockLocationDetailDocument","GetProductVariantDetailDocument","CollectionDetailQueryDocument","AssetDetailQueryDocument","oAB","cJS","ROUTES","useFactory","deps","PageService","imports","SharedModule","RouterModule","PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT","PRODUCT_LIST_QUERY","PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_DETAIL_QUERY","PRODUCT_VARIANT_UPDATE_MUTATION","PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_LIST_QUERY"],"sourceRoot":"webpack:///","sources":["./src/lib/catalog/src/providers/product-detail/replace-last.ts","./src/lib/catalog/src/providers/product-detail/product-detail.service.ts","./src/lib/catalog/src/components/product-options-editor/product-options-editor.component.html","./src/lib/catalog/src/components/product-options-editor/product-options-editor.component.ts","./src/lib/catalog/src/components/create-product-option-group-dialog/create-product-option-group-dialog.component.html","./src/lib/catalog/src/components/create-product-option-group-dialog/create-product-option-group-dialog.component.ts","./src/lib/catalog/src/components/create-product-variant-dialog/create-product-variant-dialog.component.html","./src/lib/catalog/src/components/create-product-variant-dialog/create-product-variant-dialog.component.ts","./src/lib/catalog/src/components/option-value-input/option-value-input.component.html","./src/lib/catalog/src/components/option-value-input/option-value-input.component.ts","./src/lib/catalog/src/components/product-variants-editor/product-variants-editor.component.html","./src/lib/catalog/src/components/product-variants-editor/product-variants-editor.component.ts","./src/lib/catalog/src/providers/routing/product-variants-resolver.ts","./src/lib/catalog/src/catalog.routes.ts","./src/lib/catalog/src/components/apply-facet-dialog/apply-facet-dialog.component.html","./src/lib/catalog/src/components/apply-facet-dialog/apply-facet-dialog.component.ts","./src/lib/catalog/src/components/asset-detail/asset-detail.component.html","./src/lib/catalog/src/components/asset-detail/asset-detail.component.ts","./src/lib/catalog/src/components/asset-list/asset-list.component.ts","./src/lib/catalog/src/components/asset-list/asset-list.component.html","./src/lib/catalog/src/components/assets/assets.component.html","./src/lib/catalog/src/components/assets/assets.component.ts","./src/lib/catalog/src/components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component.html","./src/lib/catalog/src/components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component.ts","./src/lib/catalog/src/components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql.ts","./src/lib/catalog/src/components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component.html","./src/lib/catalog/src/components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component.ts","./src/lib/catalog/src/components/collection-contents/collection-contents.component.html","./src/lib/catalog/src/components/collection-contents/collection-contents.component.ts","./src/lib/catalog/src/components/collection-data-table/collection-data-table.component.html","./src/lib/catalog/src/components/collection-data-table/collection-data-table.component.ts","./src/lib/catalog/src/components/collection-detail/collection-detail.component.html","./src/lib/catalog/src/components/collection-detail/collection-detail.component.ts","./src/lib/catalog/src/components/collection-list/collection-breadcrumb.pipe.ts","./src/lib/catalog/src/components/move-collections-dialog/move-collections-dialog.component.html","./src/lib/catalog/src/components/move-collections-dialog/move-collections-dialog.component.ts","./src/lib/catalog/src/components/collection-list/collection-list-bulk-actions.ts","./src/lib/catalog/src/components/collection-list/collection-list.component.html","./src/lib/catalog/src/components/collection-list/collection-list.component.ts","./src/lib/catalog/src/components/collection-tree/collection-tree.service.ts","./src/lib/catalog/src/components/collection-tree/collection-tree-node.component.html","./src/lib/catalog/src/components/collection-tree/collection-tree-node.component.ts","./src/lib/catalog/src/components/collection-tree/array-to-tree.ts","./src/lib/catalog/src/components/collection-tree/collection-tree.component.html","./src/lib/catalog/src/components/collection-tree/collection-tree.component.ts","./src/lib/catalog/src/components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component.html","./src/lib/catalog/src/components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component.ts","./src/lib/catalog/src/components/facet-detail/facet-detail.component.html","./src/lib/catalog/src/components/facet-detail/facet-detail.component.ts","./src/lib/catalog/src/components/facet-list/facet-list-bulk-actions.ts","./src/lib/catalog/src/components/facet-list/facet-list.component.html","./src/lib/catalog/src/components/facet-list/facet-list.component.ts","./src/lib/catalog/src/components/generate-product-variants/generate-product-variants.component.html","./src/lib/catalog/src/components/generate-product-variants/generate-product-variants.component.ts","../node_modules/rxjs/dist/esm/internal/operators/switchMapTo.js","./src/lib/catalog/src/components/product-variant-list/product-variant-list.component.html","./src/lib/catalog/src/components/product-variant-list/product-variant-list.component.ts","./src/lib/catalog/src/components/product-detail/product-detail.component.html","./src/lib/catalog/src/components/product-detail/product-detail.component.ts","./src/lib/catalog/src/components/product-list/product-list-bulk-actions.ts","./src/lib/catalog/src/components/product-list/product-list.component.html","./src/lib/catalog/src/components/product-list/product-list.component.ts","./src/lib/catalog/src/components/variant-price-detail/variant-price-detail.component.html","./src/lib/catalog/src/components/variant-price-detail/variant-price-detail.component.ts","./src/lib/catalog/src/components/product-variant-quick-jump/product-variant-quick-jump.component.html","./src/lib/catalog/src/components/product-variant-quick-jump/product-variant-quick-jump.component.ts","./src/lib/catalog/src/components/product-variant-detail/product-variant-detail.component.html","./src/lib/catalog/src/components/product-variant-detail/product-variant-detail.component.ts","./src/lib/catalog/src/components/product-variant-list/product-variant-list-bulk-actions.ts","./src/lib/catalog/src/components/product-variants-table/product-variants-table.component.html","./src/lib/catalog/src/components/product-variants-table/product-variants-table.component.ts","./src/lib/catalog/src/components/stock-location-detail/stock-location-detail.component.html","./src/lib/catalog/src/components/stock-location-detail/stock-location-detail.component.ts","./src/lib/catalog/src/components/stock-location-list/stock-location-list-bulk-actions.ts","./src/lib/catalog/src/components/stock-location-list/stock-location-list.component.html","./src/lib/catalog/src/components/stock-location-list/stock-location-list.component.ts","./src/lib/catalog/src/components/update-product-option-dialog/update-product-option-dialog.component.html","./src/lib/catalog/src/components/update-product-option-dialog/update-product-option-dialog.component.ts","./src/lib/catalog/src/catalog.module.ts","./src/lib/catalog/src/components/product-list/product-list.graphql.ts","./src/lib/catalog/src/components/product-variant-detail/product-variant-detail.graphql.ts","./src/lib/catalog/src/components/product-variant-list/product-variant-list.graphql.ts"],"sourcesContent":["/**\r\n * @description\r\n * Like String.prototype.replace(), but replaces the last instance\r\n * rather than the first.\r\n */\r\nexport function replaceLast(target: string | undefined | null, search: string, replace: string): string {\r\n    if (!target) {\r\n        return '';\r\n    }\r\n    const lastIndex = target.lastIndexOf(search);\r\n    if (lastIndex === -1) {\r\n        return target;\r\n    }\r\n    const head = target.substr(0, lastIndex);\r\n    const tail = target.substr(lastIndex).replace(search, replace);\r\n    return head + tail;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    CreateProductInput,\r\n    CreateProductVariantInput,\r\n    DataService,\r\n    DeletionResult,\r\n    FacetWithValuesFragment,\r\n    findTranslation,\r\n    GetProductDetailQuery,\r\n    GetProductWithVariantsQuery,\r\n    LanguageCode,\r\n    UpdateProductInput,\r\n    UpdateProductMutation,\r\n    UpdateProductOptionInput,\r\n    UpdateProductVariantInput,\r\n    UpdateProductVariantsMutation,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\r\nimport { map, mergeMap, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nimport { CreateProductVariantsConfig } from '../../components/generate-product-variants/generate-product-variants.component';\r\n\r\nimport { replaceLast } from './replace-last';\r\n\r\n/**\r\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\r\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProductDetailService {\r\n    constructor(private dataService: DataService) {}\r\n\r\n    getTaxCategories() {\r\n        return this.dataService.settings\r\n            .getTaxCategories()\r\n            .mapSingle(data => data.taxCategories.items)\r\n            .pipe(shareReplay(1));\r\n    }\r\n\r\n    createProductWithVariants(\r\n        input: CreateProductInput,\r\n        createVariantsConfig: CreateProductVariantsConfig,\r\n        languageCode: LanguageCode,\r\n    ) {\r\n        const createProduct$ = this.dataService.product.createProduct(input);\r\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\r\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\r\n\r\n        return forkJoin(createProduct$, createOptionGroups$).pipe(\r\n            mergeMap(([{ createProduct }, optionGroups]) => {\r\n                const addOptionsToProduct$ = optionGroups.length\r\n                    ? forkJoin(\r\n                          optionGroups.map(optionGroup =>\r\n                              this.dataService.product.addOptionGroupToProduct({\r\n                                  productId: createProduct.id,\r\n                                  optionGroupId: optionGroup.id,\r\n                              }),\r\n                          ),\r\n                      )\r\n                    : of([]);\r\n                return addOptionsToProduct$.pipe(map(() => ({ createProduct, optionGroups })));\r\n            }),\r\n            mergeMap(({ createProduct, optionGroups }) => {\r\n                const variants = createVariantsConfig.variants.map(v => {\r\n                    const optionIds = optionGroups.length\r\n                        ? v.optionValues.map((optionName, index) => {\r\n                              const option = optionGroups[index].options.find(o => o.name === optionName);\r\n                              if (!option) {\r\n                                  throw new Error(\r\n                                      `Could not find a matching ProductOption \"${optionName}\" when creating variant`,\r\n                                  );\r\n                              }\r\n                              return option.id;\r\n                          })\r\n                        : [];\r\n                    return {\r\n                        ...v,\r\n                        optionIds,\r\n                    };\r\n                });\r\n                const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\r\n                return this.createProductVariants(\r\n                    createProduct,\r\n                    variants,\r\n                    options,\r\n                    languageCode,\r\n                    createVariantsConfig.stockLocationId,\r\n                );\r\n            }),\r\n        );\r\n    }\r\n\r\n    createProductOptionGroups(groups: Array<{ name: string; values: string[] }>, languageCode: LanguageCode) {\r\n        return groups.length\r\n            ? forkJoin(\r\n                  groups.map(c =>\r\n                      this.dataService.product\r\n                          .createProductOptionGroups({\r\n                              code: normalizeString(c.name, '-'),\r\n                              translations: [{ languageCode, name: c.name }],\r\n                              options: c.values.map(v => ({\r\n                                  code: normalizeString(v, '-'),\r\n                                  translations: [{ languageCode, name: v }],\r\n                              })),\r\n                          })\r\n                          .pipe(map(data => data.createProductOptionGroup)),\r\n                  ),\r\n              )\r\n            : of([]);\r\n    }\r\n\r\n    createProductVariants(\r\n        product: { name: string; id: string },\r\n        variantData: Array<{ price: number; sku: string; stock: number; optionIds: string[] }>,\r\n        options: Array<{ id: string; name: string }>,\r\n        languageCode: LanguageCode,\r\n        stockLocationId: string,\r\n    ) {\r\n        const variants: CreateProductVariantInput[] = variantData.map(v => {\r\n            const name = options.length\r\n                ? `${product.name} ${v.optionIds\r\n                      .map(id => options.find(o => o.id === id))\r\n                      .filter(notNullOrUndefined)\r\n                      .map(o => o.name)\r\n                      .join(' ')}`\r\n                : product.name;\r\n            return {\r\n                productId: product.id,\r\n                price: v.price,\r\n                sku: v.sku,\r\n                translations: [\r\n                    {\r\n                        languageCode,\r\n                        name,\r\n                    },\r\n                ],\r\n                stockLevels: [\r\n                    {\r\n                        stockLocationId,\r\n                        stockOnHand: v.stock,\r\n                    },\r\n                ],\r\n                optionIds: v.optionIds,\r\n            };\r\n        });\r\n        return this.dataService.product.createProductVariants(variants).pipe(\r\n            map(({ createProductVariants }) => ({\r\n                createProductVariants,\r\n                productId: product.id,\r\n            })),\r\n        );\r\n    }\r\n\r\n    updateProduct(updateOptions: {\r\n        product: NonNullable<GetProductDetailQuery['product']>;\r\n        languageCode: LanguageCode;\r\n        autoUpdate: boolean;\r\n        productInput?: UpdateProductInput;\r\n        variantsInput?: UpdateProductVariantInput[];\r\n    }) {\r\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\r\n        const updateOperations: Array<Observable<UpdateProductMutation | UpdateProductVariantsMutation>> = [];\r\n        const updateVariantsInput = variantsInput || [];\r\n\r\n        const variants$ = autoUpdate\r\n            ? this.dataService.product\r\n                  .getProductVariantsForProduct({}, product.id)\r\n                  .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n\r\n        return variants$.pipe(\r\n            mergeMap(variants => {\r\n                if (productInput) {\r\n                    updateOperations.push(this.dataService.product.updateProduct(productInput));\r\n                    const productOldName = findTranslation(product, languageCode)?.name ?? '';\r\n                    const productNewName = findTranslation(productInput, languageCode)?.name;\r\n                    if (productNewName && productOldName !== productNewName && autoUpdate) {\r\n                        for (const variant of variants) {\r\n                            const currentVariantName = findTranslation(variant, languageCode)?.name || '';\r\n                            let variantInput: UpdateProductVariantInput;\r\n                            const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\r\n                            if (existingVariantInput) {\r\n                                variantInput = existingVariantInput;\r\n                            } else {\r\n                                variantInput = {\r\n                                    id: variant.id,\r\n                                    translations: [{ languageCode, name: currentVariantName }],\r\n                                };\r\n                                updateVariantsInput.push(variantInput);\r\n                            }\r\n                            const variantTranslation = findTranslation(variantInput, languageCode);\r\n                            if (variantTranslation) {\r\n                                if (variantTranslation.name) {\r\n                                    variantTranslation.name = replaceLast(\r\n                                        variantTranslation.name,\r\n                                        productOldName,\r\n                                        productNewName,\r\n                                    );\r\n                                } else {\r\n                                    // The variant translation was falsy, which occurs\r\n                                    // when defining the product name for a new translation\r\n                                    // language that had not yet been defined.\r\n                                    variantTranslation.name = [\r\n                                        productNewName,\r\n                                        ...variant.options.map(o => o.name),\r\n                                    ].join(' ');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (updateVariantsInput.length) {\r\n                    updateOperations.push(\r\n                        this.dataService.product.updateProductVariants(updateVariantsInput),\r\n                    );\r\n                }\r\n                return forkJoin(updateOperations);\r\n            }),\r\n        );\r\n    }\r\n\r\n    updateProductOption(\r\n        input: UpdateProductOptionInput & { autoUpdate: boolean },\r\n        product: NonNullable<GetProductDetailQuery['product']>,\r\n        languageCode: LanguageCode,\r\n    ) {\r\n        const variants$ = input.autoUpdate\r\n            ? this.dataService.product\r\n                  .getProductVariantsForProduct({}, product.id)\r\n                  .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n\r\n        return variants$.pipe(\r\n            mergeMap(variants => {\r\n                let updateProductVariantNames$: Observable<any> = of([]);\r\n                if (input.autoUpdate) {\r\n                    // Update any ProductVariants' names which include the option name\r\n                    let oldOptionName: string | undefined;\r\n                    const newOptionName = findTranslation(input, languageCode)?.name;\r\n                    if (!newOptionName) {\r\n                        updateProductVariantNames$ = of([]);\r\n                    }\r\n                    const variantsToUpdate: UpdateProductVariantInput[] = [];\r\n                    for (const variant of variants) {\r\n                        if (variant.options.map(o => o.id).includes(input.id)) {\r\n                            if (!oldOptionName) {\r\n                                oldOptionName = findTranslation(\r\n                                    variant.options.find(o => o.id === input.id),\r\n                                    languageCode,\r\n                                )?.name;\r\n                            }\r\n                            const variantName = findTranslation(variant, languageCode)?.name || '';\r\n                            if (oldOptionName && newOptionName && variantName.includes(oldOptionName)) {\r\n                                variantsToUpdate.push({\r\n                                    id: variant.id,\r\n                                    translations: [\r\n                                        {\r\n                                            languageCode,\r\n                                            name: replaceLast(variantName, oldOptionName, newOptionName),\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    if (variantsToUpdate.length) {\r\n                        updateProductVariantNames$ =\r\n                            this.dataService.product.updateProductVariants(variantsToUpdate);\r\n                    }\r\n                }\r\n                return this.dataService.product\r\n                    .updateProductOption(input)\r\n                    .pipe(mergeMap(() => updateProductVariantNames$));\r\n            }),\r\n        );\r\n    }\r\n\r\n    deleteProductVariant(id: string, productId: string) {\r\n        return this.dataService.product.deleteProductVariant(id).pipe(\r\n            switchMap(result => {\r\n                if (result.deleteProductVariant.result === DeletionResult.DELETED) {\r\n                    return this.dataService.product.getProduct(productId).single$;\r\n                } else {\r\n                    return throwError(result.deleteProductVariant.message);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n}\r\n","<vdr-page-header>\r\n    <vdr-page-title></vdr-page-title>\r\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\r\n</vdr-page-header>\r\n<vdr-page-body>\r\n    <vdr-page-block>\r\n        <vdr-action-bar>\r\n            <vdr-ab-left>\r\n                <vdr-language-selector\r\n                    [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                    [currentLanguageCode]=\"languageCode$ | async\"\r\n                    (languageCodeChange)=\"setLanguage($event)\"\r\n                ></vdr-language-selector>\r\n            </vdr-ab-left>\r\n\r\n            <vdr-ab-right>\r\n                <div class=\"flex center\">\r\n                    <div class=\"mr-2\">\r\n                        <clr-checkbox-wrapper>\r\n                            <input\r\n                                clrCheckbox\r\n                                type=\"checkbox\"\r\n                                id=\"auto-update\"\r\n                                [(ngModel)]=\"autoUpdateVariantNames\"\r\n                            />\r\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\r\n                        </clr-checkbox-wrapper>\r\n                    </div>\r\n                    <button\r\n                        *vdrIfPermissions=\"updatePermission\"\r\n                        class=\"btn btn-primary\"\r\n                        (click)=\"save()\"\r\n                        [disabled]=\"detailForm.pristine || detailForm.invalid\"\r\n                    >\r\n                        {{ 'common.update' | translate }}\r\n                    </button>\r\n                </div>\r\n            </vdr-ab-right>\r\n        </vdr-action-bar>\r\n    </vdr-page-block>\r\n    <vdr-page-block>\r\n        <form class=\"form\" [formGroup]=\"detailForm\" *ngIf=\"optionGroups$ | async as optionGroups\">\r\n            <div formGroupName=\"optionGroups\">\r\n                <vdr-card\r\n                    *ngFor=\"let optionGroup of getOptionGroups(); index as i\"\r\n                    [formArrayName]=\"i\"\r\n                    [title]=\"optionGroup.value.code\"\r\n                >\r\n                    <vdr-page-entity-info [entity]=\"optionGroup.value\"></vdr-page-entity-info>\r\n                    <div class=\"form-grid\">\r\n                        <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                            <input\r\n                                [id]=\"'name-' + i\"\r\n                                type=\"text\"\r\n                                formControlName=\"name\"\r\n                                [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            />\r\n                        </vdr-form-field>\r\n                        <vdr-form-field [label]=\"'common.code' | translate\" for=\"code\">\r\n                            <input\r\n                                [id]=\"'code-' + i\"\r\n                                type=\"text\"\r\n                                [readonly]=\"!(updatePermission | hasPermission)\"\r\n                                formControlName=\"code\"\r\n                            />\r\n                        </vdr-form-field>\r\n                    </div>\r\n                    <ng-container formGroupName=\"customFields\" *ngIf=\"optionGroupCustomFields.length\">\r\n                        <vdr-tabbed-custom-fields\r\n                            entityName=\"ProductOptionGroup\"\r\n                            [customFields]=\"optionGroupCustomFields\"\r\n                            [customFieldsFormGroup]=\"optionGroup.get('customFields')\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        ></vdr-tabbed-custom-fields>\r\n                    </ng-container>\r\n\r\n                    <vdr-data-table-2\r\n                        id=\"edit-options-list\"\r\n                        *ngIf=\"getOptions(optionGroup) as options\"\r\n                        [items]=\"options\"\r\n                        [itemsPerPage]=\"paginationSettings[optionGroup.value.id]?.itemsPerPage\"\r\n                        [currentPage]=\"paginationSettings[optionGroup.value.id]?.currentPage\"\r\n                        (pageChange)=\"paginationSettings[optionGroup.value.id].currentPage = $event\"\r\n                        [totalItems]=\"options.length\"\r\n                    >\r\n                        <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\">\r\n                            <ng-template let-optionControl=\"item\">\r\n                                {{ optionControl.value.id }}\r\n                            </ng-template>\r\n                        </vdr-dt2-column>\r\n                        <vdr-dt2-column [heading]=\"'common.created-at' | translate\" [hiddenByDefault]=\"true\">\r\n                            <ng-template let-optionControl=\"item\">\r\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\r\n                            </ng-template>\r\n                        </vdr-dt2-column>\r\n                        <vdr-dt2-column [heading]=\"'common.updated-at' | translate\" [hiddenByDefault]=\"true\">\r\n                            <ng-template let-optionControl=\"item\">\r\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\r\n                            </ng-template>\r\n                        </vdr-dt2-column>\r\n                        <vdr-dt2-column [heading]=\"'common.name' | translate\" [optional]=\"false\">\r\n                            <ng-template let-optionControl=\"item\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    [formControl]=\"optionControl.get('name')\"\r\n                                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                                />\r\n                            </ng-template>\r\n                        </vdr-dt2-column>\r\n                        <vdr-dt2-column [heading]=\"'common.code' | translate\" [optional]=\"false\">\r\n                            <ng-template let-optionControl=\"item\">\r\n                                <input type=\"text\" [formControl]=\"optionControl.get('code')\" />\r\n                            </ng-template>\r\n                        </vdr-dt2-column>\r\n                        <vdr-dt2-column\r\n                            [heading]=\"'common.custom-fields' | translate\"\r\n                            [hiddenByDefault]=\"optionCustomFields.length === 0\"\r\n                        >\r\n                            <ng-template let-optionControl=\"item\">\r\n                                <vdr-tabbed-custom-fields\r\n                                    entityName=\"ProductOption\"\r\n                                    [customFields]=\"optionCustomFields\"\r\n                                    [compact]=\"true\"\r\n                                    [customFieldsFormGroup]=\"optionControl.get('customFields')\"\r\n                                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                                ></vdr-tabbed-custom-fields>\r\n                            </ng-template>\r\n                        </vdr-dt2-column>\r\n                    </vdr-data-table-2>\r\n                </vdr-card>\r\n            </div>\r\n        </form>\r\n    </vdr-page-block>\r\n</vdr-page-body>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    findTranslation,\n    GetProductVariantOptionsQuery,\n    LanguageCode,\n    NotificationService,\n    Permission,\n    ProductOptionFragment,\n    ProductOptionGroupFragment,\n    ServerConfigService,\n    TranslationOf,\n    UpdateProductOptionGroupInput,\n    UpdateProductOptionInput,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, mergeMap, take, tap } from 'rxjs/operators';\n\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\n\ntype ProductWithOptions = NonNullable<GetProductVariantOptionsQuery['product']>;\n\n@Component({\n    selector: 'vdr-product-options-editor',\n    templateUrl: './product-options-editor.component.html',\n    styleUrls: ['./product-options-editor.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductOptionsEditorComponent extends BaseDetailComponent<ProductWithOptions> implements OnInit {\n    detailForm: UntypedFormGroup;\n    optionGroups$: Observable<ProductWithOptions['optionGroups']>;\n    languageCode$: Observable<LanguageCode>;\n    availableLanguages$: Observable<LanguageCode[]>;\n    optionGroupCustomFields: CustomFieldConfig[];\n    optionCustomFields: CustomFieldConfig[];\n    autoUpdateVariantNames = true;\n    paginationSettings: { [groupId: string]: { currentPage: number; itemsPerPage: number } } = {};\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n\n    constructor(\n        protected route: ActivatedRoute,\n        protected router: Router,\n        protected serverConfigService: ServerConfigService,\n        protected dataService: DataService,\n        private productDetailService: ProductDetailService,\n        private formBuilder: UntypedFormBuilder,\n        private changeDetector: ChangeDetectorRef,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.optionGroupCustomFields = this.getCustomFieldConfig('ProductOptionGroup');\n        this.optionCustomFields = this.getCustomFieldConfig('ProductOption');\n    }\n\n    ngOnInit(): void {\n        this.optionGroups$ = this.route.snapshot.data.entity.pipe(\n            map((product: ProductWithOptions) => product.optionGroups),\n            tap((optionGroups: ProductWithOptions['optionGroups']) => {\n                for (const group of optionGroups) {\n                    this.paginationSettings[group.id] = {\n                        currentPage: 1,\n                        itemsPerPage: 10,\n                    };\n                }\n            }),\n        );\n        this.detailForm = new UntypedFormGroup({\n            optionGroups: new UntypedFormArray([]),\n        });\n        super.init();\n    }\n\n    getOptionGroups(): UntypedFormGroup[] {\n        const optionGroups = this.detailForm.get('optionGroups');\n        return (optionGroups as UntypedFormArray).controls as UntypedFormGroup[];\n    }\n\n    getOptions(optionGroup: UntypedFormGroup): UntypedFormGroup[] {\n        const options = optionGroup.get('options');\n        return (options as UntypedFormArray).controls as UntypedFormGroup[];\n    }\n\n    save() {\n        if (this.detailForm.invalid || this.detailForm.pristine) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const $product = this.dataService.product.getProduct(this.id).mapSingle(data => data.product!);\n        combineLatest(this.entity$, this.languageCode$, $product)\n            .pipe(\n                take(1),\n                mergeMap(([{ optionGroups }, languageCode, product]) => {\n                    const updateOperations: Array<Observable<any>> = [];\n                    for (const optionGroupForm of this.getOptionGroups()) {\n                        if (optionGroupForm.dirty) {\n                            const optionGroupEntity = optionGroups.find(\n                                og => og.id === optionGroupForm.value.id,\n                            );\n                            if (optionGroupEntity) {\n                                const input = this.getUpdatedOptionGroup(\n                                    optionGroupEntity,\n                                    optionGroupForm,\n                                    languageCode,\n                                );\n                                updateOperations.push(\n                                    this.dataService.product.updateProductOptionGroup(input),\n                                );\n                            }\n                        }\n\n                        for (const optionForm of this.getOptions(optionGroupForm)) {\n                            if (optionForm.dirty) {\n                                const optionGroup = optionGroups\n                                    .find(og => og.id === optionGroupForm.value.id)\n                                    ?.options.find(o => o.id === optionForm.value.id);\n                                if (optionGroup) {\n                                    const input = this.getUpdatedOption(\n                                        optionGroup,\n                                        optionForm,\n                                        languageCode,\n                                    );\n                                    updateOperations.push(\n                                        this.productDetailService.updateProductOption(\n                                            { ...input, autoUpdate: this.autoUpdateVariantNames },\n                                            product,\n                                            languageCode,\n                                        ),\n                                    );\n                                }\n                            }\n                        }\n                    }\n                    return forkJoin(updateOperations);\n                }),\n            )\n            .subscribe(\n                () => {\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'ProductOptionGroup',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'ProductOptionGroup',\n                    });\n                },\n            );\n    }\n\n    private getUpdatedOptionGroup(\n        optionGroup: ProductOptionGroupFragment,\n        optionGroupFormGroup: UntypedFormGroup,\n        languageCode: LanguageCode,\n    ): UpdateProductOptionGroupInput {\n        const input = createUpdatedTranslatable({\n            translatable: optionGroup,\n            updatedFields: optionGroupFormGroup.value,\n            customFieldConfig: this.optionGroupCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: optionGroup.name || '',\n            },\n        });\n        return input;\n    }\n\n    private getUpdatedOption(\n        option: ProductOptionFragment,\n        optionFormGroup: UntypedFormGroup,\n        languageCode: LanguageCode,\n    ): UpdateProductOptionInput {\n        const input = createUpdatedTranslatable({\n            translatable: option,\n            updatedFields: optionFormGroup.value,\n            customFieldConfig: this.optionCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: option.name || '',\n            },\n        });\n        return input;\n    }\n\n    protected setFormValues(entity: ProductWithOptions, languageCode: LanguageCode): void {\n        const groupsForm = this.detailForm.get('optionGroups') as UntypedFormArray;\n        for (const optionGroup of entity.optionGroups) {\n            const groupTranslation = findTranslation(optionGroup, languageCode);\n\n            const groupForm = this.setOptionGroupForm(optionGroup, groupsForm, groupTranslation);\n            this.setCustomFieldsForm(this.optionGroupCustomFields, groupForm, optionGroup, groupTranslation);\n\n            let optionsForm = groupForm.get('options') as UntypedFormArray;\n            if (!optionsForm) {\n                optionsForm = this.formBuilder.array([]);\n                groupForm.addControl('options', optionsForm);\n            }\n            for (const option of optionGroup.options) {\n                const optionTranslation = findTranslation(option, languageCode);\n                const optionForm = this.setOptionForm(option, optionsForm, optionTranslation);\n\n                this.setCustomFieldsForm(this.optionCustomFields, optionForm, option, optionTranslation);\n            }\n        }\n    }\n\n    protected setCustomFieldsForm<\n        T extends ProductWithOptions['optionGroups'][0] | ProductWithOptions['optionGroups'][0]['options'][0],\n    >(\n        customFields: CustomFieldConfig[],\n        formGroup: UntypedFormGroup,\n        entity: T,\n        currentTranslation?: TranslationOf<T>,\n    ) {\n        if (customFields.length) {\n            let customValueFieldsGroup = formGroup.get(['customFields']);\n            if (!customValueFieldsGroup) {\n                customValueFieldsGroup = this.formBuilder.group(\n                    customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                );\n                formGroup.addControl('customFields', customValueFieldsGroup);\n            }\n            this.setCustomFieldFormValues(customFields, customValueFieldsGroup, entity, currentTranslation);\n        }\n    }\n\n    protected setOptionGroupForm(\n        entity: ProductWithOptions['optionGroups'][0],\n        groupsForm: UntypedFormArray,\n        currentTranslation?: TranslationOf<ProductWithOptions['optionGroups'][0]>,\n    ) {\n        const group = {\n            id: entity.id,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            code: entity.code,\n            name: currentTranslation?.name ?? '',\n        };\n        let groupForm = groupsForm.controls.find(control => control.value.id === entity.id) as\n            | UntypedFormGroup\n            | undefined;\n        if (groupForm) {\n            groupForm.get('id')?.setValue(group.id);\n            groupForm.get('code')?.setValue(group.code);\n            groupForm.get('name')?.setValue(group.name);\n            groupForm.get('createdAt')?.setValue(group.createdAt);\n            groupForm.get('updatedAt')?.setValue(group.updatedAt);\n        } else {\n            groupForm = this.formBuilder.group(group);\n            groupsForm.push(groupForm);\n        }\n        return groupForm;\n    }\n\n    protected setOptionForm(\n        entity: ProductWithOptions['optionGroups'][0]['options'][0],\n        optionsForm: UntypedFormArray,\n        currentTranslation?: TranslationOf<ProductWithOptions['optionGroups'][0]['options'][0]>,\n    ) {\n        const group = {\n            id: entity.id,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            code: entity.code,\n            name: currentTranslation?.name ?? '',\n        };\n        let optionForm = optionsForm.controls.find(control => control.value.id === entity.id) as\n            | UntypedFormGroup\n            | undefined;\n        if (optionForm) {\n            optionForm.get('id')?.setValue(group.id);\n            optionForm.get('code')?.setValue(group.code);\n            optionForm.get('name')?.setValue(group.name);\n            optionForm.get('createdAt')?.setValue(group.createdAt);\n            optionForm.get('updatedAt')?.setValue(group.updatedAt);\n        } else {\n            optionForm = this.formBuilder.group(group);\n            optionsForm.push(optionForm);\n        }\n        return optionForm;\n    }\n}\n","<ng-template vdrDialogTitle>\r\n    {{ 'catalog.create-product-option-group' | translate }}\r\n</ng-template>\r\n<div class=\"form-grid\" [formGroup]=\"form\">\r\n    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n        <input id=\"name\" type=\"text\" formControlName=\"name\" (input)=\"updateCode()\" />\r\n    </vdr-form-field>\r\n    <vdr-form-field\r\n        [label]=\"'common.code' | translate\"\r\n        for=\"code\"\r\n    >\r\n        <input\r\n            id=\"code\"\r\n            type=\"text\"\r\n            formControlName=\"code\"\r\n        />\r\n    </vdr-form-field>\r\n</div>\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"confirm()\" class=\"btn btn-primary\" [disabled]=\"form.invalid\">\r\n        {{ 'common.confirm' | translate }}\r\n    </button>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport {\r\n    CreateProductOptionGroupInput,\r\n    Dialog,\r\n    findTranslation,\r\n    GetProductVariantOptionsQuery,\r\n    LanguageCode,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\n\r\n@Component({\r\n    selector: 'vdr-create-product-option-group-dialog',\r\n    templateUrl: './create-product-option-group-dialog.component.html',\r\n    styleUrls: ['./create-product-option-group-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateProductOptionGroupDialogComponent implements Dialog<CreateProductOptionGroupInput> {\r\n    resolveWith: (result?: CreateProductOptionGroupInput) => void;\r\n    languageCode: LanguageCode;\r\n    form = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        code: ['', Validators.required],\r\n    });\r\n    constructor(private formBuilder: FormBuilder) {}\r\n\r\n    updateCode() {\r\n        const nameControl = this.form.get('name');\r\n        const codeControl = this.form.get('code');\r\n        if (nameControl && codeControl && codeControl.pristine) {\r\n            codeControl.setValue(normalizeString(`${nameControl.value}`, '-'));\r\n        }\r\n    }\r\n\r\n    confirm() {\r\n        const { name, code } = this.form.value;\r\n        if (!name || !code) {\r\n            return;\r\n        }\r\n        this.resolveWith({\r\n            code,\r\n            options: [],\r\n            translations: [{ languageCode: this.languageCode, name }],\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","<ng-template vdrDialogTitle>\r\n    {{ 'catalog.create-product-variant' | translate }}\r\n</ng-template>\r\n<form [formGroup]=\"form\">\r\n    <div formGroupName=\"options\" class=\"form-grid\">\r\n        <vdr-form-field [label]=\"optionGroup.name\" *ngFor=\"let optionGroup of product.optionGroups\">\r\n            <ng-select\r\n                [items]=\"optionGroup.options\"\r\n                [formControlName]=\"optionGroup.code\"\r\n                bindLabel=\"name\"\r\n                bindValue=\"id\"\r\n                appendTo=\"body\"\r\n            >\r\n            </ng-select>\r\n        </vdr-form-field>\r\n        <clr-alert\r\n            *ngIf=\"product.optionGroups.length === 0\"\r\n            clrAlertType=\"warning\"\r\n            [clrAlertClosable]=\"false\"\r\n            class=\"form-grid-span\"\r\n        >\r\n            <clr-alert-item>\r\n                <span class=\"alert-text\">\r\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\r\n                </span>\r\n            </clr-alert-item>\r\n        </clr-alert>\r\n    </div>\r\n    <div *ngIf=\"existingVariant\" class=\"mt-2\">\r\n        <clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\" class=\"\">\r\n            <clr-alert-item>\r\n                <span class=\"alert-text\">\r\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\r\n                        existingVariant.sku\r\n                    }})\r\n                </span>\r\n            </clr-alert-item>\r\n        </clr-alert>\r\n    </div>\r\n    <div class=\"form-grid mt-2\">\r\n        <vdr-form-field [label]=\"'common.name' | translate\">\r\n            <input type=\"text\" formControlName=\"name\" />\r\n        </vdr-form-field>\r\n        <vdr-form-field [label]=\"'catalog.sku' | translate\">\r\n            <input type=\"text\" formControlName=\"sku\" />\r\n        </vdr-form-field>\r\n    </div>\r\n</form>\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button\r\n        type=\"submit\"\r\n        (click)=\"confirm()\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"form.invalid || existingVariant || product.optionGroups.length === 0\"\r\n    >\r\n        {{ 'common.confirm' | translate }}\r\n    </button>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormRecord, Validators } from '@angular/forms';\r\nimport { CreateProductVariantInput, Dialog, GetProductVariantOptionsQuery } from '@vendure/admin-ui/core';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\n\r\n@Component({\r\n    selector: 'vdr-create-product-variant-dialog',\r\n    templateUrl: './create-product-variant-dialog.component.html',\r\n    styleUrls: ['./create-product-variant-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateProductVariantDialogComponent implements Dialog<CreateProductVariantInput>, OnInit {\r\n    resolveWith: (result?: CreateProductVariantInput) => void;\r\n    product: NonNullable<GetProductVariantOptionsQuery['product']>;\r\n    form = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        sku: ['', Validators.required],\r\n        options: this.formBuilder.record<string>({}),\r\n    });\r\n    existingVariant: NonNullable<GetProductVariantOptionsQuery['product']>['variants'][number] | undefined;\r\n\r\n    constructor(private formBuilder: FormBuilder) {}\r\n\r\n    ngOnInit() {\r\n        for (const optionGroup of this.product.optionGroups) {\r\n            (this.form.get('options') as FormRecord).addControl(\r\n                optionGroup.code,\r\n                new FormControl('', Validators.required),\r\n            );\r\n        }\r\n        const optionsRecord = this.form.get('options') as FormRecord;\r\n        optionsRecord.valueChanges.subscribe(value => {\r\n            const nameControl = this.form.get('name');\r\n            const allNull = Object.values(value).every(v => v == null);\r\n            if (!allNull && value && nameControl && !nameControl.dirty) {\r\n                const name = Object.entries(value)\r\n                    .map(\r\n                        ([groupCode, optionId]) =>\r\n                            this.product.optionGroups\r\n                                .find(og => og.code === groupCode)\r\n                                ?.options.find(o => o.id === optionId)?.name,\r\n                    )\r\n                    .join(' ');\r\n                nameControl.setValue(`${this.product.name} ${name}`);\r\n            }\r\n            const allSelected = Object.values(value).every(v => v != null);\r\n            if (allSelected) {\r\n                this.existingVariant = this.product.variants.find(v =>\r\n                    Object.entries(value).every(\r\n                        ([groupCode, optionId]) =>\r\n                            v.options.find(o => o.groupId === this.getGroupIdFromCode(groupCode))?.id ===\r\n                            optionId,\r\n                    ),\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    confirm() {\r\n        const { name, sku, options } = this.form.value;\r\n        if (!name || !sku || !options) {\r\n            return;\r\n        }\r\n        const optionIds = Object.values(options).filter(notNullOrUndefined);\r\n        this.resolveWith({\r\n            productId: this.product.id,\r\n            sku,\r\n            optionIds,\r\n            translations: [\r\n                {\r\n                    languageCode: this.product.languageCode,\r\n                    name,\r\n                },\r\n            ],\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    private getGroupCodeFromId(id: string): string {\r\n        return this.product.optionGroups.find(og => og.id === id)?.code ?? '';\r\n    }\r\n\r\n    private getGroupIdFromCode(code: string): string {\r\n        return this.product.optionGroups.find(og => og.code === code)?.id ?? '';\r\n    }\r\n}\r\n","<div class=\"input-wrapper\" [class.focus]=\"isFocussed\" (click)=\"textArea.focus()\">\r\n    <div class=\"chips\" *ngIf=\"0 < optionValues.length\">\r\n        <vdr-chip\r\n            *ngFor=\"let option of optionValues; last as isLast; index as i\"\r\n            [icon]=\"option.locked ? 'lock' : 'times'\"\r\n            [class.selected]=\"isLast && lastSelected\"\r\n            [class.locked]=\"option.locked\"\r\n            [colorFrom]=\"groupName\"\r\n            (iconClick)=\"removeOption(option)\"\r\n        >\r\n            <span [hidden]=\"editingIndex !== i\">\r\n                <input\r\n                    #editNameInput\r\n                    type=\"text\"\r\n                    [ngModel]=\"option.name\"\r\n                    (blur)=\"updateOption(i, $event)\"\r\n                    (click)=\"$event.cancelBubble = true\"\r\n                />\r\n            </span>\r\n            <span\r\n                class=\"option-name\"\r\n                [class.editable]=\"!option.locked && !option.id\"\r\n                (click)=\"editName(i, $event)\" [hidden]=\"editingIndex === i\">{{ option.name }}</span>\r\n        </vdr-chip>\r\n    </div>\r\n    <textarea\r\n        #textArea\r\n        (keyup)=\"handleKey($event)\"\r\n        (focus)=\"isFocussed = true\"\r\n        (blur)=\"handleBlur()\"\r\n        [(ngModel)]=\"input\"\r\n        [disabled]=\"disabled\"\r\n    ></textarea>\r\n</div>\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    forwardRef,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    Provider,\r\n    QueryList,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { unique } from '@vendure/common/lib/unique';\r\n\r\nexport const OPTION_VALUE_INPUT_VALUE_ACCESSOR: Provider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OptionValueInputComponent),\r\n    multi: true,\r\n};\r\n\r\ninterface Option {\r\n    id?: string;\r\n    name: string;\r\n    locked: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-option-value-input',\r\n    templateUrl: './option-value-input.component.html',\r\n    styleUrls: ['./option-value-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR],\r\n})\r\nexport class OptionValueInputComponent implements ControlValueAccessor {\r\n    @Input() groupName = '';\r\n    @ViewChild('textArea', { static: true }) textArea: ElementRef<HTMLTextAreaElement>;\r\n    @ViewChildren('editNameInput', { read: ElementRef }) nameInputs: QueryList<ElementRef>;\r\n    @Input() options: Option[];\r\n    @Output() add = new EventEmitter<Option>();\r\n    @Output() remove = new EventEmitter<Option>();\r\n    @Output() edit = new EventEmitter<{ index: number; option: Option }>();\r\n    @Input() disabled = false;\r\n    input = '';\r\n    isFocussed = false;\r\n    lastSelected = false;\r\n    formValue: Option[];\r\n    editingIndex = -1;\r\n    onChangeFn: (value: any) => void;\r\n    onTouchFn: (value: any) => void;\r\n\r\n    get optionValues(): Option[] {\r\n        return this.formValue ?? this.options ?? [];\r\n    }\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeFn = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchFn = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        this.formValue = obj || [];\r\n    }\r\n\r\n    focus() {\r\n        this.textArea.nativeElement.focus();\r\n    }\r\n\r\n    editName(index: number, event: MouseEvent) {\r\n        const optionValue = this.optionValues[index];\r\n        if (!optionValue.locked && !optionValue.id) {\r\n            event.cancelBubble = true;\r\n            this.editingIndex = index;\r\n            const input = this.nameInputs.get(index)?.nativeElement;\r\n            setTimeout(() => input?.focus());\r\n        }\r\n    }\r\n\r\n    updateOption(index: number, event: InputEvent) {\r\n        const optionValue = this.optionValues[index];\r\n        const newName = (event.target as HTMLInputElement).value;\r\n        if (optionValue) {\r\n            if (newName) {\r\n                optionValue.name = newName;\r\n                this.edit.emit({ index, option: optionValue });\r\n            }\r\n            this.editingIndex = -1;\r\n        }\r\n    }\r\n\r\n    removeOption(option: Option) {\r\n        if (!option.locked) {\r\n            if (this.formValue) {\r\n                this.formValue = this.formValue?.filter(o => o.name !== option.name);\r\n                this.onChangeFn(this.formValue);\r\n            } else {\r\n                this.remove.emit(option);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleKey(event: KeyboardEvent) {\r\n        switch (event.key) {\r\n            case ',':\r\n            case 'Enter':\r\n                this.addOptionValue();\r\n                event.preventDefault();\r\n                break;\r\n            case 'Backspace':\r\n                if (this.lastSelected) {\r\n                    this.removeLastOption();\r\n                    this.lastSelected = false;\r\n                } else if (this.input === '') {\r\n                    this.lastSelected = true;\r\n                }\r\n                break;\r\n            default:\r\n                this.lastSelected = false;\r\n        }\r\n    }\r\n\r\n    handleBlur() {\r\n        this.isFocussed = false;\r\n        this.addOptionValue();\r\n    }\r\n\r\n    private addOptionValue() {\r\n        const options = this.parseInputIntoOptions(this.input).filter(option => {\r\n            // do not add an option with the same name\r\n            // as an existing option\r\n            const existing = this.options ?? this.formValue;\r\n            return !existing?.find(o => o?.name === option.name);\r\n        });\r\n        if (!this.formValue && this.options) {\r\n            for (const option of options) {\r\n                this.add.emit(option);\r\n            }\r\n        } else {\r\n            this.formValue = unique([...this.formValue, ...options]);\r\n            this.onChangeFn(this.formValue);\r\n        }\r\n        this.input = '';\r\n    }\r\n\r\n    private parseInputIntoOptions(input: string): Option[] {\r\n        return input\r\n            .split(/[,\\n]/)\r\n            .map(s => s.trim())\r\n            .filter(s => s !== '')\r\n            .map(s => ({ name: s, locked: false }));\r\n    }\r\n\r\n    private removeLastOption() {\r\n        if (this.optionValues.length) {\r\n            const option = this.optionValues[this.optionValues.length - 1];\r\n            this.removeOption(option);\r\n        }\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-card>\r\n        <div *ngFor=\"let group of optionGroups; index as i\" class=\"option-groups\">\r\n            <vdr-form-field [label]=\"'catalog.option' | translate\">\r\n                <input clrInput [(ngModel)]=\"group.name\" name=\"name\" [readonly]=\"!group.isNew\" />\r\n            </vdr-form-field>\r\n            <vdr-form-field [label]=\"'catalog.option-values' | translate\" class=\"flex-spacer\">\r\n                <vdr-option-value-input\r\n                    #optionValueInputComponent\r\n                    [options]=\"group.values\"\r\n                    [groupName]=\"group.name\"\r\n                    [disabled]=\"group.name === ''\"\r\n                    (add)=\"addOption(i, $event.name)\"\r\n                    (remove)=\"removeOption(i, $event)\"\r\n                ></vdr-option-value-input>\r\n            </vdr-form-field>\r\n            <div>\r\n                <button class=\"button-small mt-4\" (click)=\"removeOptionGroup(group)\">\r\n                    <clr-icon shape=\"trash\"></clr-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <button class=\"button mt-1\" (click)=\"addOptionGroup()\">\r\n            <clr-icon shape=\"plus\"></clr-icon>\r\n            {{ 'catalog.create-product-option-group' | translate }}\r\n        </button>\r\n    </vdr-card>\r\n    <vdr-card [paddingX]=\"false\">\r\n        <div class=\"mx-3\">\r\n            <button class=\"button\" (click)=\"createNewVariant()\">\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'catalog.create-product-variant' | translate }}\r\n            </button>\r\n        </div>\r\n        <vdr-data-table-2\r\n            id=\"manage-product-variant-list\"\r\n            [items]=\"variants$ | async\"\r\n            [itemsPerPage]=\"itemsPerPage\"\r\n            [totalItems]=\"totalItems$ | async\"\r\n            [currentPage]=\"currentPage\"\r\n            (pageChange)=\"setPageNumber($event)\"\r\n            (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n        >\r\n            <vdr-dt2-search\r\n                [searchTermControl]=\"searchTermControl\"\r\n                [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n            />\r\n            <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\">\r\n                <ng-template let-variant=\"item\">\r\n                    {{ variant.id }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.created-at' | translate\" [hiddenByDefault]=\"true\">\r\n                <ng-template let-variant=\"item\">\r\n                    {{ variant.createdAt | localeDate : 'short' }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.updated-at' | translate\" [hiddenByDefault]=\"true\">\r\n                <ng-template let-variant=\"item\">\r\n                    {{ variant.updatedAt | localeDate : 'short' }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'catalog.name' | translate\" [optional]=\"false\">\r\n                <ng-template let-variant=\"item\">\r\n                    {{ variant.name }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'catalog.sku' | translate\" [optional]=\"false\">\r\n                <ng-template let-variant=\"item\">\r\n                    {{ variant.sku }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column *ngFor=\"let optionGroup of optionGroups$ | async\" [heading]=\"optionGroup.name\">\r\n                <ng-template let-variant=\"item\">\r\n                    <vdr-chip\r\n                        *ngIf=\"getOption(variant, optionGroup.id) as option; else selectOption\"\r\n                        [colorFrom]=\"optionGroup.code\"\r\n                        >{{ option.name }}</vdr-chip\r\n                    >\r\n                    <ng-template #selectOption>\r\n                        <div class=\"flex center\">\r\n                            <ng-select\r\n                                [items]=\"optionGroup.options\"\r\n                                bindLabel=\"name\"\r\n                                bindValue=\"id\"\r\n                                appendTo=\"body\"\r\n                                (change)=\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\"\r\n                            ></ng-select>\r\n                            <button\r\n                                class=\"button-small ml-1\"\r\n                                [class.primary]=\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\"\r\n                                (click)=\"addOptionToVariant(variant)\"\r\n                                [disabled]=\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\"\r\n                            >\r\n                                <clr-icon shape=\"floppy\"></clr-icon>\r\n                            </button>\r\n                        </div>\r\n                    </ng-template>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.price' | translate\" [hiddenByDefault]=\"true\">\r\n                <ng-template let-variant=\"item\">\r\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.price-with-tax' | translate\" [hiddenByDefault]=\"true\">\r\n                <ng-template let-variant=\"item\">\r\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.delete' | translate\" [optional]=\"false\">\r\n                <ng-template let-variant=\"item\">\r\n                    <button class=\"button-small\" (click)=\"deleteVariant(variant)\">\r\n                        <clr-icon shape=\"trash is-danger\"></clr-icon>\r\n                    </button>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n        </vdr-data-table-2>\r\n    </vdr-card>\r\n</vdr-page-block>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CurrencyCode,\r\n    DataService,\r\n    DeactivateAware,\r\n    DeletionResult,\r\n    getDefaultUiLanguage,\r\n    GetProductVariantOptionsQuery,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    SelectionManager,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { EMPTY, Observable, Subject } from 'rxjs';\r\nimport { map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\r\nimport { CreateProductOptionGroupDialogComponent } from '../create-product-option-group-dialog/create-product-option-group-dialog.component';\r\nimport { CreateProductVariantDialogComponent } from '../create-product-variant-dialog/create-product-variant-dialog.component';\r\n\r\nexport class GeneratedVariant {\r\n    isDefault: boolean;\r\n    options: Array<{ name: string; id?: string }>;\r\n    productVariantId?: string;\r\n    enabled: boolean;\r\n    existing: boolean;\r\n    sku: string;\r\n    price: number;\r\n    stock: number;\r\n\r\n    constructor(config: Partial<GeneratedVariant>) {\r\n        for (const key of Object.keys(config)) {\r\n            this[key] = config[key];\r\n        }\r\n    }\r\n}\r\n\r\ninterface OptionGroupUiModel {\r\n    id?: string;\r\n    isNew: boolean;\r\n    name: string;\r\n    locked: boolean;\r\n    values: Array<{\r\n        id: string;\r\n        name: string;\r\n        locked: boolean;\r\n    }>;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-product-variants-editor',\r\n    templateUrl: './product-variants-editor.component.html',\r\n    styleUrls: ['./product-variants-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class ProductVariantsEditorComponent implements OnInit, DeactivateAware {\r\n    formValueChanged = false;\r\n    optionsChanged = false;\r\n    optionGroups: OptionGroupUiModel[];\r\n    product: NonNullable<GetProductVariantOptionsQuery['product']>;\r\n    variants$: Observable<NonNullable<GetProductVariantOptionsQuery['product']>['variants']>;\r\n    optionGroups$: Observable<NonNullable<GetProductVariantOptionsQuery['product']>['optionGroups']>;\r\n    totalItems$: Observable<number>;\r\n    currencyCode: CurrencyCode;\r\n    itemsPerPage = 100;\r\n    currentPage = 1;\r\n    searchTermControl = new FormControl('');\r\n    selectionManager = new SelectionManager<any>({\r\n        multiSelect: true,\r\n        itemsAreEqual: (a, b) => a.id === b.id,\r\n        additiveMode: true,\r\n    });\r\n    optionsToAddToVariant: {\r\n        [variantId: string]: { [groupId: string]: string };\r\n    } = {};\r\n    private refresh$ = new Subject<void>();\r\n    private languageCode: LanguageCode;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dataService: DataService,\r\n        private productDetailService: ProductDetailService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private changeDetector: ChangeDetectorRef,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.languageCode =\r\n            (this.route.snapshot.paramMap.get('lang') as LanguageCode) || getDefaultUiLanguage();\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\r\n        });\r\n\r\n        const product$ = this.refresh$.pipe(\r\n            switchMap(() =>\r\n                this.dataService.product\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    .getProductVariantsOptions(this.route.parent?.snapshot.paramMap.get('id')!)\r\n                    .mapSingle(data => data.product),\r\n            ),\r\n            startWith(this.route.snapshot.data.product),\r\n        );\r\n\r\n        this.variants$ = product$.pipe(\r\n            switchMap(product =>\r\n                this.searchTermControl.valueChanges.pipe(\r\n                    startWith(''),\r\n                    map(term =>\r\n                        term\r\n                            ? product.variants.filter(v => v.name.toLowerCase().includes(term.toLowerCase()))\r\n                            : product.variants,\r\n                    ),\r\n                ),\r\n            ),\r\n        );\r\n        this.optionGroups$ = product$.pipe(map(product => product.optionGroups));\r\n        this.totalItems$ = this.variants$.pipe(map(variants => variants.length));\r\n\r\n        product$.subscribe(p => {\r\n            this.product = p;\r\n            const allUsedOptionIds = p.variants.map(v => v.options.map(option => option.id)).flat();\r\n            const allUsedOptionGroupIds = p.variants.map(v => v.options.map(option => option.groupId)).flat();\r\n            this.optionGroups = p.optionGroups.map(og => ({\r\n                id: og.id,\r\n                isNew: false,\r\n                name: og.name,\r\n                locked: allUsedOptionGroupIds.includes(og.id),\r\n                values: og.options.map(o => ({\r\n                    id: o.id,\r\n                    name: o.name,\r\n                    locked: allUsedOptionIds.includes(o.id),\r\n                })),\r\n            }));\r\n        });\r\n    }\r\n\r\n    setItemsPerPage(itemsPerPage: number) {\r\n        this.itemsPerPage = itemsPerPage;\r\n        this.currentPage = 1;\r\n    }\r\n\r\n    setPageNumber(page: number) {\r\n        this.currentPage = page;\r\n    }\r\n\r\n    onFormChanged(variantInfo: GeneratedVariant) {\r\n        this.formValueChanged = true;\r\n        variantInfo.enabled = true;\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return !this.formValueChanged;\r\n    }\r\n\r\n    addOptionGroup() {\r\n        this.modalService\r\n            .fromComponent(CreateProductOptionGroupDialogComponent, {\r\n                locals: {\r\n                    languageCode: this.languageCode,\r\n                },\r\n            })\r\n            .pipe(\r\n                switchMap(result => {\r\n                    if (result) {\r\n                        return this.dataService.product.createProductOptionGroups(result).pipe(\r\n                            switchMap(({ createProductOptionGroup }) =>\r\n                                this.dataService.product.addOptionGroupToProduct({\r\n                                    optionGroupId: createProductOptionGroup.id,\r\n                                    productId: this.product.id,\r\n                                }),\r\n                            ),\r\n                        );\r\n                    } else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(result => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'ProductOptionGroup',\r\n                });\r\n                this.refresh$.next();\r\n                this.changeDetector.markForCheck();\r\n            });\r\n    }\r\n\r\n    removeOptionGroup(\r\n        optionGroup: NonNullable<GetProductVariantOptionsQuery['product']>['optionGroups'][number],\r\n    ) {\r\n        const id = optionGroup.id;\r\n        const usedByVariantsCount = this.product.variants.filter(v =>\r\n            v.options.map(o => o.groupId).includes(id),\r\n        ).length;\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-product-option-group'),\r\n                body: usedByVariantsCount ? _('catalog.confirm-delete-product-option-group-body') : '',\r\n                translationVars: { name: optionGroup.name, count: usedByVariantsCount },\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(val => {\r\n                    if (val) {\r\n                        return this.dataService.product.removeOptionGroupFromProduct({\r\n                            optionGroupId: id,\r\n                            productId: this.product.id,\r\n                            force: true,\r\n                        });\r\n                    } else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(({ removeOptionGroupFromProduct }) => {\r\n                if (removeOptionGroupFromProduct.__typename === 'Product') {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'ProductOptionGroup',\r\n                    });\r\n                    this.refresh$.next();\r\n                } else if (removeOptionGroupFromProduct.__typename === 'ProductOptionInUseError') {\r\n                    this.notificationService.error(removeOptionGroupFromProduct.message ?? '');\r\n                }\r\n            });\r\n    }\r\n\r\n    addOption(index: number, optionName: string) {\r\n        const group = this.optionGroups[index];\r\n        if (group && group.id) {\r\n            this.dataService.product\r\n                .addOptionToGroup({\r\n                    productOptionGroupId: group.id,\r\n                    code: normalizeString(optionName, '-'),\r\n                    translations: [{ name: optionName, languageCode: this.languageCode }],\r\n                })\r\n                .subscribe(({ createProductOption }) => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'ProductOption',\r\n                    });\r\n                    this.refresh$.next();\r\n                });\r\n        }\r\n    }\r\n\r\n    removeOption(index: number, { id, name }: { id: string; name: string }) {\r\n        const optionGroup = this.optionGroups[index];\r\n        if (optionGroup) {\r\n            this.modalService\r\n                .dialog({\r\n                    title: _('catalog.confirm-delete-product-option'),\r\n                    translationVars: { name },\r\n                    buttons: [\r\n                        { type: 'secondary', label: _('common.cancel') },\r\n                        { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                    ],\r\n                })\r\n                .pipe(\r\n                    switchMap(val => {\r\n                        if (val) {\r\n                            return this.dataService.product.deleteProductOption(id);\r\n                        } else {\r\n                            return EMPTY;\r\n                        }\r\n                    }),\r\n                )\r\n                .subscribe(({ deleteProductOption }) => {\r\n                    if (deleteProductOption.result === DeletionResult.DELETED) {\r\n                        this.notificationService.success(_('common.notify-delete-success'), {\r\n                            entity: 'ProductOption',\r\n                        });\r\n                        optionGroup.values = optionGroup.values.filter(v => v.id !== id);\r\n                        this.refresh$.next();\r\n                    } else {\r\n                        this.notificationService.error(deleteProductOption.message ?? '');\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    setOptionToAddToVariant(variantId: string, optionGroupId: string, optionId?: string) {\r\n        if (!this.optionsToAddToVariant[variantId]) {\r\n            this.optionsToAddToVariant[variantId] = {};\r\n        }\r\n        if (optionId) {\r\n            this.optionsToAddToVariant[variantId][optionGroupId] = optionId;\r\n        } else {\r\n            delete this.optionsToAddToVariant[variantId][optionGroupId];\r\n        }\r\n    }\r\n\r\n    addOptionToVariant(variant: NonNullable<GetProductVariantOptionsQuery['product']>['variants'][number]) {\r\n        this.dataService.product\r\n            .updateProductVariants([\r\n                {\r\n                    id: variant.id,\r\n                    optionIds: [\r\n                        ...variant.options.map(o => o.id),\r\n                        ...Object.values(this.optionsToAddToVariant[variant.id]),\r\n                    ],\r\n                },\r\n            ])\r\n            .subscribe(({ updateProductVariants }) => {\r\n                this.refresh$.next();\r\n            });\r\n    }\r\n\r\n    deleteVariant(variant: NonNullable<GetProductVariantOptionsQuery['product']>['variants'][number]) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-product-variant'),\r\n                translationVars: { name: variant.name },\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response\r\n                        ? this.productDetailService.deleteProductVariant(variant.id, this.product.id)\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'ProductVariant',\r\n                    });\r\n                    this.refresh$.next();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'ProductVariant',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    createNewVariant() {\r\n        this.modalService\r\n            .fromComponent(CreateProductVariantDialogComponent, {\r\n                locals: {\r\n                    product: this.product,\r\n                },\r\n            })\r\n            .pipe(\r\n                switchMap(result => {\r\n                    if (result) {\r\n                        return this.dataService.product.createProductVariants([result]);\r\n                    } else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(result => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'ProductVariant',\r\n                });\r\n                this.refresh$.next();\r\n            });\r\n    }\r\n\r\n    getOption(\r\n        variant: NonNullable<GetProductVariantOptionsQuery['product']>['variants'][number],\r\n        groupId: string,\r\n    ) {\r\n        return variant.options.find(o => o.groupId === groupId);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver, GetProductVariantOptionsQuery, DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProductVariantsResolver extends BaseEntityResolver<GetProductVariantOptionsQuery['product']> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Product' as const,\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                name: '',\r\n                languageCode: '' as any,\r\n                optionGroups: [],\r\n                variants: [],\r\n            },\r\n            id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product),\r\n        );\r\n    }\r\n}\r\n","import { inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CanDeactivateDetailGuard,\r\n    createResolveData,\r\n    DataService,\r\n    PageComponent,\r\n    PageService,\r\n} from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ProductOptionsEditorComponent } from './components/product-options-editor/product-options-editor.component';\r\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\r\nimport { ProductVariantsResolver } from './providers/routing/product-variants-resolver';\r\n\r\nexport const createRoutes = (pageService: PageService): Route[] => [\r\n    {\r\n        path: 'inventory',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-list',\r\n            breadcrumb: _('breadcrumb.inventory'),\r\n        },\r\n        children: pageService.getPageTabRoutes('product-list'),\r\n    },\r\n    {\r\n        path: 'inventory/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-detail',\r\n            breadcrumb: { label: _('breadcrumb.inventory'), link: ['../', 'inventory'] },\r\n        },\r\n        children: [\r\n            {\r\n                path: 'manage-variants',\r\n                component: ProductVariantsEditorComponent,\r\n                canDeactivate: [CanDeactivateDetailGuard],\r\n                data: {\r\n                    breadcrumb: ({ product }) => [\r\n                        {\r\n                            label: `${product.name}`,\r\n                            link: ['../'],\r\n                        },\r\n                        {\r\n                            label: _('breadcrumb.manage-variants'),\r\n                            link: ['manage-variants'],\r\n                        },\r\n                    ],\r\n                },\r\n                resolve: {\r\n                    product: (route: ActivatedRouteSnapshot) =>\r\n                        inject(DataService)\r\n                            .product.getProductVariantsOptions(route.parent?.params.id)\r\n                            .mapSingle(data => data.product),\r\n                },\r\n            },\r\n            ...pageService.getPageTabRoutes('product-detail'),\r\n        ],\r\n    },\r\n    {\r\n        path: 'inventory/:productId/variants/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-variant-detail',\r\n            breadcrumb: { label: _('breadcrumb.inventory'), link: ['../', 'inventory'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('product-variant-detail'),\r\n    },\r\n    {\r\n        path: 'inventory/:id/options',\r\n        component: ProductOptionsEditorComponent,\r\n        resolve: createResolveData(ProductVariantsResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: productOptionsEditorBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'inventory/stock-locations/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'stock-location-detail',\r\n            breadcrumb: [\r\n                { label: _('breadcrumb.inventory'), link: ['../', 'inventory'] },\r\n                {\r\n                    label: _('breadcrumb.stock-locations'),\r\n                    link: ['../', 'inventory', 'stock-locations'],\r\n                },\r\n            ],\r\n        },\r\n        children: pageService.getPageTabRoutes('stock-location-detail'),\r\n    },\r\n    {\r\n        path: 'facets',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'facet-list',\r\n            breadcrumb: _('breadcrumb.facets'),\r\n        },\r\n        children: pageService.getPageTabRoutes('facet-list'),\r\n    },\r\n    {\r\n        path: 'facets/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'facet-detail',\r\n            breadcrumb: { label: _('breadcrumb.facets'), link: ['../', 'facets'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('facet-detail'),\r\n    },\r\n    {\r\n        path: 'collections',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'collection-list',\r\n            breadcrumb: _('breadcrumb.collections'),\r\n        },\r\n        children: pageService.getPageTabRoutes('collection-list'),\r\n    },\r\n    {\r\n        path: 'collections/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'collection-detail',\r\n            breadcrumb: { label: _('breadcrumb.collections'), link: ['../', 'collections'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('collection-detail'),\r\n    },\r\n    {\r\n        path: 'assets',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'asset-list',\r\n            breadcrumb: _('breadcrumb.assets'),\r\n        },\r\n        children: pageService.getPageTabRoutes('asset-list'),\r\n    },\r\n    {\r\n        path: 'assets/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'asset-detail',\r\n            breadcrumb: { label: _('breadcrumb.assets'), link: ['../', 'assets'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('asset-detail'),\r\n    },\r\n];\r\n\r\nexport function productOptionsEditorBreadcrumb(data: any, params: any) {\r\n    return data.entity.pipe(\r\n        map((entity: any) => [\r\n            {\r\n                label: _('breadcrumb.inventory'),\r\n                link: ['../', 'inventory'],\r\n            },\r\n            {\r\n                label: `${entity.name}`,\r\n                link: ['../', 'inventory', params.id],\r\n            },\r\n            {\r\n                label: _('breadcrumb.product-options'),\r\n                link: ['options'],\r\n            },\r\n        ]),\r\n    );\r\n}\r\n","<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\r\n\r\n<vdr-facet-value-selector\r\n    (selectedValuesChange)=\"selectedValues = $event\"\r\n></vdr-facet-value-selector>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button\r\n        type=\"submit\"\r\n        (click)=\"selectValues()\"\r\n        [disabled]=\"selectedValues.length === 0\"\r\n        class=\"btn btn-primary\"\r\n    >\r\n        {{ 'catalog.add-facets' | translate }}\r\n    </button>\r\n</ng-template>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n    Dialog,\r\n    FacetValue,\r\n    FacetValueSelectorComponent,\r\n    FacetWithValuesFragment,\r\n} from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-apply-facet-dialog',\r\n    templateUrl: './apply-facet-dialog.component.html',\r\n    styleUrls: ['./apply-facet-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ApplyFacetDialogComponent implements Dialog<FacetValue[]>, AfterViewInit {\r\n    @ViewChild(FacetValueSelectorComponent) private selector: FacetValueSelectorComponent;\r\n    resolveWith: (result?: FacetValue[]) => void;\r\n    selectedValues: FacetValue[] = [];\r\n    // Provided by caller\r\n    facets: FacetWithValuesFragment[];\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => this.selector.focus(), 0);\r\n    }\r\n\r\n    selectValues() {\r\n        this.resolveWith(this.selectedValues);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"asset-detail\"></vdr-action-bar-items>\r\n            <button\r\n                *vdrIfPermissions=\"['UpdateCatalog', 'UpdateAsset']\"\r\n                class=\"btn btn-primary\"\r\n                (click)=\"save()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-page-block>\r\n    <vdr-asset-preview\r\n        [asset]=\"entity$ | async\"\r\n        [editable]=\"true\"\r\n        [customFields]=\"customFields\"\r\n        [customFieldsForm]=\"detailForm.get('customFields')\"\r\n        (assetChange)=\"onAssetChange($event)\"\r\n    />\r\n</vdr-page-block>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, UntypedFormBuilder } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    ASSET_FRAGMENT,\r\n    AssetDetailQueryDocument,\r\n    AssetDetailQueryQuery,\r\n    DataService,\r\n    LanguageCode,\r\n    NotificationService,\r\n    TAG_FRAGMENT,\r\n    TypedBaseDetailComponent,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\n\r\nexport const ASSET_DETAIL_QUERY = gql`\r\n    query AssetDetailQuery($id: ID!) {\r\n        asset(id: $id) {\r\n            ...Asset\r\n            tags {\r\n                ...Tag\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-asset-detail',\r\n    templateUrl: './asset-detail.component.html',\r\n    styleUrls: ['./asset-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetDetailComponent\r\n    extends TypedBaseDetailComponent<typeof AssetDetailQueryDocument, 'asset'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    readonly customFields = this.getCustomFieldConfig('Asset');\r\n    detailForm = new FormGroup({\r\n        name: new FormControl(''),\r\n        tags: new FormControl([] as string[]),\r\n        customFields: this.formBuilder.group(\r\n            this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n        ),\r\n    });\r\n\r\n    constructor(\r\n        private notificationService: NotificationService,\r\n        protected dataService: DataService,\r\n        private formBuilder: UntypedFormBuilder,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    onAssetChange(event: { id: string; name: string; tags: string[] }) {\r\n        this.detailForm.get('name')?.setValue(event.name);\r\n        this.detailForm.get('tags')?.setValue(event.tags);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    save() {\r\n        this.dataService.product\r\n            .updateAsset({\r\n                id: this.id,\r\n                name: this.detailForm.value.name,\r\n                tags: this.detailForm.value.tags,\r\n                customFields: this.detailForm.value.customFields,\r\n            })\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Asset' });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Asset',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(\r\n        entity: NonNullable<AssetDetailQueryQuery['asset']>,\r\n        languageCode: LanguageCode,\r\n    ): void {\r\n        this.detailForm.get('name')?.setValue(entity.name);\r\n        this.detailForm.get('tags')?.setValue(entity.tags.map(t => t.id));\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    BaseListComponent,\r\n    DataService,\r\n    DeletionResult,\r\n    GetAssetListQuery,\r\n    GetAssetListQueryVariables,\r\n    ItemOf,\r\n    LogicalOperator,\r\n    ModalService,\r\n    NotificationService,\r\n    SortOrder,\r\n    TagFragment,\r\n} from '@vendure/admin-ui/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { BehaviorSubject, combineLatest, EMPTY, Observable } from 'rxjs';\r\nimport { debounceTime, finalize, map, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-asset-list',\r\n    templateUrl: './asset-list.component.html',\r\n    styleUrls: ['./asset-list.component.scss'],\r\n})\r\nexport class AssetListComponent\r\n    extends BaseListComponent<\r\n        GetAssetListQuery,\r\n        ItemOf<GetAssetListQuery, 'assets'>,\r\n        GetAssetListQueryVariables\r\n    >\r\n    implements OnInit\r\n{\r\n    searchTerm$ = new BehaviorSubject<string | undefined>(undefined);\r\n    filterByTags$ = new BehaviorSubject<TagFragment[] | undefined>(undefined);\r\n    uploading = false;\r\n    allTags$: Observable<TagFragment[]>;\r\n    paginationConfig$: Observable<PaginationInstance>;\r\n\r\n    constructor(\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private dataService: DataService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.product.getAssetList(...args).refetchOnChannelChange(),\r\n            data => data.assets,\r\n            (skip, take) => {\r\n                const searchTerm = this.searchTerm$.value;\r\n                const tags = this.filterByTags$.value?.map(t => t.value);\r\n                return {\r\n                    options: {\r\n                        skip,\r\n                        take,\r\n                        ...(searchTerm\r\n                            ? {\r\n                                  filter: {\r\n                                      name: { contains: searchTerm },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                        sort: {\r\n                            createdAt: SortOrder.DESC,\r\n                        },\r\n                        tags,\r\n                        tagsOperator: LogicalOperator.AND,\r\n                    },\r\n                };\r\n            },\r\n            { take: 25, skip: 0 },\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(\r\n            map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })),\r\n        );\r\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n\r\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\r\n    }\r\n\r\n    filesSelected(files: File[]) {\r\n        if (files.length) {\r\n            this.uploading = true;\r\n            this.dataService.product\r\n                .createAssets(files)\r\n                .pipe(finalize(() => (this.uploading = false)))\r\n                .subscribe(({ createAssets }) => {\r\n                    let successCount = 0;\r\n                    for (const result of createAssets) {\r\n                        switch (result.__typename) {\r\n                            case 'Asset':\r\n                                successCount++;\r\n                                break;\r\n                            case 'MimeTypeError':\r\n                                this.notificationService.error(result.message);\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (0 < successCount) {\r\n                        super.refresh();\r\n                        this.notificationService.success(_('asset.notify-create-assets-success'), {\r\n                            count: successCount,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteAssets(assets: Asset[]) {\r\n        this.showModalAndDelete(assets.map(a => a.id))\r\n            .pipe(\r\n                switchMap(response => {\r\n                    if (response.result === DeletionResult.DELETED) {\r\n                        return [true];\r\n                    } else {\r\n                        return this.showModalAndDelete(\r\n                            assets.map(a => a.id),\r\n                            response.message || '',\r\n                        ).pipe(map(r => r.result === DeletionResult.DELETED));\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Assets',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Assets',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private showModalAndDelete(assetIds: string[], message?: string) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-assets'),\r\n                translationVars: {\r\n                    count: assetIds.length,\r\n                },\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)),\r\n                map(res => res.deleteAssets),\r\n            );\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <div class=\"my-2\">\r\n        <vdr-asset-search-input\r\n            [tags]=\"allTags$ | async\"\r\n            (searchTermChange)=\"searchTerm$.next($event)\"\r\n            (tagsChange)=\"filterByTags$.next($event)\"\r\n        >\r\n            <vdr-asset-file-input\r\n                (selectFiles)=\"filesSelected($event)\"\r\n                [uploading]=\"uploading\"\r\n                dropZoneTarget=\".content-area\"\r\n            ></vdr-asset-file-input>\r\n        </vdr-asset-search-input>\r\n    </div>\r\n    <vdr-asset-gallery\r\n        [assets]=\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\"\r\n        [multiSelect]=\"true\"\r\n        [canDelete]=\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\"\r\n        (deleteAssets)=\"deleteAssets($event)\"\r\n    ></vdr-asset-gallery>\r\n\r\n    <div class=\"paging-controls\">\r\n        <vdr-items-per-page-controls\r\n            [itemsPerPage]=\"itemsPerPage$ | async\"\r\n            (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n        ></vdr-items-per-page-controls>\r\n\r\n        <vdr-pagination-controls\r\n            [currentPage]=\"currentPage$ | async\"\r\n            [itemsPerPage]=\"itemsPerPage$ | async\"\r\n            [totalItems]=\"totalItems$ | async\"\r\n            (pageChange)=\"setPageNumber($event)\"\r\n        ></vdr-pagination-controls>\r\n    </div>\r\n</vdr-page-block>\r\n","<div *ngIf=\"!compact; else compactView\" class=\"standard-view-container\">\r\n    <div class=\"featured-asset\">\r\n        <img\r\n            *ngIf=\"featuredAsset\"\r\n            [src]=\"featuredAsset | assetPreview : 'small'\"\r\n            (click)=\"previewAsset(featuredAsset)\"\r\n        />\r\n        <div class=\"placeholder\" *ngIf=\"!featuredAsset\" (click)=\"selectAssets()\">\r\n            <clr-icon shape=\"image\" size=\"128\"></clr-icon>\r\n            <div>{{ 'catalog.no-featured-asset' | translate }}</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"all-assets-container\">\r\n    <ng-container *ngTemplateOutlet=\"assetList\"></ng-container>\r\n    <div *vdrIfPermissions=\"updatePermissions\">\r\n        <button class=\"btn\" (click)=\"selectAssets()\">\r\n            <clr-icon shape=\"attachment\"></clr-icon>\r\n            {{ 'asset.add-asset' | translate }}\r\n        </button>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #compactView>\r\n    <div class=\"featured-asset compact\">\r\n        <img\r\n            *ngIf=\"featuredAsset\"\r\n            [src]=\"featuredAsset | assetPreview : 'thumb'\"\r\n            (click)=\"previewAsset(featuredAsset)\"\r\n        />\r\n\r\n        <div class=\"placeholder\" *ngIf=\"!featuredAsset\" (click)=\"selectAssets()\">\r\n            <clr-icon shape=\"image\" size=\"150\"></clr-icon>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"assetList\"></ng-container>\r\n    <button\r\n        *vdrIfPermissions=\"updatePermissions\"\r\n        class=\"compact-select btn btn-icon btn-sm btn-block\"\r\n        [title]=\"'asset.add-asset' | translate\"\r\n        (click)=\"selectAssets()\"\r\n    >\r\n        <clr-icon shape=\"attachment\"></clr-icon>\r\n        {{ 'asset.add-asset' | translate }}\r\n    </button>\r\n</ng-template>\r\n\r\n<ng-template #assetList>\r\n    <div class=\"all-assets\" [class.compact]=\"compact\" cdkDropListGroup>\r\n        <div\r\n            *ngFor=\"let asset of assets; let index = index\"\r\n            class=\"drop-list\"\r\n            cdkDropList\r\n            cdkDropListOrientation=\"horizontal\"\r\n            [cdkDropListData]=\"index\"\r\n            [cdkDropListDisabled]=\"!(updatePermissions | hasPermission)\"\r\n            (cdkDropListDropped)=\"dropListDropped($event)\"\r\n        >\r\n            <vdr-dropdown cdkDrag>\r\n                <div\r\n                    class=\"asset-thumb\"\r\n                    vdrDropdownTrigger\r\n                    [class.featured]=\"isFeatured(asset)\"\r\n                    [title]=\"\"\r\n                    tabindex=\"0\"\r\n                >\r\n                    <img [src]=\"asset | assetPreview : 'tiny'\" />\r\n                </div>\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <button type=\"button\" vdrDropdownItem (click)=\"previewAsset(asset)\">\r\n                        {{ 'asset.preview' | translate }}\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        [disabled]=\"isFeatured(asset) || !(updatePermissions | hasPermission)\"\r\n                        vdrDropdownItem\r\n                        (click)=\"setAsFeatured(asset)\"\r\n                    >\r\n                        {{ 'asset.set-as-featured-asset' | translate }}\r\n                    </button>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"remove-asset\"\r\n                        vdrDropdownItem\r\n                        [disabled]=\"!(updatePermissions | hasPermission)\"\r\n                        (click)=\"removeAsset(asset)\"\r\n                    >\r\n                        {{ 'asset.remove-asset' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\nimport {\r\n    Asset,\r\n    AssetPickerDialogComponent,\r\n    AssetPreviewDialogComponent,\r\n    ModalService,\r\n    Permission,\r\n} from '@vendure/admin-ui/core';\r\nimport { unique } from '@vendure/common/lib/unique';\r\n\r\nexport interface AssetChange {\r\n    assets: Asset[];\r\n    featuredAsset: Asset | undefined;\r\n}\r\n\r\n/**\r\n * A component which displays the Assets, and allows assets to be removed and\r\n * added, and for the featured asset to be set.\r\n *\r\n * Note: rather complex code for drag drop is due to a limitation of the default CDK implementation\r\n * which is addressed by a work-around from here: https://github.com/angular/components/issues/13372#issuecomment-483998378\r\n */\r\n@Component({\r\n    selector: 'vdr-assets',\r\n    templateUrl: './assets.component.html',\r\n    styleUrls: ['./assets.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetsComponent {\r\n    @Input('assets') set assetsSetter(val: Asset[]) {\r\n        // create a new non-readonly array of assets\r\n        this.assets = (val || []).slice();\r\n    }\r\n\r\n    @Input() featuredAsset: Asset | undefined;\r\n    @HostBinding('class.compact')\r\n    @Input()\r\n    compact = false;\r\n    // eslint-disable-next-line @angular-eslint/no-output-native\r\n    @Output() change = new EventEmitter<AssetChange>();\r\n\r\n    public assets: Asset[] = [];\r\n\r\n    @Input()\r\n    updatePermissions: string | string[] | Permission | Permission[];\r\n\r\n    constructor(private modalService: ModalService, private changeDetector: ChangeDetectorRef) {}\r\n\r\n    selectAssets() {\r\n        this.modalService\r\n            .fromComponent(AssetPickerDialogComponent, {\r\n                size: 'xl',\r\n            })\r\n            .subscribe(result => {\r\n                if (result && result.length) {\r\n                    this.assets = unique(this.assets.concat(result), 'id');\r\n                    if (!this.featuredAsset) {\r\n                        this.featuredAsset = result[0];\r\n                    }\r\n                    this.emitChangeEvent(this.assets, this.featuredAsset);\r\n                    this.changeDetector.markForCheck();\r\n                }\r\n            });\r\n    }\r\n\r\n    setAsFeatured(asset: Asset) {\r\n        this.featuredAsset = asset;\r\n        this.emitChangeEvent(this.assets, asset);\r\n    }\r\n\r\n    isFeatured(asset: Asset): boolean {\r\n        return !!this.featuredAsset && this.featuredAsset.id === asset.id;\r\n    }\r\n\r\n    previewAsset(asset: Asset) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n                size: 'xl',\r\n                closable: true,\r\n                locals: { asset },\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    removeAsset(asset: Asset) {\r\n        this.assets = this.assets.filter(a => a.id !== asset.id);\r\n        if (this.featuredAsset && this.featuredAsset.id === asset.id) {\r\n            this.featuredAsset = this.assets.length > 0 ? this.assets[0] : undefined;\r\n        }\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n\r\n    private emitChangeEvent(assets: Asset[], featuredAsset: Asset | undefined) {\r\n        this.change.emit({\r\n            assets,\r\n            featuredAsset,\r\n        });\r\n    }\r\n\r\n    dropListDropped(event: CdkDragDrop<number>) {\r\n        moveItemInArray(this.assets, event.previousContainer.data, event.container.data);\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n}\r\n","<ng-template vdrDialogTitle>\r\n    <ng-container *ngIf=\"isProductVariantMode; else productModeTitle\">{{\r\n        'catalog.assign-variants-to-channel' | translate\r\n    }}</ng-container>\r\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\r\n</ng-template>\r\n\r\n<div class=\"flex\">\r\n    <clr-input-container>\r\n        <label>{{ 'common.channel' | translate }}</label>\r\n        <vdr-channel-assignment-control\r\n            clrInput\r\n            [multiple]=\"false\"\r\n            [includeDefaultChannel]=\"false\"\r\n            [disableChannelIds]=\"currentChannelIds\"\r\n            [formControl]=\"selectedChannelIdControl\"\r\n        ></vdr-channel-assignment-control>\r\n    </clr-input-container>\r\n    <div class=\"flex-spacer\"></div>\r\n    <clr-input-container>\r\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\r\n        <input clrInput type=\"number\" min=\"0\" max=\"99999\" [formControl]=\"priceFactorControl\" />\r\n    </clr-input-container>\r\n</div>\r\n\r\n<div class=\"channel-price-preview\">\r\n    <label class=\"clr-control-label\">{{ 'catalog.channel-price-preview' | translate }}</label>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>{{ 'common.name' | translate }}</th>\r\n                <th>\r\n                    {{\r\n                        'catalog.price-in-channel'\r\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\r\n                    }}\r\n                </th>\r\n                <th>\r\n                    <ng-template [ngIf]=\"selectedChannel\" [ngIfElse]=\"noSelection\">\r\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\r\n                    </ng-template>\r\n                    <ng-template #noSelection>\r\n                        {{ 'catalog.no-channel-selected' | translate }}\r\n                    </ng-template>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let row of variantsPreview$ | async\">\r\n                <td>{{ row.name }}</td>\r\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\r\n                <td>\r\n                    <ng-template [ngIf]=\"selectedChannel\" [ngIfElse]=\"noChannelSelected\">\r\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\r\n                    </ng-template>\r\n                    <ng-template #noChannelSelected> - </ng-template>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"assign()\" [disabled]=\"!selectedChannel\" class=\"btn btn-primary\">\r\n        <ng-template [ngIf]=\"selectedChannel\" [ngIfElse]=\"noSelection\">\r\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\r\n        </ng-template>\r\n        <ng-template #noSelection>\r\n            {{ 'catalog.no-channel-selected' | translate }}\r\n        </ng-template>\r\n    </button>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    Dialog,\r\n    GetChannelsQuery,\r\n    ItemOf,\r\n    LogicalOperator,\r\n    NotificationService,\r\n} from '@vendure/admin-ui/core';\r\nimport { combineLatest, from, lastValueFrom, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\ntype Channel = ItemOf<GetChannelsQuery, 'channels'>;\r\n\r\n@Component({\r\n    selector: 'vdr-assign-products-to-channel-dialog',\r\n    templateUrl: './assign-products-to-channel-dialog.component.html',\r\n    styleUrls: ['./assign-products-to-channel-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssignProductsToChannelDialogComponent implements OnInit, Dialog<any> {\r\n    selectedChannel: Channel | null | undefined;\r\n    currentChannel: Channel;\r\n    availableChannels: Channel[];\r\n    resolveWith: (result?: any) => void;\r\n    variantsPreview$: Observable<Array<{ id: string; name: string; price: number; pricePreview: number }>>;\r\n    priceFactorControl = new UntypedFormControl(1);\r\n    selectedChannelIdControl = new UntypedFormControl();\r\n\r\n    // assigned by ModalService.fromComponent() call\r\n    productIds: string[];\r\n    productVariantIds: string[] | undefined;\r\n    currentChannelIds: string[];\r\n\r\n    get isProductVariantMode(): boolean {\r\n        return this.productVariantIds != null;\r\n    }\r\n\r\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\r\n\r\n    ngOnInit() {\r\n        const activeChannelId$ = this.dataService.client\r\n            .userStatus()\r\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\r\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\r\n\r\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            this.currentChannel = channels.items.find(c => c.id === activeChannelId)!;\r\n            this.availableChannels = channels.items;\r\n        });\r\n\r\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\r\n            this.selectChannel(ids);\r\n        });\r\n\r\n        this.variantsPreview$ = combineLatest(\r\n            from(this.getTopVariants(10)),\r\n            this.priceFactorControl.valueChanges.pipe(startWith(1)),\r\n        ).pipe(\r\n            map(([variants, factor]) =>\r\n                variants.map(v => ({\r\n                    id: v.id,\r\n                    name: v.name,\r\n                    price: v.price,\r\n                    pricePreview: v.price * +factor,\r\n                })),\r\n            ),\r\n        );\r\n    }\r\n\r\n    selectChannel(channelIds: string[]) {\r\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\r\n    }\r\n\r\n    assign() {\r\n        const selectedChannel = this.selectedChannel;\r\n        if (selectedChannel) {\r\n            if (!this.isProductVariantMode) {\r\n                this.dataService.product\r\n                    .assignProductsToChannel({\r\n                        channelId: selectedChannel.id,\r\n                        productIds: this.productIds,\r\n                        priceFactor: +this.priceFactorControl.value,\r\n                    })\r\n                    .subscribe(() => {\r\n                        this.notificationService.success(_('catalog.assign-product-to-channel-success'), {\r\n                            channel: selectedChannel.code,\r\n                            count: this.productIds.length,\r\n                        });\r\n                        this.resolveWith(true);\r\n                    });\r\n            } else if (this.productVariantIds) {\r\n                this.dataService.product\r\n                    .assignVariantsToChannel({\r\n                        channelId: selectedChannel.id,\r\n                        productVariantIds: this.productVariantIds,\r\n                        priceFactor: +this.priceFactorControl.value,\r\n                    })\r\n                    .subscribe(() => {\r\n                        this.notificationService.success(_('catalog.assign-variant-to-channel-success'), {\r\n                            channel: selectedChannel.code,\r\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                            count: this.productVariantIds!.length,\r\n                        });\r\n                        this.resolveWith(true);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    private async getTopVariants(take: number) {\r\n        return (\r\n            await lastValueFrom(\r\n                this.dataService.product.getProductVariants({\r\n                    filterOperator: LogicalOperator.OR,\r\n                    filter: {\r\n                        productId: { in: this.productIds },\r\n                        id: { in: this.productVariantIds },\r\n                    },\r\n                    take,\r\n                }).single$,\r\n            )\r\n        ).productVariants.items;\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nexport const GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS = gql`\r\n    query GetProductsWithFacetValuesByIds($ids: [String!]!) {\r\n        products(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_VARIANTS_WITH_FACET_VALUES_BY_IDS = gql`\r\n    query GetVariantsWithFacetValuesByIds($ids: [String!]!) {\r\n        productVariants(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                sku\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_PRODUCTS_BULK = gql`\r\n    mutation UpdateProductsBulk($input: [UpdateProductInput!]!) {\r\n        updateProducts(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_VARIANTS_BULK = gql`\r\n    mutation UpdateVariantsBulk($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\n","<ng-template vdrDialogTitle>\r\n    {{ 'catalog.edit-facet-values' | translate }}\r\n</ng-template>\r\n\r\n<div class=\"flex\">\r\n    <div class=\"flex center\">\r\n        <div class=\"mr2\">\r\n            {{ 'catalog.add-facet-value' | translate }}\r\n        </div>\r\n        <vdr-facet-value-selector\r\n            (selectedValuesChange)=\"selectedValues = $event\"\r\n        ></vdr-facet-value-selector>\r\n    </div>\r\n</div>\r\n\r\n<table class=\"table\" *ngIf=\"state !== 'loading'; else placeholder\">\r\n    <tbody>\r\n        <tr *ngFor=\"let item of items\">\r\n            <td class=\"left align-middle\">\r\n                <div>{{ item.name }}</div>\r\n                <div *ngIf=\"item.sku\" class=\"sku\">{{ item.sku }}</div>\r\n            </td>\r\n            <td class=\"left\">\r\n                <vdr-facet-value-chip\r\n                    *ngFor=\"let facetValue of item.facetValues\"\r\n                    [facetValue]=\"facetValue\"\r\n                    (remove)=\"removeFacetValue(item, facetValue.id)\"\r\n                ></vdr-facet-value-chip>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #placeholder>\r\n    <div class=\"loading\">\r\n    <clr-spinner></clr-spinner>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button\r\n        type=\"submit\"\r\n        (click)=\"addFacetValues()\"\r\n        [disabled]=\"selectedValues.length === 0 && facetValuesRemoved === false\"\r\n        class=\"btn btn-primary\"\r\n    >\r\n        {{ 'common.update' | translate }}\r\n    </button>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n    DataService,\r\n    Dialog,\r\n    FacetWithValuesFragment,\r\n    GetProductsWithFacetValuesByIdsQuery,\r\n    GetProductsWithFacetValuesByIdsQueryVariables,\r\n    GetVariantsWithFacetValuesByIdsQuery,\r\n    UpdateProductsBulkMutation,\r\n    UpdateProductsBulkMutationVariables,\r\n    UpdateVariantsBulkMutation,\r\n    UpdateVariantsBulkMutationVariables,\r\n} from '@vendure/admin-ui/core';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS,\r\n    GET_VARIANTS_WITH_FACET_VALUES_BY_IDS,\r\n    UPDATE_PRODUCTS_BULK,\r\n    UPDATE_VARIANTS_BULK,\r\n} from './bulk-add-facet-values-dialog.graphql';\r\n\r\ninterface ProductOrVariant {\r\n    id: string;\r\n    name: string;\r\n    sku?: string;\r\n    facetValues: Array<{\r\n        id: string;\r\n        name: string;\r\n        code: string;\r\n        facet: Array<{\r\n            id: string;\r\n            name: string;\r\n            code: string;\r\n        }>;\r\n    }>;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-bulk-add-facet-values-dialog',\r\n    templateUrl: './bulk-add-facet-values-dialog.component.html',\r\n    styleUrls: ['./bulk-add-facet-values-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BulkAddFacetValuesDialogComponent\r\n    implements OnInit, OnDestroy, Dialog<FacetWithValuesFragment[]>\r\n{\r\n    resolveWith: (result?: FacetWithValuesFragment[]) => void;\r\n    /* provided by call to ModalService */\r\n    mode: 'product' | 'variant' = 'product';\r\n    ids?: string[];\r\n    state: 'loading' | 'ready' | 'saving' = 'loading';\r\n\r\n    selectedValues: FacetWithValuesFragment[] = [];\r\n    items: ProductOrVariant[] = [];\r\n    facetValuesRemoved = false;\r\n    private subscription: Subscription;\r\n    constructor(private dataService: DataService, private changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n    ngOnInit(): void {\r\n        const fetchData$: Observable<any> =\r\n            this.mode === 'product'\r\n                ? this.dataService\r\n                      .query<\r\n                          GetProductsWithFacetValuesByIdsQuery,\r\n                          GetProductsWithFacetValuesByIdsQueryVariables\r\n                      >(GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, {\r\n                          ids: this.ids ?? [],\r\n                      })\r\n                      .mapSingle(({ products }) =>\r\n                          products.items.map(p => ({ ...p, facetValues: [...p.facetValues] })),\r\n                      )\r\n                : this.dataService\r\n                      .query<\r\n                          GetVariantsWithFacetValuesByIdsQuery,\r\n                          GetProductsWithFacetValuesByIdsQueryVariables\r\n                      >(GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, {\r\n                          ids: this.ids ?? [],\r\n                      })\r\n                      .mapSingle(({ productVariants }) =>\r\n                          productVariants.items.map(p => ({ ...p, facetValues: [...p.facetValues] })),\r\n                      );\r\n        this.subscription = fetchData$.subscribe({\r\n            next: items => {\r\n                this.items = items;\r\n                this.state = 'ready';\r\n                this.changeDetectorRef.markForCheck();\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    removeFacetValue(item: ProductOrVariant, facetValueId: string) {\r\n        item.facetValues = item.facetValues.filter(fv => fv.id !== facetValueId);\r\n        this.facetValuesRemoved = true;\r\n    }\r\n\r\n    addFacetValues() {\r\n        const selectedFacetValueIds = this.selectedValues.map(sv => sv.id);\r\n        this.state = 'saving';\r\n        const save$: Observable<any> =\r\n            this.mode === 'product'\r\n                ? this.dataService.mutate<UpdateProductsBulkMutation, UpdateProductsBulkMutationVariables>(\r\n                      UPDATE_PRODUCTS_BULK,\r\n                      {\r\n                          input: this.items?.map(product => ({\r\n                              id: product.id,\r\n                              facetValueIds: unique([\r\n                                  ...product.facetValues.map(fv => fv.id),\r\n                                  ...selectedFacetValueIds,\r\n                              ]),\r\n                          })),\r\n                      },\r\n                  )\r\n                : this.dataService.mutate<UpdateVariantsBulkMutation, UpdateVariantsBulkMutationVariables>(\r\n                      UPDATE_VARIANTS_BULK,\r\n                      {\r\n                          input: this.items?.map(product => ({\r\n                              id: product.id,\r\n                              facetValueIds: unique([\r\n                                  ...product.facetValues.map(fv => fv.id),\r\n                                  ...selectedFacetValueIds,\r\n                              ]),\r\n                          })),\r\n                      },\r\n                  );\r\n        return save$.subscribe(result => {\r\n            this.resolveWith(this.selectedValues);\r\n        });\r\n    }\r\n}\r\n","<div class=\"table-wrapper\">\r\n    <div class=\"progress loop\" [class.visible]=\"isLoading\"></div>\r\n    <div class=\"header-title-row\">\r\n        <ng-container\r\n            *ngTemplateOutlet=\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\"\r\n        ></ng-container>\r\n    </div>\r\n    <vdr-data-table-2\r\n        id=\"collection-contents\"\r\n        [class.loading]=\"isLoading\"\r\n        [items]=\"contents$ | async\"\r\n        [itemsPerPage]=\"contentsItemsPerPage$ | async\"\r\n        [totalItems]=\"contentsTotalItems$ | async\"\r\n        [currentPage]=\"contentsCurrentPage$ | async\"\r\n        (pageChange)=\"setContentsPageNumber($event)\"\r\n        (itemsPerPageChange)=\"setContentsItemsPerPage($event)\"\r\n    >\r\n        <vdr-dt2-search\r\n            [searchTermControl]=\"filterTermControl\"\r\n            [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n        />\r\n        <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\">\r\n            <ng-template let-variant=\"item\">\r\n                {{ variant.id }}\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'common.created-at' | translate\" [hiddenByDefault]=\"true\">\r\n            <ng-template let-variant=\"item\">\r\n                {{ variant.createdAt | localeDate : 'short' }}\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'common.updated-at' | translate\" [hiddenByDefault]=\"true\">\r\n            <ng-template let-variant=\"item\">\r\n                {{ variant.updatedAt | localeDate : 'short' }}\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'common.name' | translate\" [optional]=\"false\">\r\n            <ng-template let-variant=\"item\">\r\n                <a class=\"button-ghost\" [routerLink]=\"['/catalog/inventory', variant.productId]\"\r\n                    ><span>{{ variant.name }}</span\r\n                    ><clr-icon shape=\"arrow right\"\r\n                /></a>\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'catalog.sku' | translate\" [optional]=\"false\">\r\n            <ng-template let-variant=\"item\">\r\n                {{ variant.sku }}\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n    </vdr-data-table-2>\r\n</div>\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n} from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    CollectionFilterParameter,\r\n    ConfigurableOperationInput,\r\n    DataService,\r\n    GetCollectionContentsQuery,\r\n} from '@vendure/admin-ui/core';\r\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\r\nimport {\r\n    catchError,\r\n    debounceTime,\r\n    distinctUntilChanged,\r\n    filter,\r\n    finalize,\r\n    map,\r\n    startWith,\r\n    switchMap,\r\n    takeUntil,\r\n    tap,\r\n} from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-contents',\r\n    templateUrl: './collection-contents.component.html',\r\n    styleUrls: ['./collection-contents.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionContentsComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() collectionId: string;\r\n    @Input() parentId: string;\r\n    @Input() inheritFilters: boolean;\r\n    @Input() updatedFilters: ConfigurableOperationInput[] | undefined;\r\n    @Input() previewUpdatedFilters = false;\r\n    @ContentChild(TemplateRef, { static: true }) headerTemplate: TemplateRef<any>;\r\n\r\n    contents$: Observable<NonNullable<GetCollectionContentsQuery['collection']>['productVariants']['items']>;\r\n    contentsTotalItems$: Observable<number>;\r\n    contentsItemsPerPage$: Observable<number>;\r\n    contentsCurrentPage$: Observable<number>;\r\n    filterTermControl = new UntypedFormControl('');\r\n    isLoading = false;\r\n    private collectionIdChange$ = new BehaviorSubject<string>('');\r\n    private parentIdChange$ = new BehaviorSubject<string>('');\r\n    private filterChanges$ = new BehaviorSubject<ConfigurableOperationInput[]>([]);\r\n    private inheritFiltersChanges$ = new BehaviorSubject<boolean>(true);\r\n    private refresh$ = new BehaviorSubject<boolean>(true);\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.contentsCurrentPage$ = this.route.queryParamMap.pipe(\r\n            map(qpm => qpm.get('contentsPage')),\r\n            map(page => (!page ? 1 : +page)),\r\n            startWith(1),\r\n            distinctUntilChanged(),\r\n        );\r\n\r\n        this.contentsItemsPerPage$ = this.route.queryParamMap.pipe(\r\n            map(qpm => qpm.get('contentsPerPage')),\r\n            map(perPage => (!perPage ? 10 : +perPage)),\r\n            startWith(10),\r\n            distinctUntilChanged(),\r\n        );\r\n\r\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(\r\n            debounceTime(250),\r\n            tap(() => this.setContentsPageNumber(1)),\r\n            startWith(''),\r\n        );\r\n\r\n        const filterChanges$ = this.filterChanges$.asObservable().pipe(\r\n            filter(() => this.previewUpdatedFilters),\r\n            tap(() => this.setContentsPageNumber(1)),\r\n            startWith([]),\r\n        );\r\n\r\n        const inheritFiltersChanges$ = this.inheritFiltersChanges$.asObservable().pipe(\r\n            filter(() => this.inheritFilters != null),\r\n            distinctUntilChanged(),\r\n            tap(() => this.setContentsPageNumber(1)),\r\n            startWith(true),\r\n        );\r\n\r\n        const fetchUpdate$ = combineLatest(\r\n            this.collectionIdChange$,\r\n            this.parentIdChange$,\r\n            this.contentsCurrentPage$,\r\n            this.contentsItemsPerPage$,\r\n            filterTerm$,\r\n            filterChanges$,\r\n            inheritFiltersChanges$,\r\n            this.refresh$,\r\n        );\r\n\r\n        const collection$ = fetchUpdate$.pipe(\r\n            takeUntil(this.destroy$),\r\n            tap(() => (this.isLoading = true)),\r\n            debounceTime(50),\r\n            switchMap(([id, parentId, currentPage, itemsPerPage, filterTerm, filters, inheritFilters]) => {\r\n                const take = itemsPerPage;\r\n                const skip = (currentPage - 1) * itemsPerPage;\r\n                if (filters.length && this.previewUpdatedFilters) {\r\n                    const filterClause = filterTerm\r\n                        ? ({ name: { contains: filterTerm } } as CollectionFilterParameter)\r\n                        : undefined;\r\n                    return this.dataService.collection\r\n                        .previewCollectionVariants(\r\n                            {\r\n                                parentId,\r\n                                filters,\r\n                                inheritFilters,\r\n                            },\r\n                            {\r\n                                take,\r\n                                skip,\r\n                                filter: filterClause,\r\n                            },\r\n                        )\r\n                        .mapSingle(data => data.previewCollectionVariants)\r\n                        .pipe(catchError(() => of({ items: [], totalItems: 0 })));\r\n                } else if (id) {\r\n                    return this.dataService.collection\r\n                        .getCollectionContents(id, take, skip, filterTerm)\r\n                        .mapSingle(data => data.collection?.productVariants);\r\n                } else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n            tap(() => (this.isLoading = false)),\r\n            finalize(() => (this.isLoading = false)),\r\n        );\r\n\r\n        this.contents$ = collection$.pipe(map(result => (result ? result.items : [])));\r\n        this.contentsTotalItems$ = collection$.pipe(map(result => (result ? result.totalItems : 0)));\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('collectionId' in changes) {\r\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\r\n        }\r\n        if ('parentId' in changes) {\r\n            this.parentIdChange$.next(changes.parentId.currentValue);\r\n        }\r\n        if ('inheritFilters' in changes) {\r\n            this.inheritFiltersChanges$.next(changes.inheritFilters.currentValue);\r\n        }\r\n        if ('updatedFilters' in changes) {\r\n            if (this.updatedFilters) {\r\n                this.filterChanges$.next(this.updatedFilters);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    setContentsPageNumber(page: number) {\r\n        this.setParam('contentsPage', page);\r\n    }\r\n\r\n    setContentsItemsPerPage(perPage: number) {\r\n        this.setParam('contentsPerPage', perPage);\r\n    }\r\n\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n\r\n    private setParam(key: string, value: any) {\r\n        this.router.navigate(['./'], {\r\n            relativeTo: this.route,\r\n            queryParams: {\r\n                [key]: value,\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n}\r\n","<div class=\"bulk-actions\">\r\n    <ng-content select=\"vdr-bulk-action-menu\"></ng-content>\r\n</div>\r\n<div class=\"table-wrapper\">\r\n    <table\r\n        class=\"\"\r\n        [class.no-select]=\"disableSelect\"\r\n        [style.table-layout]=\"!items?.length ? 'fixed' : 'inherit'\"\r\n    >\r\n        <thead [class.items-selected]=\"selectionManager?.selection.length\">\r\n            <tr class=\"heading-row\">\r\n                <th *ngIf=\"selectionManager\" class=\"selection-col\">\r\n                    <div class=\"flex\">\r\n                        <div class=\"drag-handle-spacer\"></div>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrCheckbox\r\n                            [checked]=\"selectionManager?.areAllCurrentItemsSelected()\"\r\n                            (change)=\"onToggleAllClick()\"\r\n                        />\r\n                    </div>\r\n                </th>\r\n                <th\r\n                    *ngFor=\"let column of visibleSortedColumns; last as isLast\"\r\n                    [class.expand]=\"column.expand\"\r\n                >\r\n                    <div class=\"cell-content\" [ngClass]=\"column.align\">\r\n                        <span>{{ column.heading }}</span>\r\n                        <div *ngIf=\"column.sort as sort\" class=\"sort-toggle\">\r\n                            <button (click)=\"sort.toggleSortOrder()\" [class.active]=\"sort.sortOrder\">\r\n                                <clr-icon *ngIf=\"!sort.sortOrder\" shape=\"two-way-arrows left\"></clr-icon>\r\n                                <clr-icon *ngIf=\"sort.sortOrder === 'ASC'\" shape=\"arrow up\"></clr-icon>\r\n                                <clr-icon *ngIf=\"sort.sortOrder === 'DESC'\" shape=\"arrow down\"></clr-icon>\r\n                            </button>\r\n                            <div class=\"sort-label\" *ngIf=\"sort.sortOrder\">{{ sort.sortOrder }}</div>\r\n                        </div>\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"column-picker\">\r\n                        <vdr-data-table-colum-picker\r\n                            [uiLanguage]=\"uiLanguage$ | async\"\r\n                            [columns]=\"sortedColumns\"\r\n                            (reorder)=\"onColumnReorder($event)\"\r\n                            (resetColumns)=\"onColumnsReset()\"\r\n                        ></vdr-data-table-colum-picker>\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n            <tr *ngIf=\"searchComponent || customSearchTemplate || filters?.length\">\r\n                <th\r\n                    [attr.colspan]=\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\"\r\n                    class=\"filter-row\"\r\n                    [class.active]=\"showSearchFilterRow\"\r\n                >\r\n                    <button\r\n                        class=\"button-ghost toggle-search-filter-row\"\r\n                        [class.active]=\"showSearchFilterRow\"\r\n                        (click)=\"toggleSearchFilterRow()\"\r\n                        [title]=\"'common.search-and-filter-list' | translate\"\r\n                    >\r\n                        <clr-icon shape=\"search\"></clr-icon>\r\n                    </button>\r\n                    <div class=\"filter-row-wrapper\" [class.hidden]=\"!showSearchFilterRow\">\r\n                        <ng-container *ngTemplateOutlet=\"searchComponent?.template\"></ng-container>\r\n                        <ng-container *ngTemplateOutlet=\"customSearchTemplate\"></ng-container>\r\n                        <ng-container *ngIf=\"filters\">\r\n                            <div class=\"filters\">\r\n                                <vdr-data-table-filters\r\n                                    *ngFor=\"let activeFilter of filters.activeFilters\"\r\n                                    [filterWithValue]=\"activeFilter\"\r\n                                    [filters]=\"filters\"\r\n                                    class=\"mt-1\"\r\n                                ></vdr-data-table-filters>\r\n                                <vdr-data-table-filters\r\n                                    *ngIf=\"filters.length\"\r\n                                    [filters]=\"filters\"\r\n                                    class=\"mt-1\"\r\n                                ></vdr-data-table-filters>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody\r\n            cdkDropList\r\n            cdkDropListLockAxis=\"y\"\r\n            (cdkDropListDropped)=\"onDrop($event)\"\r\n            [cdkDropListSortPredicate]=\"sortPredicate\"\r\n        >\r\n            <ng-container\r\n                *ngFor=\"\r\n                let item of items\r\n                    | paginate\r\n                        : {\r\n                              itemsPerPage: itemsPerPage,\r\n                              currentPage: currentPage,\r\n                              totalItems: totalItems,\r\n                              id: id,\r\n                          };\r\n                index as i;\r\n                trackBy: trackByFn\r\n            \"\r\n            >\r\n                <ng-container\r\n                    [ngTemplateOutlet]=\"collectionRowTmp\"\r\n                    [ngTemplateOutletContext]=\"{ item: item, i: i, depth: 0 }\"\r\n                ></ng-container>\r\n            </ng-container>\r\n            <ng-container>\r\n                <tr *ngIf=\"!items?.length\">\r\n                    <td [attr.colspan]=\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\">\r\n                        <vdr-empty-placeholder [emptyStateLabel]=\"emptyStateLabel\"></vdr-empty-placeholder>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n<div class=\"table-footer\">\r\n    <vdr-items-per-page-controls\r\n        *ngIf=\"totalItems\"\r\n        [itemsPerPage]=\"itemsPerPage\"\r\n        (itemsPerPageChange)=\"itemsPerPageChange.emit($event)\"\r\n    ></vdr-items-per-page-controls>\r\n    <div *ngIf=\"totalItems\" class=\"p5 total-items-count\">\r\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\r\n    </div>\r\n\r\n    <vdr-pagination-controls\r\n        *ngIf=\"totalItems\"\r\n        [id]=\"id\"\r\n        [currentPage]=\"currentPage\"\r\n        [itemsPerPage]=\"itemsPerPage\"\r\n        [totalItems]=\"totalItems\"\r\n        (pageChange)=\"pageChange.emit($event)\"\r\n    ></vdr-pagination-controls>\r\n</div>\r\n\r\n<ng-template #collectionRowTmp let-item=\"item\" let-depth=\"depth\">\r\n    <tr #collectionRow cdkDrag [cdkDragData]=\"{ depth: depth, collection: item }\" cdkDragBoundary=\"tbody\">\r\n        <td\r\n            *ngIf=\"selectionManager\"\r\n            [class.active]=\"activeIndex === absoluteIndex[item.id]\"\r\n            class=\"selection-col\"\r\n        >\r\n            <div class=\"flex\">\r\n                <div class=\"drag-handle\" cdkDragHandle [title]=\"'catalog.reorder-collection' | translate\">\r\n                    <clr-icon shape=\"drag-handle\"></clr-icon>\r\n                </div>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    clrCheckbox\r\n                    [checked]=\"selectionManager?.isSelected(item)\"\r\n                    (click)=\"onRowClick(item, $event)\"\r\n                />\r\n            </div>\r\n        </td>\r\n        <td\r\n            *ngFor=\"let column of visibleSortedColumns\"\r\n            [class.active]=\"activeIndex === absoluteIndex[item.id]\"\r\n        >\r\n            <div class=\"cell-content\" [ngClass]=\"column.align\">\r\n                <ng-container\r\n                    *ngTemplateOutlet=\"column.template; context: { item: item, depth: depth }\"\r\n                ></ng-container>\r\n            </div>\r\n        </td>\r\n        <td [class.active]=\"activeIndex === absoluteIndex[item.id]\"><!-- column select --></td>\r\n    </tr>\r\n    <ng-container *ngFor=\"let subCollection of getSubcollections(item)\">\r\n        <ng-container\r\n            *ngTemplateOutlet=\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\"\r\n        ></ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n","import { CdkDrag, CdkDragDrop, CdkDropList, DragDrop, DragRef } from '@angular/cdk/drag-drop';\r\nimport {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    QueryList,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport {\r\n    DataService,\r\n    DataTable2Component,\r\n    GetCollectionListQuery,\r\n    ItemOf,\r\n    LocalStorageService,\r\n} from '@vendure/admin-ui/core';\r\n\r\nexport type CollectionTableItem = ItemOf<GetCollectionListQuery, 'collections'>;\r\nexport type CollectionOrderEvent = {\r\n    collectionId: string;\r\n    parentId: string;\r\n    index: number;\r\n};\r\n@Component({\r\n    selector: 'vdr-collection-data-table',\r\n    templateUrl: './collection-data-table.component.html',\r\n    styleUrls: [\r\n        '../../../../core/src/shared/components/data-table-2/data-table2.component.scss',\r\n        './collection-data-table.component.scss',\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionDataTableComponent\r\n    extends DataTable2Component<CollectionTableItem>\r\n    implements OnChanges, AfterViewInit\r\n{\r\n    @Input() subCollections: CollectionTableItem[];\r\n    @Output() changeOrder = new EventEmitter<CollectionOrderEvent>();\r\n    @ViewChild(CdkDropList, { static: true }) dropList: CdkDropList<{\r\n        depth: number;\r\n        collection: CollectionTableItem;\r\n    }>;\r\n    @ViewChildren('collectionRow', { read: CdkDrag }) collectionRowList: QueryList<CdkDrag>;\r\n    dragRefs: DragRef[] = [];\r\n    absoluteIndex: { [id: string]: number } = {};\r\n    constructor(\r\n        protected changeDetectorRef: ChangeDetectorRef,\r\n        protected localStorageService: LocalStorageService,\r\n        protected dataService: DataService,\r\n        private dragDrop: DragDrop,\r\n    ) {\r\n        super(changeDetectorRef, localStorageService, dataService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        if (changes.subCollections || changes.items) {\r\n            const allCollections: CollectionTableItem[] = [];\r\n            for (const collection of this.items ?? []) {\r\n                allCollections.push(collection);\r\n                const subCollectionMatches = this.getSubcollections(collection);\r\n                allCollections.push(...subCollectionMatches.flat());\r\n            }\r\n            allCollections.forEach((collection, index) => (this.absoluteIndex[collection.id] = index));\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.collectionRowList.changes.subscribe((val: QueryList<CdkDrag>) => {\r\n            this.dropList.getSortedItems().forEach(item => this.dropList.removeItem(item));\r\n            for (const ref of val.toArray()) {\r\n                ref.dropContainer = this.dropList;\r\n                ref._dragRef._withDropContainer(this.dropList._dropListRef);\r\n                this.dropList.addItem(ref);\r\n            }\r\n        });\r\n    }\r\n\r\n    getSubcollections(item: CollectionTableItem) {\r\n        return this.subCollections?.filter(c => c.parentId === item.id) ?? [];\r\n    }\r\n\r\n    sortPredicate = (index: number, item: CdkDrag<{ depth: number; collection: CollectionTableItem }>) => {\r\n        const itemAtIndex = this.dropList.getSortedItems()[index];\r\n        return itemAtIndex?.data.collection.parentId === item.data.collection.parentId;\r\n    };\r\n\r\n    onDrop(\r\n        event: CdkDragDrop<{\r\n            depth: number;\r\n            collection: CollectionTableItem;\r\n        }>,\r\n    ) {\r\n        const isTopLevel = event.item.data.collection.breadcrumbs.length === 2;\r\n        const pageIndexOffset = isTopLevel ? (this.currentPage - 1) * this.itemsPerPage : 0;\r\n        const parentId = event.item.data.collection.parentId;\r\n        const parentIndex = this.items.findIndex(i => i.id === parentId);\r\n        const adjustedIndex = pageIndexOffset + event.currentIndex - parentIndex - 1;\r\n        this.changeOrder.emit({\r\n            collectionId: event.item.data.collection.id,\r\n            index: adjustedIndex,\r\n            parentId: event.item.data.collection.parentId,\r\n        });\r\n\r\n        if (isTopLevel) {\r\n            this.items = [...this.items];\r\n            this.items.splice(event.previousIndex, 1);\r\n            this.items.splice(event.currentIndex, 0, event.item.data.collection);\r\n        } else {\r\n            const parent = this.items.find(i => i.id === parentId);\r\n            if (parent) {\r\n                const subCollections = this.getSubcollections(parent);\r\n                const adjustedPreviousIndex = pageIndexOffset + event.previousIndex - parentIndex - 1;\r\n                subCollections.splice(adjustedPreviousIndex, 1);\r\n                subCollections.splice(event.currentIndex, 0, event.item.data.collection);\r\n            }\r\n        }\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [disabled]=\"isNew$ | async\"\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"languageCode$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            ></vdr-language-selector>\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"collection-detail\"></vdr-action-bar-items>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template></vdr-ab-right\r\n        >\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card>\r\n                <vdr-form-field [label]=\"'catalog.visibility' | translate\" for=\"visibility\">\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            formControlName=\"visible\"\r\n                            id=\"visibility\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                        <label class=\"visible-toggle\">\r\n                            <ng-container *ngIf=\"detailForm.value.visible; else private\">{{\r\n                                'catalog.public' | translate\r\n                            }}</ng-container>\r\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\r\n                        </label>\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\"></vdr-page-entity-info>\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n\r\n        <vdr-page-block *ngIf=\"entity$ | async as entity\"\r\n            ><nav role=\"navigation\">\r\n                <ul class=\"collection-breadcrumbs\">\r\n                    <li *ngFor=\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\">\r\n                        <a [routerLink]=\"['/catalog/collections']\" *ngIf=\"isFirst\">{{\r\n                            'catalog.root-collection' | translate\r\n                        }}</a>\r\n                        <a\r\n                            [routerLink]=\"['/catalog/collections', breadcrumb.id]\"\r\n                            *ngIf=\"!isFirst && !isLast\"\r\n                            >{{ breadcrumb.name | translate }}</a\r\n                        >\r\n                        <ng-container *ngIf=\"isLast\">{{ breadcrumb.name | translate }}</ng-container>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </vdr-page-block>\r\n\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            (input)=\"updateSlug($event.target.value)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'catalog.slug' | translate\"\r\n                        for=\"slug\"\r\n                        [errors]=\"{ pattern: ('catalog.slug-pattern-error' | translate) }\"\r\n                    >\r\n                        <input\r\n                            id=\"slug\"\r\n                            type=\"text\"\r\n                            formControlName=\"slug\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        class=\"form-grid-span\"\r\n                        [label]=\"'common.description' | translate\"\r\n                        for=\"slug\"\r\n                    >\r\n                        <vdr-rich-text-editor\r\n                            formControlName=\"description\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        ></vdr-rich-text-editor>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Collection\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"collection-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n            <vdr-card [title]=\"'catalog.assets' | translate\">\r\n                <vdr-assets\r\n                    [assets]=\"entity?.assets\"\r\n                    [featuredAsset]=\"entity?.featuredAsset\"\r\n                    [updatePermissions]=\"updatePermission\"\r\n                    (change)=\"assetChanges = $event\"\r\n                ></vdr-assets>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'catalog.filters' | translate\">\r\n                <vdr-form-field\r\n                    [label]=\"'catalog.filter-inheritance' | translate\"\r\n                    for=\"inheritFilters\"\r\n                >\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            formControlName=\"inheritFilters\"\r\n                            id=\"inheritFilters\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                        <label class=\"visible-toggle\">\r\n                            <ng-container *ngIf=\"detailForm.value.inheritFilters; else noInherit\">{{\r\n                                'catalog.inherit-filters-from-parent' | translate\r\n                            }}</ng-container>\r\n                            <ng-template #noInherit>{{\r\n                                'catalog.do-not-inherit-filters' | translate\r\n                            }}</ng-template>\r\n                        </label>\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n                <div formArrayName=\"filters\">\r\n                    <ng-container *ngFor=\"let filter of filters; index as i; trackBy: trackByFn\">\r\n                        <vdr-configurable-input\r\n                            (remove)=\"removeFilter(i)\"\r\n                            [position]=\"i\"\r\n                            [operation]=\"filter\"\r\n                            [operationDefinition]=\"getFilterDefinition(filter)\"\r\n                            [formControlName]=\"i\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        ></vdr-configurable-input>\r\n                    </ng-container>\r\n                </div>\r\n                <div *vdrIfPermissions=\"updatePermission\">\r\n                    <vdr-dropdown>\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\r\n                            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let filter of allFilters\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"addFilter(filter)\"\r\n                            >\r\n                                {{ filter.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n\r\n            <vdr-card [title]=\"'common.contents' | translate\" [paddingX]=\"false\">\r\n                <vdr-collection-contents\r\n                    [collectionId]=\"id\"\r\n                    [parentId]=\"parentId$ | async\"\r\n                    [updatedFilters]=\"updatedFilters$ | async\"\r\n                    [inheritFilters]=\"inheritFilters$ | async\"\r\n                    [previewUpdatedFilters]=\"livePreview\"\r\n                    #collectionContents\r\n                >\r\n                    <ng-template let-count>\r\n                        <div class=\"ml-3\">\r\n                            <div class=\"contents-title\">\r\n                                {{ 'catalog.collection-contents' | translate }} ({{\r\n                                    'common.results-count' | translate : { count: count }\r\n                                }})\r\n                            </div>\r\n                            <clr-checkbox-wrapper [class.disabled]=\"detailForm.get('filters')?.pristine\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    clrCheckbox\r\n                                    [ngModelOptions]=\"{ standalone: true }\"\r\n                                    [disabled]=\"detailForm.get('filters')?.pristine\"\r\n                                    [ngModel]=\"livePreview\"\r\n                                    (ngModelChange)=\"toggleLivePreview()\"\r\n                                />\r\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\r\n                            </clr-checkbox-wrapper>\r\n                        </div>\r\n                    </ng-template>\r\n                </vdr-collection-contents>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { FormBuilder, UntypedFormArray, UntypedFormControl, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    Collection,\r\n    COLLECTION_FRAGMENT,\r\n    CollectionDetailQueryDocument,\r\n    CollectionFragment,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    ConfigurableOperationInput,\r\n    CreateCollectionInput,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    encodeConfigArgValue,\r\n    findTranslation,\r\n    getConfigArgValue,\r\n    LanguageCode,\r\n    LocalStorageService,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    TypedBaseDetailComponent,\r\n    unicodePatternValidator,\r\n    UpdateCollectionInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest, merge, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, mergeMap, switchMap, take } from 'rxjs/operators';\r\n\r\nimport { CollectionContentsComponent } from '../collection-contents/collection-contents.component';\r\n\r\nexport const COLLECTION_DETAIL_QUERY = gql`\r\n    query CollectionDetailQuery($id: ID!) {\r\n        collection(id: $id) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-collection-detail',\r\n    templateUrl: './collection-detail.component.html',\r\n    styleUrls: ['./collection-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionDetailComponent\r\n    extends TypedBaseDetailComponent<typeof CollectionDetailQueryDocument, 'collection'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Collection');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9_-]+$/)],\r\n        description: '',\r\n        visible: false,\r\n        inheritFilters: true,\r\n        filters: this.formBuilder.array([]),\r\n        customFields: this.formBuilder.group(\r\n            this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n        ),\r\n    });\r\n    assetChanges: { assets?: Asset[]; featuredAsset?: Asset } = {};\r\n    filters: ConfigurableOperation[] = [];\r\n    allFilters: ConfigurableOperationDefinition[] = [];\r\n    updatedFilters$: Observable<ConfigurableOperationInput[]>;\r\n    inheritFilters$: Observable<boolean>;\r\n    livePreview = false;\r\n    parentId$: Observable<string | undefined>;\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\r\n    private filterRemoved$ = new Subject<void>();\r\n    @ViewChild('collectionContents') contentsComponent: CollectionContentsComponent;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private localStorageService: LocalStorageService,\r\n    ) {\r\n        super();\r\n        this.livePreview = this.localStorageService.get('livePreviewCollectionContents') ?? false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\r\n            this.allFilters = res.collectionFilters;\r\n        });\r\n        const filtersFormArray = this.detailForm.get('filters') as UntypedFormArray;\r\n        const inheritFiltersControl = this.detailForm.get('inheritFilters') as UntypedFormControl;\r\n        this.inheritFilters$ = inheritFiltersControl.valueChanges.pipe(distinctUntilChanged());\r\n        this.updatedFilters$ = merge(filtersFormArray.statusChanges, this.filterRemoved$).pipe(\r\n            debounceTime(200),\r\n            filter(() => filtersFormArray.touched),\r\n            map(() =>\r\n                this.mapOperationsToInputs(this.filters, filtersFormArray.value).filter(_filter => {\r\n                    // ensure all the arguments have valid values. E.g. a newly-added\r\n                    // filter will not yet have valid values\r\n                    for (const arg of _filter.arguments) {\r\n                        if (arg.value === '') {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }),\r\n            ),\r\n        );\r\n        this.parentId$ = this.route.paramMap.pipe(\r\n            map(pm => pm.get('parentId') || undefined),\r\n            switchMap(parentId => {\r\n                if (parentId) {\r\n                    return of(parentId);\r\n                } else {\r\n                    return this.entity$.pipe(map(collection => collection.parent?.id));\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    getFilterDefinition(_filter: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\r\n        return this.allFilters.find(f => f.code === _filter.code);\r\n    }\r\n\r\n    assetsChanged(): boolean {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n\r\n    /**\r\n     * If creating a new Collection, automatically generate the slug based on the collection name.\r\n     */\r\n    updateSlug(nameValue: string) {\r\n        const slugControl = this.detailForm.get(['slug']);\r\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\r\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n        }\r\n    }\r\n\r\n    addFilter(collectionFilter: ConfigurableOperation) {\r\n        const filtersArray = this.detailForm.get('filters') as UntypedFormArray;\r\n        const argsHash = collectionFilter.args.reduce(\r\n            (output, arg) => ({\r\n                ...output,\r\n                [arg.name]: getConfigArgValue(arg.value),\r\n            }),\r\n            {},\r\n        );\r\n        filtersArray.push(\r\n            this.formBuilder.control({\r\n                code: collectionFilter.code,\r\n                args: argsHash,\r\n            }),\r\n        );\r\n        this.filters.push({\r\n            code: collectionFilter.code,\r\n            args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\r\n        });\r\n    }\r\n\r\n    removeFilter(index: number) {\r\n        const filtersArray = this.detailForm.get('filters') as UntypedFormArray;\r\n        if (index !== -1) {\r\n            filtersArray.removeAt(index);\r\n            filtersArray.markAsDirty();\r\n            filtersArray.markAsTouched();\r\n            this.filters.splice(index, 1);\r\n            this.filterRemoved$.next();\r\n        }\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const input = this.getUpdatedCollection(\r\n            {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                languageCode: this.languageCode,\r\n                name: '',\r\n                slug: '',\r\n                isPrivate: false,\r\n                breadcrumbs: [],\r\n                description: '',\r\n                featuredAsset: null,\r\n                assets: [],\r\n                translations: [],\r\n                inheritFilters: true,\r\n                filters: [],\r\n                parent: {} as any,\r\n                children: null,\r\n            },\r\n            this.detailForm,\r\n            this.languageCode,\r\n        ) as CreateCollectionInput;\r\n        const parentId = this.route.snapshot.paramMap.get('parentId');\r\n        if (parentId) {\r\n            input.parentId = parentId;\r\n        }\r\n        this.dataService.collection.createCollection(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'Collection',\r\n                });\r\n                this.assetChanges = {};\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Collection',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([category, languageCode]) => {\r\n                    const input = this.getUpdatedCollection(\r\n                        category,\r\n                        this.detailForm,\r\n                        languageCode,\r\n                    ) as UpdateCollectionInput;\r\n                    return this.dataService.collection.updateCollection(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.assetChanges = {};\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                    this.contentsComponent.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n\r\n    toggleLivePreview() {\r\n        this.livePreview = !this.livePreview;\r\n        this.localStorageService.set('livePreviewCollectionContents', this.livePreview);\r\n    }\r\n\r\n    trackByFn(index: number, item: ConfigurableOperation) {\r\n        return JSON.stringify(item);\r\n    }\r\n\r\n    /**\r\n     * Sets the values of the form on changes to the category or current language.\r\n     */\r\n    protected setFormValues(entity: CollectionFragment, languageCode: LanguageCode) {\r\n        const currentTranslation = findTranslation(entity, languageCode);\r\n\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            slug: currentTranslation ? currentTranslation.slug : '',\r\n            description: currentTranslation ? currentTranslation.description : '',\r\n            visible: !entity.isPrivate,\r\n            inheritFilters: entity.inheritFilters,\r\n        });\r\n\r\n        const formArray = this.detailForm.get('filters') as UntypedFormArray;\r\n        if (formArray.length !== entity.filters.length) {\r\n            formArray.clear();\r\n            this.filters = [];\r\n            entity.filters.forEach(f => this.addFilter(f));\r\n        }\r\n\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                entity,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Given a category and the value of the form, this method creates an updated copy of the category which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedCollection(\r\n        category: CollectionFragment,\r\n        form: typeof this.detailForm,\r\n        languageCode: LanguageCode,\r\n    ): CreateCollectionInput | UpdateCollectionInput {\r\n        const updatedCategory = createUpdatedTranslatable({\r\n            translatable: category,\r\n            updatedFields: form.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: category.name || '',\r\n                slug: category.slug || '',\r\n                description: category.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedCategory,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            isPrivate: !form.value.visible,\r\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    private mapOperationsToInputs(\r\n        operations: ConfigurableOperation[],\r\n        formValueOperations: any,\r\n    ): ConfigurableOperationInput[] {\r\n        return operations.map((o, i) => ({\r\n            code: o.code,\r\n            arguments: Object.entries(formValueOperations[i].args).map(([name, value], j) => ({\r\n                name,\r\n                value: encodeConfigArgValue(value),\r\n            })),\r\n        }));\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GetCollectionListQuery, ItemOf } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Removes the root collection and self breadcrumb from the collection breadcrumb list.\r\n */\r\n@Pipe({\r\n    name: 'collectionBreadcrumb',\r\n})\r\nexport class CollectionBreadcrumbPipe implements PipeTransform {\r\n    transform(value: ItemOf<GetCollectionListQuery, 'collections'>): unknown {\r\n        return value?.breadcrumbs.slice(1, -1);\r\n    }\r\n}\r\n","<ng-template vdrDialogTitle>\r\n    {{ 'catalog.move-collections' | translate }}\r\n</ng-template>\r\n<vdr-collection-data-table\r\n    class=\"mt-2\"\r\n    id=\"move-collection-list\"\r\n    [items]=\"items$ | async\"\r\n    [subCollections]=\"subCollections$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"currentPage$.next($event)\"\r\n    (itemsPerPageChange)=\"itemsPerPage$.next($event)\"\r\n>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-collection=\"item\">\r\n            {{ collection.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" [optional]=\"false\">\r\n        <ng-template let-collection=\"item\" let-depth=\"depth\">\r\n            <div [ngClass]=\"'indent-' + depth\"></div>\r\n            <clr-icon\r\n                class=\"child-arrow\"\r\n                [class.transparent]=\"depth === 0\"\r\n                shape=\"child-arrow\"\r\n                *ngIf=\"!collection.children?.length && collection.parentId !== '__'\"\r\n            ></clr-icon>\r\n            <button\r\n                class=\"icon-button folder-button\"\r\n                *ngIf=\"collection.children?.length\"\r\n                (click)=\"toggleExpanded(collection)\"\r\n            >\r\n                <clr-icon shape=\"folder\" *ngIf=\"!expandedIds.includes(collection.id)\"></clr-icon>\r\n                <clr-icon shape=\"folder-open\" *ngIf=\"expandedIds.includes(collection.id)\"></clr-icon>\r\n            </button>\r\n            <button class=\"icon-button folder-button\" *ngIf=\"collection.parentId === '__'\" disabled>\r\n                <clr-icon shape=\"folder\" class=\"is-solid\"></clr-icon>\r\n            </button>\r\n            <button class=\"button-ghost\" (click)=\"resolveWith(collection)\">\r\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\r\n            </button>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.breadcrumb' | translate\">\r\n        <ng-template let-collection=\"item\">\r\n            <div class=\"breadcrumb\">\r\n                <ng-container *ngIf=\"collection | collectionBreadcrumb as breadcrumbs\">\r\n                    <ng-container *ngIf=\"breadcrumbs.length\">\r\n                        <div *ngFor=\"let item of breadcrumbs\">\r\n                            <span class=\"separator\">/</span>{{ item.name }}\r\n                        </div>\r\n                    </ng-container>\r\n                    <span class=\"separator\" *ngIf=\"!breadcrumbs.length\">/</span>\r\n                </ng-container>\r\n            </div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.slug' | translate\">\r\n        <ng-template let-collection=\"item\">\r\n            {{ collection.slug }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-collection-data-table>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DataService, Dialog, GetCollectionListQuery, I18nService, ItemOf } from '@vendure/admin-ui/core';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-move-collections-dialog',\n    templateUrl: './move-collections-dialog.component.html',\n    styleUrls: ['./move-collections-dialog.component.scss', '../collection-list/collection-list-common.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoveCollectionsDialogComponent\n    implements OnInit, Dialog<ItemOf<GetCollectionListQuery, 'collections'>>\n{\n    resolveWith: (result?: ItemOf<GetCollectionListQuery, 'collections'>) => void;\n    searchTermControl = new FormControl('');\n    items$: Observable<Array<ItemOf<GetCollectionListQuery, 'collections'>>>;\n    totalItems$: Observable<number>;\n    currentPage$ = new BehaviorSubject(1);\n    itemsPerPage$ = new BehaviorSubject(10);\n    expandedIds$ = new Subject<string[]>();\n    expandedIds: string[] = [];\n    subCollections$: Observable<Array<ItemOf<GetCollectionListQuery, 'collections'>>>;\n\n    constructor(private dataService: DataService, private i18nService: I18nService) {}\n\n    ngOnInit() {\n        const getCollectionsResult = this.dataService.collection.getCollections();\n\n        const searchTerm$ = this.searchTermControl.valueChanges.pipe(\n            debounceTime(250),\n            distinctUntilChanged(),\n            startWith(''),\n        );\n        const currentPage$ = this.currentPage$.pipe(distinctUntilChanged());\n        const itemsPerPage$ = this.itemsPerPage$.pipe(distinctUntilChanged());\n        combineLatest(searchTerm$, currentPage$, itemsPerPage$).subscribe(\n            ([searchTerm, currentPage, itemsPerPage]) => {\n                const topLevelOnly = searchTerm === '';\n                getCollectionsResult.ref.refetch({\n                    options: {\n                        skip: (currentPage - 1) * itemsPerPage,\n                        take: itemsPerPage,\n                        filter: {\n                            name: { contains: searchTerm },\n                        },\n                        topLevelOnly,\n                    },\n                });\n            },\n        );\n\n        const rootCollectionId$ = this.dataService.collection\n            .getCollections({\n                take: 1,\n                topLevelOnly: true,\n            })\n            .mapSingle(data => data.collections.items[0].parentId);\n\n        this.items$ = combineLatest(\n            getCollectionsResult.mapStream(({ collections }) => collections),\n            rootCollectionId$,\n        ).pipe(\n            map(([collections, rootCollectionId]) => [\n                ...(rootCollectionId\n                    ? [\n                          {\n                              id: rootCollectionId,\n                              name: this.i18nService.translate('catalog.root-collection'),\n                              slug: '',\n                              parentId: '__',\n                              position: 0,\n                              featuredAsset: null,\n                              children: [],\n                              breadcrumbs: [],\n                              isPrivate: false,\n                              createdAt: '',\n                              updatedAt: '',\n                          } satisfies ItemOf<GetCollectionListQuery, 'collections'>,\n                      ]\n                    : []),\n                ...collections.items,\n            ]),\n        );\n        this.totalItems$ = getCollectionsResult.mapStream(data => data.collections.totalItems);\n\n        this.subCollections$ = this.expandedIds$.pipe(\n            tap(val => (this.expandedIds = val)),\n            switchMap(ids => {\n                if (ids.length) {\n                    return this.dataService.collection\n                        .getCollections({\n                            take: 999,\n                            filter: {\n                                parentId: { in: ids },\n                            },\n                        })\n                        .mapStream(data => data.collections.items);\n                } else {\n                    return of([]);\n                }\n            }),\n        );\n    }\n\n    toggleExpanded(collection: ItemOf<GetCollectionListQuery, 'collections'>) {\n        let expandedIds = this.expandedIds;\n        if (!expandedIds.includes(collection.id)) {\n            expandedIds.push(collection.id);\n        } else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.expandedIds$.next(expandedIds);\n    }\n}\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BulkAction,\r\n    createBulkAssignToChannelAction,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    DataService,\r\n    GetCollectionListQuery,\r\n    ItemOf,\r\n    ModalService,\r\n    MoveCollectionInput,\r\n    NotificationService,\r\n    Permission,\r\n} from '@vendure/admin-ui/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { CollectionPartial } from '../collection-tree/collection-tree.types';\r\nimport { MoveCollectionsDialogComponent } from '../move-collections-dialog/move-collections-dialog.component';\r\n\r\nimport { CollectionListComponent } from './collection-list.component';\r\n\r\nexport const deleteCollectionsBulkAction = createBulkDeleteAction<\r\n    ItemOf<GetCollectionListQuery, 'collections'>\r\n>({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteCollection) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.collection.deleteCollections(ids).pipe(map(res => res.deleteCollections)),\r\n});\r\n\r\nexport const moveCollectionsBulkAction: BulkAction<CollectionPartial, CollectionListComponent> = {\r\n    location: 'collection-list',\r\n    label: _('catalog.move-collections'),\r\n    icon: 'drag-handle',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateCollection),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .fromComponent(MoveCollectionsDialogComponent, {\r\n                size: 'xl',\r\n                closable: true,\r\n            })\r\n            .pipe(\r\n                switchMap(result => {\r\n                    if (result) {\r\n                        const inputs: MoveCollectionInput[] = selection.map(c => ({\r\n                            collectionId: c.id,\r\n                            parentId: result.id,\r\n                            index: 0,\r\n                        }));\r\n                        return dataService.collection.moveCollection(inputs);\r\n                    } else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(result => {\r\n                notificationService.success(_('catalog.move-collections-success'), {\r\n                    count: selection.length,\r\n                });\r\n                clearSelection();\r\n                hostComponent.refresh();\r\n            });\r\n    },\r\n};\r\n\r\nexport const assignCollectionsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetCollectionListQuery, 'collections'>\r\n>({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateCollection),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, collectionIds, channelId) =>\r\n        dataService.collection\r\n            .assignCollectionsToChannel({\r\n                collectionIds,\r\n                channelId,\r\n            })\r\n            .pipe(map(res => res.assignCollectionsToChannel)),\r\n});\r\n\r\nexport const removeCollectionsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetCollectionListQuery, 'collections'>\r\n>({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteCollection),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, collectionIds, channelId) =>\r\n        dataService.collection\r\n            .removeCollectionsFromChannel({\r\n                channelId: channelId,\r\n                collectionIds,\r\n            })\r\n            .pipe(map(res => res.removeCollectionsFromChannel)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            ></vdr-language-selector>\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"collection-list\"></vdr-action-bar-items>\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateCatalog', 'CreateCollection']\"\r\n                [routerLink]=\"['./create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'catalog.create-new-collection' | translate }}\r\n            </a>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-split-view [rightPanelOpen]=\"activeCollectionId$ | async\" (closeClicked)=\"closeContents()\">\r\n    <ng-template vdrSplitViewLeft>\r\n        <vdr-collection-data-table\r\n            class=\"mt-2\"\r\n            id=\"collection-list\"\r\n            [items]=\"items$ | async\"\r\n            [subCollections]=\"subCollections$ | async\"\r\n            [itemsPerPage]=\"itemsPerPage$ | async\"\r\n            [totalItems]=\"totalItems$ | async\"\r\n            [currentPage]=\"currentPage$ | async\"\r\n            [filters]=\"filters\"\r\n            [activeIndex]=\"activeCollectionIndex$ | async\"\r\n            (pageChange)=\"setPageNumber($event)\"\r\n            (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n            (changeOrder)=\"onRearrange($event)\"\r\n        >\r\n            <vdr-bulk-action-menu\r\n                locationId=\"collection-list\"\r\n                [hostComponent]=\"this\"\r\n                [selectionManager]=\"selectionManager\"\r\n            ></vdr-bulk-action-menu>\r\n            <vdr-dt2-search\r\n                [searchTermControl]=\"searchTermControl\"\r\n                [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n            ></vdr-dt2-search>\r\n            <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\">\r\n                <ng-template let-collection=\"item\">\r\n                    {{ collection.id }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column\r\n                [heading]=\"'common.created-at' | translate\"\r\n                [hiddenByDefault]=\"true\"\r\n                [sort]=\"sorts.get('createdAt')\"\r\n            >\r\n                <ng-template let-collection=\"item\">\r\n                    {{ collection.createdAt | localeDate : 'short' }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column\r\n                [heading]=\"'common.updated-at' | translate\"\r\n                [hiddenByDefault]=\"true\"\r\n                [sort]=\"sorts.get('updatedAt')\"\r\n            >\r\n                <ng-template let-collection=\"item\">\r\n                    {{ collection.updatedAt | localeDate : 'short' }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column\r\n                [heading]=\"'common.position' | translate\"\r\n                [hiddenByDefault]=\"true\"\r\n                [sort]=\"sorts.get('position')\"\r\n            >\r\n                <ng-template let-collection=\"item\">\r\n                    {{ collection.position }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column\r\n                [heading]=\"'common.name' | translate\"\r\n                [optional]=\"false\"\r\n                [sort]=\"sorts.get('name')\"\r\n            >\r\n                <ng-template let-collection=\"item\" let-depth=\"depth\">\r\n                    <div [ngClass]=\"'indent-' + depth\"></div>\r\n                    <clr-icon\r\n                        class=\"child-arrow\"\r\n                        [class.transparent]=\"depth === 0\"\r\n                        shape=\"child-arrow\"\r\n                        *ngIf=\"!collection.children?.length\"\r\n                    ></clr-icon>\r\n                    <button\r\n                        class=\"icon-button folder-button\"\r\n                        *ngIf=\"collection.children?.length\"\r\n                        (click)=\"toggleExpanded(collection)\"\r\n                    >\r\n                        <clr-icon shape=\"folder\" *ngIf=\"!expandedIds.includes(collection.id)\"></clr-icon>\r\n                        <clr-icon shape=\"folder-open\" *ngIf=\"expandedIds.includes(collection.id)\"></clr-icon>\r\n                    </button>\r\n                    <a class=\"button-ghost\" [routerLink]=\"['./', collection.id]\"\r\n                        ><span>{{ collection.name }}</span>\r\n                        <clr-icon shape=\"arrow right\"></clr-icon>\r\n                    </a>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.breadcrumb' | translate\">\r\n                <ng-template let-collection=\"item\">\r\n                    <div class=\"breadcrumb\">\r\n                        <ng-container *ngIf=\"collection | collectionBreadcrumb as breadcrumbs\">\r\n                            <ng-container *ngIf=\"breadcrumbs.length\">\r\n                                <div *ngFor=\"let item of breadcrumbs\">\r\n                                    <span class=\"separator\">/</span>{{ item.name }}\r\n                                </div>\r\n                            </ng-container>\r\n                            <span class=\"separator\" *ngIf=\"!breadcrumbs.length\">/</span>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.slug' | translate\" [sort]=\"sorts.get('slug')\">\r\n                <ng-template let-collection=\"item\">\r\n                    {{ collection.slug }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.visibility' | translate\">\r\n                <ng-template let-collection=\"item\">\r\n                    <vdr-chip *ngIf=\"collection.isPrivate\" colorType=\"warning\">{{\r\n                        'common.private' | translate\r\n                        }}</vdr-chip>\r\n                    <vdr-chip *ngIf=\"!collection.isPrivate\" colorType=\"success\">{{\r\n                        'common.public' | translate\r\n                        }}</vdr-chip>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.view-contents' | translate\" [optional]=\"false\">\r\n                <ng-template let-collection=\"item\">\r\n                    <a\r\n                        class=\"button-small bg-weight-150\"\r\n                        [routerLink]=\"['./', { contents: collection.id }]\"\r\n                        queryParamsHandling=\"preserve\"\r\n                    >\r\n                        <span>{{ 'common.view-contents' | translate }}</span>\r\n                        <clr-icon shape=\"file-group\"></clr-icon>\r\n                    </a>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-custom-field-column\r\n                *ngFor=\"let customField of customFields\"\r\n                [customField]=\"customField\"\r\n                [sorts]=\"sorts\"\r\n            />\r\n        </vdr-collection-data-table>\r\n    </ng-template>\r\n    <ng-template vdrSplitViewRight [splitViewTitle]=\"activeCollectionTitle$ | async\">\r\n        <ng-container *ngIf=\"activeCollectionId$ | async as activeGroup\">\r\n            <vdr-collection-contents [collectionId]=\"activeCollectionId$ | async\"></vdr-collection-contents>\r\n        </ng-container>\r\n    </ng-template>\r\n</vdr-split-view>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    GetCollectionListDocument,\r\n    GetCollectionListQuery,\r\n    ItemOf,\r\n    LanguageCode,\r\n    NotificationService,\r\n    TypedBaseListComponent,\r\n} from '@vendure/admin-ui/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { CollectionOrderEvent } from '../collection-data-table/collection-data-table.component';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-list',\r\n    templateUrl: './collection-list.component.html',\r\n    styleUrls: ['./collection-list.component.scss', './collection-list-common.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionListComponent\r\n    extends TypedBaseListComponent<typeof GetCollectionListDocument, 'collections'>\r\n    implements OnInit\r\n{\r\n    activeCollectionId$: Observable<string | null>;\r\n    activeCollectionIndex$: Observable<number>;\r\n    activeCollectionTitle$: Observable<string>;\r\n    subCollections$: Observable<Array<ItemOf<GetCollectionListQuery, 'collections'>>>;\r\n    expandedIds: string[] = [];\r\n    readonly customFields = this.getCustomFieldConfig('Collection');\r\n    readonly filters = this.createFilterCollection()\r\n        .addDateFilters()\r\n        .addFilter({\r\n            name: 'slug',\r\n            label: _('common.slug'),\r\n            type: { kind: 'text' },\r\n            filterField: 'slug',\r\n        })\r\n        .addFilter({\r\n            name: 'visibility',\r\n            type: { kind: 'boolean' },\r\n            label: _('common.visibility'),\r\n            toFilterInput: value => ({\r\n                isPrivate: { eq: !value },\r\n            }),\r\n        })\r\n        .addCustomFieldFilters(this.customFields)\r\n        .connectToRoute(this.route);\r\n    readonly sorts = this.createSortCollection()\r\n        .defaultSort('position', 'ASC')\r\n        .addSort({ name: 'createdAt' })\r\n        .addSort({ name: 'updatedAt' })\r\n        .addSort({ name: 'name' })\r\n        .addSort({ name: 'slug' })\r\n        .addSort({ name: 'position' })\r\n        .addCustomFieldSorts(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    constructor(protected dataService: DataService, private notificationService: NotificationService) {\r\n        super();\r\n        super.configure({\r\n            document: GetCollectionListDocument,\r\n            getItems: data => data.collections,\r\n            setVariables: (skip, _take) => {\r\n                const topLevelOnly =\r\n                    this.searchTermControl.value === '' && this.filters.activeFilters.length === 0\r\n                        ? true\r\n                        : undefined;\r\n                return {\r\n                    options: {\r\n                        skip,\r\n                        take: _take,\r\n                        filter: {\r\n                            name: { contains: this.searchTermControl.value },\r\n                            ...this.filters.createFilterInput(),\r\n                        },\r\n                        topLevelOnly,\r\n                        sort: this.sorts.createSortInput(),\r\n                    },\r\n                };\r\n            },\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.activeCollectionId$ = this.route.paramMap.pipe(\r\n            map(pm => pm.get('contents')),\r\n            distinctUntilChanged(),\r\n        );\r\n        const expandedIds$ = this.route.queryParamMap.pipe(\r\n            map(qpm => qpm.get('expanded')),\r\n            distinctUntilChanged(),\r\n            map(ids => (ids ? ids.split(',') : [])),\r\n        );\r\n        expandedIds$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\r\n            this.expandedIds = ids;\r\n        });\r\n        this.subCollections$ = combineLatest(expandedIds$, this.refresh$).pipe(\r\n            switchMap(([ids]) => {\r\n                if (ids.length) {\r\n                    return this.dataService.collection\r\n                        .getCollections({\r\n                            take: 999,\r\n                            filter: {\r\n                                parentId: { in: ids },\r\n                            },\r\n                        })\r\n                        .mapStream(data => data.collections.items);\r\n                } else {\r\n                    return of([]);\r\n                }\r\n            }),\r\n        );\r\n\r\n        this.activeCollectionTitle$ = combineLatest(\r\n            this.activeCollectionId$,\r\n            this.items$,\r\n            this.subCollections$,\r\n        ).pipe(\r\n            map(([id, collections, subCollections]) => {\r\n                if (id) {\r\n                    const match = [...collections, ...subCollections].find(c => c.id === id);\r\n                    return match ? match.name : '';\r\n                }\r\n                return '';\r\n            }),\r\n        );\r\n        this.activeCollectionIndex$ = combineLatest(\r\n            this.activeCollectionId$,\r\n            this.items$,\r\n            this.subCollections$,\r\n        ).pipe(\r\n            map(([id, collections, subCollections]) => {\r\n                if (id) {\r\n                    const allCollections: typeof collections = [];\r\n                    for (const collection of collections) {\r\n                        allCollections.push(collection);\r\n                        const subCollectionMatches = subCollections.filter(\r\n                            c => c.parentId && c.parentId === collection.id,\r\n                        );\r\n                        allCollections.push(...subCollectionMatches);\r\n                    }\r\n                    return allCollections.findIndex(c => c.id === id);\r\n                }\r\n                return -1;\r\n            }),\r\n        );\r\n    }\r\n\r\n    onRearrange(event: CollectionOrderEvent) {\r\n        this.dataService.collection.moveCollection([event]).subscribe({\r\n            next: () => {\r\n                this.notificationService.success(_('common.notify-saved-changes'));\r\n                this.refresh();\r\n            },\r\n            error: err => {\r\n                this.notificationService.error(_('common.notify-save-changes-error'));\r\n            },\r\n        });\r\n    }\r\n\r\n    closeContents() {\r\n        const params = { ...this.route.snapshot.params };\r\n        delete params.contents;\r\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n\r\n    toggleExpanded(collection: ItemOf<GetCollectionListQuery, 'collections'>) {\r\n        let expandedIds = this.expandedIds;\r\n        if (!expandedIds.includes(collection.id)) {\r\n            expandedIds.push(collection.id);\r\n        } else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.router.navigate(['./'], {\r\n            queryParams: {\r\n                expanded: expandedIds.filter(id => !!id).join(','),\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            relativeTo: this.route,\r\n        });\r\n    }\r\n}\r\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { RootNode, TreeNode } from './array-to-tree';\r\nimport { CollectionPartial, RearrangeEvent } from './collection-tree.types';\r\n\r\n/**\r\n * Facilitates communication between the CollectionTreeComponent and child CollectionTreeNodeComponents\r\n * without introducing a cyclic dependency.\r\n */\r\n@Injectable()\r\nexport class CollectionTreeService implements OnDestroy {\r\n    private allMoveListItems: Array<{ path: string; id: string; ancestorIdPath: Set<string> }> = [];\r\n    private collectionTree: RootNode<CollectionPartial>;\r\n    private _rearrange$ = new Subject<RearrangeEvent>();\r\n    private _delete$ = new Subject<string>();\r\n\r\n    public rearrange$: Observable<RearrangeEvent>;\r\n    public delete$: Observable<string>;\r\n\r\n    constructor() {\r\n        this.rearrange$ = this._rearrange$.asObservable();\r\n        this.delete$ = this._delete$.asObservable();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._rearrange$.complete();\r\n        this._delete$.complete();\r\n    }\r\n\r\n    setCollectionTree(tree: RootNode<CollectionPartial>) {\r\n        this.collectionTree = tree;\r\n    }\r\n\r\n    resetMoveList() {\r\n        this.allMoveListItems = [];\r\n    }\r\n\r\n    getMoveListItems(collection: CollectionPartial) {\r\n        if (this.allMoveListItems.length === 0) {\r\n            this.allMoveListItems = this.calculateAllMoveListItems();\r\n        }\r\n        return this.allMoveListItems.filter(\r\n            item =>\r\n                item.id !== collection.id &&\r\n                !item.ancestorIdPath.has(collection.id) &&\r\n                item.id !== collection.parent?.id,\r\n        );\r\n    }\r\n\r\n    onDrop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\r\n        const item = event.item.data as CollectionPartial;\r\n        const newParent = event.container.data;\r\n        const newParentId = newParent.id;\r\n        if (newParentId == null) {\r\n            throw new Error(`Could not determine the ID of the root Collection`);\r\n        }\r\n        this._rearrange$.next({\r\n            collectionId: item.id,\r\n            parentId: newParentId,\r\n            index: event.currentIndex,\r\n        });\r\n    }\r\n\r\n    onMove(event: RearrangeEvent) {\r\n        this._rearrange$.next(event);\r\n    }\r\n\r\n    onDelete(id: string) {\r\n        this._delete$.next(id);\r\n    }\r\n\r\n    private calculateAllMoveListItems() {\r\n        const visit = (\r\n            node: TreeNode<any>,\r\n            parentPath: string[],\r\n            ancestorIdPath: Set<string>,\r\n            output: Array<{ path: string; id: string; ancestorIdPath: Set<string> }>,\r\n        ) => {\r\n            const path = parentPath.concat(node.name);\r\n            output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id, ancestorIdPath });\r\n            node.children.forEach(child =>\r\n                visit(child, path, new Set<string>([...ancestorIdPath, node.id]), output),\r\n            );\r\n            return output;\r\n        };\r\n        return visit(this.collectionTree, [], new Set<string>(), []);\r\n    }\r\n}\r\n","<div\r\n    cdkDropList\r\n    class=\"tree-node\"\r\n    #dropList\r\n    [cdkDropListData]=\"collectionTree\"\r\n    [cdkDropListDisabled]=\"!(hasUpdatePermission$ | async)\"\r\n    (cdkDropListDropped)=\"drop($event)\"\r\n>\r\n    <div\r\n        class=\"collection\"\r\n        [class.private]=\"collection.isPrivate\"\r\n        *ngFor=\"let collection of collectionTree.children; index as i; trackBy: trackByFn\"\r\n        cdkDrag\r\n        [cdkDragData]=\"collection\"\r\n    >\r\n        <div\r\n            class=\"collection-detail\"\r\n            [ngClass]=\"'depth-' + depth\"\r\n            [class.active]=\"collection.id === activeCollectionId\"\r\n        >\r\n            <div>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    clrCheckbox\r\n                    [checked]=\"selectionManager.isSelected(collection)\"\r\n                    (click)=\"selectionManager.toggleSelection(collection, $event)\"\r\n                />\r\n            </div>\r\n            <div class=\"name\">\r\n                <button\r\n                    class=\"icon-button folder-button\"\r\n                    [disabled]=\"expandAll\"\r\n                    *ngIf=\"collection.children?.length; else folderSpacer\"\r\n                    (click)=\"toggleExpanded(collection)\"\r\n                >\r\n                    <clr-icon shape=\"folder\" *ngIf=\"!collection.expanded && !expandAll\"></clr-icon>\r\n                    <clr-icon shape=\"folder-open\" *ngIf=\"collection.expanded || expandAll\"></clr-icon>\r\n                </button>\r\n                <ng-template #folderSpacer>\r\n                    <div class=\"folder-button-spacer\"></div>\r\n                </ng-template>\r\n                {{ collection.name }}\r\n            </div>\r\n            <div class=\"flex-spacer\"></div>\r\n            <vdr-chip *ngIf=\"collection.isPrivate\">{{ 'catalog.private' | translate }}</vdr-chip>\r\n            <a\r\n                class=\"btn btn-link btn-sm\"\r\n                [routerLink]=\"['./', { contents: collection.id }]\"\r\n                queryParamsHandling=\"preserve\"\r\n            >\r\n                <clr-icon shape=\"view-list\"></clr-icon>\r\n                {{ 'catalog.view-contents' | translate }}\r\n            </a>\r\n            <a class=\"btn btn-link btn-sm\" [routerLink]=\"['/catalog/collections/', collection.id]\">\r\n                <clr-icon shape=\"edit\"></clr-icon>\r\n                {{ 'common.edit' | translate }}\r\n            </a>\r\n            <div class=\"drag-handle\" cdkDragHandle *vdrIfPermissions=\"['UpdateCatalog', 'UpdateCollection']\">\r\n                <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n            </div>\r\n            <vdr-dropdown>\r\n                <button class=\"icon-button\" vdrDropdownTrigger (click)=\"getMoveListItems(collection)\">\r\n                    <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <a\r\n                        class=\"dropdown-item\"\r\n                        [routerLink]=\"['./', 'create', { parentId: collection.id }]\"\r\n                        *vdrIfPermissions=\"['CreateCatalog', 'CreateCollection']\"\r\n                    >\r\n                        <clr-icon shape=\"plus\"></clr-icon>\r\n                        {{ 'catalog.create-new-collection' | translate }}\r\n                    </a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <button\r\n                        type=\"button\"\r\n                        vdrDropdownItem\r\n                        [disabled]=\"i === 0 || !(hasUpdatePermission$ | async)\"\r\n                        (click)=\"moveUp(collection, i)\"\r\n                    >\r\n                        <clr-icon shape=\"caret up\"></clr-icon>\r\n                        {{ 'catalog.move-up' | translate }}\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        vdrDropdownItem\r\n                        [disabled]=\"\r\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\r\n                        \"\r\n                        (click)=\"moveDown(collection, i)\"\r\n                    >\r\n                        <clr-icon shape=\"caret down\"></clr-icon>\r\n                        {{ 'catalog.move-down' | translate }}\r\n                    </button>\r\n                    <h4 class=\"dropdown-header\">{{ 'catalog.move-to' | translate }}</h4>\r\n                    <button\r\n                        type=\"button\"\r\n                        vdrDropdownItem\r\n                        *ngFor=\"let item of moveListItems\"\r\n                        (click)=\"move(collection, item.id)\"\r\n                        [disabled]=\"!(hasUpdatePermission$ | async)\"\r\n                    >\r\n                        <div class=\"move-to-item\">\r\n                            <div class=\"move-icon\">\r\n                                <clr-icon shape=\"child-arrow\"></clr-icon>\r\n                            </div>\r\n                            <div class=\"path\">\r\n                                {{ item.path }}\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <button\r\n                        class=\"button\"\r\n                        vdrDropdownItem\r\n                        (click)=\"delete(collection.id)\"\r\n                        [disabled]=\"!(hasDeletePermission$ | async)\"\r\n                    >\r\n                        <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                        {{ 'common.delete' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </div>\r\n        <vdr-collection-tree-node\r\n            *ngIf=\"collection.expanded || expandAll\"\r\n            [expandAll]=\"expandAll\"\r\n            [collectionTree]=\"collection\"\r\n            [activeCollectionId]=\"activeCollectionId\"\r\n            [selectionManager]=\"selectionManager\"\r\n        ></vdr-collection-tree-node>\r\n    </div>\r\n</div>\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    SimpleChanges,\r\n    SkipSelf,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataService, Permission, SelectionManager } from '@vendure/admin-ui/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { RootNode, TreeNode } from './array-to-tree';\r\nimport { CollectionTreeService } from './collection-tree.service';\r\nimport { CollectionPartial } from './collection-tree.types';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-tree-node',\r\n    templateUrl: './collection-tree-node.component.html',\r\n    styleUrls: ['./collection-tree-node.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\r\n    depth = 0;\r\n    parentName: string;\r\n    @Input() collectionTree: TreeNode<CollectionPartial>;\r\n    @Input() activeCollectionId: string;\r\n    @Input() expandAll = false;\r\n    @Input() selectionManager: SelectionManager<CollectionPartial>;\r\n    hasUpdatePermission$: Observable<boolean>;\r\n    hasDeletePermission$: Observable<boolean>;\r\n    moveListItems: Array<{ path: string; id: string }> = [];\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        @SkipSelf() @Optional() private parent: CollectionTreeNodeComponent,\r\n        private dataService: DataService,\r\n        private collectionTreeService: CollectionTreeService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n    ) {\r\n        if (parent) {\r\n            this.depth = parent.depth + 1;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.parentName = this.collectionTree.name || '<root>';\r\n        const permissions$ = this.dataService.client\r\n            .userStatus()\r\n            .mapStream(data => data.userStatus.permissions)\r\n            .pipe(shareReplay(1));\r\n        this.hasUpdatePermission$ = permissions$.pipe(\r\n            map(\r\n                perms =>\r\n                    perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection),\r\n            ),\r\n        );\r\n        this.hasDeletePermission$ = permissions$.pipe(\r\n            map(\r\n                perms =>\r\n                    perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection),\r\n            ),\r\n        );\r\n        this.subscription = this.selectionManager?.selectionChanges$.subscribe(() =>\r\n            this.changeDetectorRef.markForCheck(),\r\n        );\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const expandAllChange = changes['expandAll'];\r\n        if (expandAllChange) {\r\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\r\n                this.collectionTree.children.forEach(c => (c.expanded = false));\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    trackByFn(index: number, item: CollectionPartial) {\r\n        return item.id;\r\n    }\r\n\r\n    toggleExpanded(collection: TreeNode<CollectionPartial>) {\r\n        collection.expanded = !collection.expanded;\r\n        let expandedIds = this.route.snapshot.queryParamMap.get('expanded')?.split(',') ?? [];\r\n        if (collection.expanded) {\r\n            expandedIds.push(collection.id);\r\n        } else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.router.navigate(['./'], {\r\n            queryParams: {\r\n                expanded: expandedIds.filter(id => !!id).join(','),\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            relativeTo: this.route,\r\n        });\r\n    }\r\n\r\n    getMoveListItems(collection: CollectionPartial) {\r\n        this.moveListItems = this.collectionTreeService.getMoveListItems(collection);\r\n    }\r\n\r\n    move(collection: CollectionPartial, parentId: string) {\r\n        this.collectionTreeService.onMove({\r\n            index: 0,\r\n            parentId,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n\r\n    moveUp(collection: CollectionPartial, currentIndex: number) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.collectionTreeService.onMove({\r\n            index: currentIndex - 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n\r\n    moveDown(collection: CollectionPartial, currentIndex: number) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.collectionTreeService.onMove({\r\n            index: currentIndex + 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n\r\n    drop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\r\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\r\n        this.collectionTreeService.onDrop(event);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.collectionTreeService.onDelete(id);\r\n    }\r\n}\r\n","export type HasParent = { id: string; parent?: { id: string } | null };\r\nexport type TreeNode<T extends HasParent> = T & { children: Array<TreeNode<T>>; expanded: boolean };\r\nexport type RootNode<T extends HasParent> = { id?: string; children: Array<TreeNode<T>> };\r\n\r\n/**\r\n * Builds a tree from an array of nodes which have a parent.\r\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\r\n */\r\nexport function arrayToTree<T extends HasParent>(\r\n    nodes: T[],\r\n    currentState?: RootNode<T>,\r\n    expandedIds: string[] = [],\r\n): RootNode<T> {\r\n    const topLevelNodes: Array<TreeNode<T>> = [];\r\n    const mappedArr: { [id: string]: TreeNode<T> } = {};\r\n    const currentStateMap = treeToMap(currentState);\r\n\r\n    // First map the nodes of the array to an object -> create a hash table.\r\n    for (const node of nodes) {\r\n        mappedArr[node.id] = { ...(node as any), children: [] };\r\n    }\r\n\r\n    for (const id of nodes.map(n => n.id)) {\r\n        if (mappedArr.hasOwnProperty(id)) {\r\n            const mappedElem = mappedArr[id];\r\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? expandedIds.includes(id);\r\n            const parent = mappedElem.parent;\r\n            if (!parent) {\r\n                continue;\r\n            }\r\n            // If the element is not at the root level, add it to its parent array of children.\r\n            const parentIsRoot = !mappedArr[parent.id];\r\n            if (!parentIsRoot) {\r\n                if (mappedArr[parent.id]) {\r\n                    mappedArr[parent.id].children.push(mappedElem);\r\n                } else {\r\n                    mappedArr[parent.id] = { children: [mappedElem] } as any;\r\n                }\r\n            } else {\r\n                topLevelNodes.push(mappedElem);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent!.id : undefined;\r\n    return { id: rootId, children: topLevelNodes };\r\n}\r\n\r\n/**\r\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\r\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\r\n * tree.\r\n */\r\nfunction treeToMap<T extends HasParent>(tree?: RootNode<T>): Map<string, TreeNode<T>> {\r\n    const nodeMap = new Map<string, TreeNode<T>>();\r\n    function visit(node: TreeNode<T>) {\r\n        nodeMap.set(node.id, node);\r\n        node.children.forEach(visit);\r\n    }\r\n    if (tree) {\r\n        visit(tree as TreeNode<T>);\r\n    }\r\n    return nodeMap;\r\n}\r\n","<vdr-collection-tree-node\r\n    *ngIf=\"collectionTree\"\r\n    cdkDropListGroup\r\n    [expandAll]=\"expandAll\"\r\n    [collectionTree]=\"collectionTree\"\r\n    [selectionManager]=\"selectionManager\"\r\n    [activeCollectionId]=\"activeCollectionId\"\r\n></vdr-collection-tree-node>\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { Collection, SelectionManager } from '@vendure/admin-ui/core';\r\n\r\nimport { arrayToTree, RootNode } from './array-to-tree';\r\nimport { CollectionTreeService } from './collection-tree.service';\r\nimport { CollectionPartial, RearrangeEvent } from './collection-tree.types';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-tree',\r\n    templateUrl: 'collection-tree.component.html',\r\n    styleUrls: ['./collection-tree.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [CollectionTreeService],\r\n})\r\nexport class CollectionTreeComponent implements OnInit, OnChanges {\r\n    @Input() collections: CollectionPartial[];\r\n    @Input() activeCollectionId: string;\r\n    @Input() expandAll = false;\r\n    @Input() expandedIds: string[] = [];\r\n    @Input() selectionManager: SelectionManager<CollectionPartial>;\r\n    @Output() rearrange = new EventEmitter<RearrangeEvent>();\r\n    @Output() deleteCollection = new EventEmitter<string>();\r\n    collectionTree: RootNode<CollectionPartial>;\r\n\r\n    constructor(private collectionTreeService: CollectionTreeService) {}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('collections' in changes && this.collections) {\r\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree, this.expandedIds);\r\n            this.collectionTreeService.setCollectionTree(this.collectionTree);\r\n            this.collectionTreeService.resetMoveList();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.collectionTreeService.rearrange$.subscribe(event => this.rearrange.emit(event));\r\n        this.collectionTreeService.delete$.subscribe(id => this.deleteCollection.emit(id));\r\n    }\r\n}\r\n","<ng-template vdrDialogTitle>\r\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\r\n</ng-template>\r\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\r\n<ul>\r\n    <li *ngFor=\"let variant of variants\">{{ variant.name }} ({{ variant.sku }})</li>\r\n</ul>\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"confirm()\" class=\"btn btn-primary\">\r\n        {{ 'common.confirm' | translate }}\r\n    </button>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Dialog, GetProductVariantOptionsQuery } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-confirm-variant-deletion-dialog',\r\n    templateUrl: './confirm-variant-deletion-dialog.component.html',\r\n    styleUrls: ['./confirm-variant-deletion-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmVariantDeletionDialogComponent implements Dialog<boolean> {\r\n    resolveWith: (result?: boolean) => void;\r\n    variants: NonNullable<GetProductVariantOptionsQuery['product']>['variants'] = [];\r\n\r\n    confirm() {\r\n        this.resolveWith(true);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [disabled]=\"isNew$ | async\"\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"languageCode$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            ></vdr-language-selector>\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"facet-detail\"></vdr-action-bar-items>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar formGroupName=\"facet\">\r\n            <vdr-card>\r\n                <vdr-form-field [label]=\"'catalog.visibility' | translate\" for=\"visibility\">\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"visible\"\r\n                            id=\"visibility\"\r\n                        />\r\n                        <label class=\"visible-toggle\">\r\n                            <ng-container *ngIf=\"detailForm.value.facet?.visible; else private\">{{\r\n                                'catalog.public' | translate\r\n                            }}</ng-container>\r\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\r\n                        </label>\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </vdr-card>\r\n            <vdr-card>\r\n                <vdr-page-entity-info *ngIf=\"entity$ | async as entity\" [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card formGroupName=\"facet\">\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            (input)=\"updateCode(entity?.code, $event.target.value)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'common.code' | translate\" for=\"code\">\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"code\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'common.custom-fields' | translate\" *ngIf=\"customFields.length\">\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Facet\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('facet.customFields')\"\r\n                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                />\r\n            </vdr-card>\r\n\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"facet-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n\r\n            <vdr-card\r\n                *ngIf=\"!(isNew$ | async)\"\r\n                [title]=\"'catalog.facet-values' | translate\"\r\n                [paddingX]=\"false\"\r\n            >\r\n                <table\r\n                    class=\"facet-values-list table\"\r\n                    formArrayName=\"values\"\r\n                    *ngIf=\"0 < getValuesFormArray().length\"\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>{{ 'common.name' | translate }}</th>\r\n                            <th>{{ 'common.code' | translate }}</th>\r\n                            <ng-container *ngIf=\"customValueFields.length\">\r\n                                <th>{{ 'common.custom-fields' | translate }}</th>\r\n                            </ng-container>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr\r\n                            class=\"facet-value\"\r\n                            *ngFor=\"let value of values; let i = index\"\r\n                            [formGroup]=\"detailForm.get(['values', i])\"\r\n                        >\r\n                            <td class=\"align-middle\">\r\n                                <vdr-entity-info [entity]=\"value\"></vdr-entity-info>\r\n                            </td>\r\n                            <td class=\"align-middle\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    formControlName=\"name\"\r\n                                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                                    (input)=\"updateValueCode(entity?.values[i]?.code, $event.target.value, i)\"\r\n                                />\r\n                            </td>\r\n                            <td class=\"align-middle\">\r\n                                <input type=\"text\" formControlName=\"code\" />\r\n                            </td>\r\n                            <td class=\"\" *ngIf=\"customValueFields.length\">\r\n                                <vdr-tabbed-custom-fields\r\n                                    entityName=\"FacetValue\"\r\n                                    [customFields]=\"customValueFields\"\r\n                                    [compact]=\"true\"\r\n                                    [customFieldsFormGroup]=\"detailForm.get(['values', i, 'customFields'])\"\r\n                                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                                ></vdr-tabbed-custom-fields>\r\n                            </td>\r\n                            <td class=\"align-middle\">\r\n                                <vdr-dropdown>\r\n                                    <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\r\n                                        {{ 'common.actions' | translate }}\r\n                                        <clr-icon shape=\"caret down\"></clr-icon>\r\n                                    </button>\r\n                                    <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"delete-button\"\r\n                                            (click)=\"deleteFacetValue(entity?.values[i]?.id, i)\"\r\n                                            [disabled]=\"!(updatePermission | hasPermission)\"\r\n                                            vdrDropdownItem\r\n                                        >\r\n                                            <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                            {{ 'common.delete' | translate }}\r\n                                        </button>\r\n                                    </vdr-dropdown-menu>\r\n                                </vdr-dropdown>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"button m-3\"\r\n                        *vdrIfPermissions=\"['CreateCatalog', 'CreateFacet']\"\r\n                        (click)=\"addFacetValue()\"\r\n                    >\r\n                        <clr-icon shape=\"add\"></clr-icon>\r\n                        {{ 'catalog.add-facet-value' | translate }}\r\n                    </button>\r\n                </div>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n    FormBuilder,\r\n    UntypedFormArray,\r\n    UntypedFormControl,\r\n    UntypedFormGroup,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateFacetInput,\r\n    CreateFacetValueInput,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    DeletionResult,\r\n    FACET_WITH_VALUES_FRAGMENT,\r\n    FacetWithValuesFragment,\r\n    findTranslation,\r\n    GetFacetDetailDocument,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    TypedBaseDetailComponent,\r\n    UpdateFacetInput,\r\n    UpdateFacetValueInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest, EMPTY, forkJoin, Observable } from 'rxjs';\r\nimport { map, mergeMap, switchMap, take } from 'rxjs/operators';\r\n\r\nexport const FACET_DETAIL_QUERY = gql`\r\n    query GetFacetDetail($id: ID!) {\r\n        facet(id: $id) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-facet-detail',\r\n    templateUrl: './facet-detail.component.html',\r\n    styleUrls: ['./facet-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetFacetDetailDocument, 'facet'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    readonly customFields = this.getCustomFieldConfig('Facet');\r\n    readonly customValueFields = this.getCustomFieldConfig('FacetValue');\r\n    detailForm = this.formBuilder.group({\r\n        facet: this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            name: '',\r\n            visible: true,\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        }),\r\n        values: this.formBuilder.array<{\r\n            id: string;\r\n            name: string;\r\n            code: string;\r\n            customFields: any;\r\n        }>([]),\r\n    });\r\n    values: Array<FacetWithValuesFragment['values'][number] | { name: string; code: string }> = [];\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    updateCode(currentCode: string, nameValue: string) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['facet', 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateValueCode(currentCode: string, nameValue: string, index: number) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['values', index, 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    customValueFieldIsSet(index: number, name: string): boolean {\r\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\r\n    }\r\n\r\n    getValuesFormArray(): UntypedFormArray {\r\n        return this.detailForm.get('values') as UntypedFormArray;\r\n    }\r\n\r\n    addFacetValue() {\r\n        const valuesFormArray = this.detailForm.get('values') as UntypedFormArray | null;\r\n        if (valuesFormArray) {\r\n            const valueGroup = this.formBuilder.group({\r\n                id: '',\r\n                name: ['', Validators.required],\r\n                code: '',\r\n                customFields: this.formBuilder.group({}),\r\n            });\r\n            const newValue: any = { name: '', code: '' };\r\n            if (this.customValueFields.length) {\r\n                const customValueFieldsGroup = new UntypedFormGroup({});\r\n                newValue.customFields = {};\r\n\r\n                for (const fieldDef of this.customValueFields) {\r\n                    const key = fieldDef.name;\r\n                    customValueFieldsGroup.addControl(key, new UntypedFormControl());\r\n                }\r\n\r\n                valueGroup.addControl('customFields', customValueFieldsGroup);\r\n            }\r\n            valuesFormArray.insert(valuesFormArray.length, valueGroup);\r\n            this.values.push(newValue);\r\n        }\r\n    }\r\n\r\n    create() {\r\n        const facetForm = this.detailForm.get('facet') as (typeof this.detailForm)['controls']['facet'];\r\n        if (!facetForm || !facetForm.dirty) {\r\n            return;\r\n        }\r\n        const newFacet = this.getUpdatedFacet(\r\n            {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                isPrivate: false,\r\n                languageCode: this.languageCode,\r\n                name: '',\r\n                code: '',\r\n                translations: [],\r\n                values: [],\r\n            },\r\n            facetForm,\r\n            this.languageCode,\r\n        ) as CreateFacetInput;\r\n        this.dataService.facet.createFacet(newFacet).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), { entity: 'Facet' });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Facet',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        const valuesArray = this.detailForm.get('values') as (typeof this.detailForm)['controls']['values'];\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([facet, languageCode]) => {\r\n                    const facetForm = this.detailForm.get(\r\n                        'facet',\r\n                    ) as (typeof this.detailForm)['controls']['facet'];\r\n                    const updateOperations: Array<Observable<any>> = [];\r\n\r\n                    if (facetForm && facetForm.dirty) {\r\n                        const newFacet = this.getUpdatedFacet(\r\n                            facet,\r\n                            facetForm,\r\n                            languageCode,\r\n                        ) as UpdateFacetInput;\r\n                        if (newFacet) {\r\n                            updateOperations.push(this.dataService.facet.updateFacet(newFacet));\r\n                        }\r\n                    }\r\n                    if (valuesArray && valuesArray.dirty) {\r\n                        const createdValues = this.getCreatedFacetValues(facet, valuesArray, languageCode);\r\n                        if (createdValues.length) {\r\n                            updateOperations.push(\r\n                                this.dataService.facet.createFacetValues(createdValues).pipe(\r\n                                    switchMap(\r\n                                        () =>\r\n                                            this.dataService.query(GetFacetDetailDocument, {\r\n                                                id: this.id,\r\n                                            }).single$,\r\n                                    ),\r\n                                ),\r\n                            );\r\n                        }\r\n                        const updatedValues = this.getUpdatedFacetValues(facet, valuesArray, languageCode);\r\n                        if (updatedValues.length) {\r\n                            updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\r\n                        }\r\n                    }\r\n\r\n                    return forkJoin(updateOperations);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Facet' });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Facet',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    deleteFacetValue(facetValueId: string | undefined, index: number) {\r\n        if (!facetValueId) {\r\n            // deleting a newly-added (not persisted) FacetValue\r\n            const valuesFormArray = this.detailForm.get('values') as UntypedFormArray | null;\r\n            if (valuesFormArray) {\r\n                valuesFormArray.removeAt(index);\r\n            }\r\n            this.values.splice(index, 1);\r\n            return;\r\n        }\r\n        this.showModalAndDelete(facetValueId)\r\n            .pipe(\r\n                switchMap(response => {\r\n                    if (response.result === DeletionResult.DELETED) {\r\n                        return [true];\r\n                    } else {\r\n                        return this.showModalAndDelete(facetValueId, response.message || '').pipe(\r\n                            map(r => r.result === DeletionResult.DELETED),\r\n                        );\r\n                    }\r\n                }),\r\n                switchMap(deleted =>\r\n                    deleted\r\n                        ? this.dataService.query(GetFacetDetailDocument, {\r\n                              id: this.id,\r\n                          }).single$\r\n                        : [],\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    const valuesFormArray = this.detailForm.get('values') as UntypedFormArray | null;\r\n                    if (valuesFormArray) {\r\n                        valuesFormArray.removeAt(index);\r\n                    }\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'FacetValue',\r\n                    });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'FacetValue',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private showModalAndDelete(facetValueId: string, message?: string) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-facet-value'),\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(result =>\r\n                    result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY,\r\n                ),\r\n                map(result => result.deleteFacetValues[0]),\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Sets the values of the form on changes to the facet or current language.\r\n     */\r\n    protected setFormValues(facet: FacetWithValuesFragment, languageCode: LanguageCode) {\r\n        const currentTranslation = findTranslation(facet, languageCode);\r\n\r\n        this.detailForm.patchValue({\r\n            facet: {\r\n                code: facet.code,\r\n                visible: !facet.isPrivate,\r\n                name: currentTranslation?.name ?? '',\r\n            },\r\n        });\r\n\r\n        if (this.customFields.length) {\r\n            const customFieldsGroup = this.detailForm.get(['facet', 'customFields']) as UntypedFormGroup;\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['facet', 'customFields']),\r\n                facet,\r\n                currentTranslation,\r\n            );\r\n        }\r\n\r\n        const currentValuesFormArray = this.detailForm.get('values') as UntypedFormArray;\r\n        this.values = [...facet.values];\r\n        facet.values.forEach(value => {\r\n            const valueTranslation = findTranslation(value, languageCode);\r\n            const group = {\r\n                id: value.id,\r\n                code: value.code,\r\n                name: valueTranslation ? valueTranslation.name : '',\r\n            };\r\n            let valueControl = currentValuesFormArray.controls.find(\r\n                control => control.value.id === value.id,\r\n            ) as UntypedFormGroup | undefined;\r\n            if (valueControl) {\r\n                valueControl.get('id')?.setValue(group.id);\r\n                valueControl.get('code')?.setValue(group.code);\r\n                valueControl.get('name')?.setValue(group.name);\r\n            } else {\r\n                valueControl = this.formBuilder.group(group);\r\n                currentValuesFormArray.push(valueControl);\r\n            }\r\n            if (this.customValueFields.length) {\r\n                let customValueFieldsGroup = valueControl.get(['customFields']) as\r\n                    | UntypedFormGroup\r\n                    | undefined;\r\n                if (!customValueFieldsGroup) {\r\n                    customValueFieldsGroup = new UntypedFormGroup({});\r\n                    valueControl.addControl('customFields', customValueFieldsGroup);\r\n                }\r\n\r\n                if (customValueFieldsGroup) {\r\n                    for (const fieldDef of this.customValueFields) {\r\n                        const key = fieldDef.name;\r\n                        const fieldValue =\r\n                            fieldDef.type === 'localeString'\r\n                                ? (valueTranslation as any | undefined)?.customFields?.[key]\r\n                                : (value as any).customFields[key];\r\n                        const control = customValueFieldsGroup.get(key);\r\n                        if (control) {\r\n                            control.setValue(fieldValue);\r\n                        } else {\r\n                            customValueFieldsGroup.addControl(key, new UntypedFormControl(fieldValue));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedFacet(\r\n        facet: FacetWithValuesFragment,\r\n        facetFormGroup: (typeof this.detailForm)['controls']['facet'],\r\n        languageCode: LanguageCode,\r\n    ): CreateFacetInput | UpdateFacetInput {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: facet,\r\n            updatedFields: facetFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: facet.name || '',\r\n            },\r\n        });\r\n        input.isPrivate = !facetFormGroup.value.visible;\r\n        return input;\r\n    }\r\n\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via a createFacetValues mutation.\r\n     */\r\n    private getCreatedFacetValues(\r\n        facet: FacetWithValuesFragment,\r\n        valuesFormArray: (typeof this.detailForm)['controls']['values'],\r\n        languageCode: LanguageCode,\r\n    ): CreateFacetValueInput[] {\r\n        return valuesFormArray.controls\r\n            .filter(c => !c.value?.id)\r\n            .map(c => c.value)\r\n            .map(value =>\r\n                createUpdatedTranslatable({\r\n                    translatable: { ...value, translations: [] as any },\r\n                    updatedFields: value ?? {},\r\n                    customFieldConfig: this.customValueFields,\r\n                    languageCode,\r\n                    defaultTranslation: {\r\n                        languageCode,\r\n                        name: '',\r\n                    },\r\n                }),\r\n            )\r\n            .map(input => ({\r\n                facetId: facet.id,\r\n                code: input.code ?? '',\r\n                ...input,\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via an updateFacetValues mutation.\r\n     */\r\n    private getUpdatedFacetValues(\r\n        facet: FacetWithValuesFragment,\r\n        valuesFormArray: UntypedFormArray,\r\n        languageCode: LanguageCode,\r\n    ): UpdateFacetValueInput[] {\r\n        const dirtyValues = facet.values.filter((v, i) => {\r\n            const formRow = valuesFormArray.get(i.toString());\r\n            return formRow && formRow.dirty && formRow.value.id;\r\n        });\r\n        const dirtyValueValues = valuesFormArray.controls\r\n            .filter(c => c.dirty && c.value.id)\r\n            .map(c => c.value);\r\n\r\n        if (dirtyValues.length !== dirtyValueValues.length) {\r\n            throw new Error(_(`error.facet-value-form-values-do-not-match`));\r\n        }\r\n        return dirtyValues\r\n            .map((value, i) =>\r\n                createUpdatedTranslatable({\r\n                    translatable: value,\r\n                    updatedFields: dirtyValueValues[i],\r\n                    customFieldConfig: this.customValueFields,\r\n                    languageCode,\r\n                    defaultTranslation: {\r\n                        languageCode,\r\n                        name: '',\r\n                    },\r\n                }),\r\n            )\r\n            .filter(notNullOrUndefined);\r\n    }\r\n}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BulkAction,\r\n    createBulkAssignToChannelAction,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    currentChannelIsNotDefault,\r\n    DataService,\r\n    getChannelCodeFromUserStatus,\r\n    GetFacetListQuery,\r\n    ItemOf,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    RemoveFacetFromChannelResult,\r\n    RemoveFacetsFromChannelMutation,\r\n} from '@vendure/admin-ui/core';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { EMPTY, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { FacetListComponent } from './facet-list.component';\r\n\r\nexport const deleteFacetsBulkAction = createBulkDeleteAction<ItemOf<GetFacetListQuery, 'facets'>>({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteFacet) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    shouldRetryItem: (response, item) => !!response.message,\r\n    bulkDelete: (dataService, ids, retrying) =>\r\n        dataService.facet.deleteFacets(ids, retrying).pipe(map(res => res.deleteFacets)),\r\n});\r\n\r\nexport const assignFacetsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetFacetListQuery, 'facets'>\r\n>({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateFacet),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, facetIds, channelId) =>\r\n        dataService.facet\r\n            .assignFacetsToChannel({\r\n                facetIds,\r\n                channelId,\r\n            })\r\n            .pipe(map(res => res.assignFacetsToChannel)),\r\n});\r\n\r\nexport const removeFacetsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetFacetListQuery, 'facets'>,\r\n    RemoveFacetsFromChannelMutation['removeFacetsFromChannel'][number]\r\n>({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteFacet),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, facetIds, channelId, retrying) =>\r\n        dataService.facet\r\n            .removeFacetsFromChannel({\r\n                channelId: channelId,\r\n                facetIds,\r\n                force: retrying,\r\n            })\r\n            .pipe(map(res => res.removeFacetsFromChannel)),\r\n    isErrorResult: result => (result.__typename === 'FacetInUseError' ? result.message : undefined),\r\n});\r\n\r\nexport const removeFacetsFromChannelBulkAction2: BulkAction<\r\n    ItemOf<GetFacetListQuery, 'facets'>,\r\n    FacetListComponent\r\n> = {\r\n    location: 'facet-list',\r\n    label: _('catalog.remove-from-channel'),\r\n    getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\r\n    icon: 'layers',\r\n    iconClass: 'is-warning',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateFacet) ||\r\n        userPermissions.includes(Permission.UpdateCatalog),\r\n    isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n\r\n        const activeChannelId$ = dataService.client\r\n            .userStatus()\r\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\r\n\r\n        function showModalAndDelete(facetIds: string[], message?: string) {\r\n            return modalService\r\n                .dialog({\r\n                    title: _('catalog.remove-from-channel'),\r\n                    translationVars: {\r\n                        count: selection.length,\r\n                    },\r\n                    size: message ? 'lg' : 'md',\r\n                    body: message,\r\n                    buttons: [\r\n                        { type: 'secondary', label: _('common.cancel') },\r\n                        {\r\n                            type: 'danger',\r\n                            label: message ? _('common.force-remove') : _('common.remove'),\r\n                            returnValue: true,\r\n                        },\r\n                    ],\r\n                })\r\n                .pipe(\r\n                    switchMap(res =>\r\n                        res\r\n                            ? activeChannelId$.pipe(\r\n                                  switchMap(activeChannelId =>\r\n                                      activeChannelId\r\n                                          ? dataService.facet.removeFacetsFromChannel({\r\n                                                channelId: activeChannelId,\r\n                                                facetIds,\r\n                                                force: !!message,\r\n                                            })\r\n                                          : EMPTY,\r\n                                  ),\r\n                                  map(res2 => res2.removeFacetsFromChannel),\r\n                              )\r\n                            : EMPTY,\r\n                    ),\r\n                );\r\n        }\r\n\r\n        showModalAndDelete(unique(selection.map(f => f.id)))\r\n            .pipe(\r\n                switchMap(result => {\r\n                    let removedCount = selection.length;\r\n                    const errors: string[] = [];\r\n                    const errorIds: string[] = [];\r\n                    let i = 0;\r\n                    for (const item of result) {\r\n                        if (item.__typename === 'FacetInUseError') {\r\n                            errors.push(item.message);\r\n                            errorIds.push(selection[i]?.id);\r\n                            removedCount--;\r\n                        }\r\n                        i++;\r\n                    }\r\n                    if (0 < errorIds.length) {\r\n                        return showModalAndDelete(errorIds, errors.join('\\n')).pipe(\r\n                            map(result2 => {\r\n                                const notRemovedCount = result2.filter(\r\n                                    r => r.__typename === 'FacetInUseError',\r\n                                ).length;\r\n                                return selection.length - notRemovedCount;\r\n                            }),\r\n                        );\r\n                    } else {\r\n                        return of(removedCount);\r\n                    }\r\n                }),\r\n                switchMap(removedCount =>\r\n                    removedCount\r\n                        ? getChannelCodeFromUserStatus(dataService).then(({ channelCode }) => ({\r\n                              channelCode,\r\n                              removedCount,\r\n                          }))\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(({ removedCount, channelCode }) => {\r\n                if (removedCount) {\r\n                    hostComponent.refresh();\r\n                    clearSelection();\r\n                    notificationService.success(_('catalog.notify-remove-facets-from-channel-success'), {\r\n                        count: removedCount,\r\n                        channelCode,\r\n                    });\r\n                }\r\n            });\r\n    },\r\n};\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            ></vdr-language-selector>\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"facet-list\"></vdr-action-bar-items>\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                [routerLink]=\"['./create']\"\r\n                *vdrIfPermissions=\"['CreateCatalog', 'CreateFacet']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'catalog.create-new-facet' | translate }}\r\n            </a>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    id=\"facet-list\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"facet-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    ></vdr-bulk-action-menu>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\" [sort]=\"sorts.get('id')\">\r\n        <ng-template let-facet=\"item\">\r\n            {{ facet.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-facet=\"item\">\r\n            {{ facet.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-facet=\"item\">\r\n            {{ facet.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-facet=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', facet.id]\"\r\n                ><span>{{ facet.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\">\r\n        <ng-template let-facet=\"item\">\r\n            {{ facet.code }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.visibility' | translate\">\r\n        <ng-template let-facet=\"item\">\r\n            <vdr-chip *ngIf=\"facet.isPrivate\" colorType=\"warning\">{{\r\n                'common.private' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!facet.isPrivate\" colorType=\"success\">{{\r\n                'common.public' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'catalog.values' | translate\">\r\n        <ng-template let-facet=\"item\">\r\n            <div class=\"facet-values-list\">\r\n                <vdr-facet-value-chip\r\n                    *ngFor=\"let value of facet.values | slice : 0 : displayLimit[facet.id] || 3\"\r\n                    [facetValue]=\"value\"\r\n                    [removable]=\"false\"\r\n                    [displayFacetName]=\"false\"\r\n                ></vdr-facet-value-chip>\r\n                <button\r\n                    class=\"button-small\"\r\n                    *ngIf=\"facet.values.length > initialLimit\"\r\n                    (click)=\"toggleDisplayLimit(facet)\"\r\n                >\r\n                    <ng-container *ngIf=\"(displayLimit[facet.id] || 0) < facet.values.length; else collapse\">\r\n                        <clr-icon shape=\"plus\"></clr-icon>\r\n                        {{ facet.values.length - initialLimit }}\r\n                    </ng-container>\r\n                    <ng-template #collapse>\r\n                        <clr-icon shape=\"minus\"></clr-icon>\r\n                    </ng-template>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column *ngFor=\"let customField of customFields\" [customField]=\"customField\" [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    FACET_WITH_VALUES_FRAGMENT,\r\n    GetFacetListDocument,\r\n    GetFacetListQuery,\r\n    ItemOf,\r\n    LanguageCode,\r\n    TypedBaseListComponent,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\n\r\nexport const FACET_LIST_QUERY = gql`\r\n    query GetFacetList($options: FacetListOptions) {\r\n        facets(options: $options) {\r\n            items {\r\n                ...FacetWithValues\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-facet-list',\r\n    templateUrl: './facet-list.component.html',\r\n    styleUrls: ['./facet-list.component.scss'],\r\n})\r\nexport class FacetListComponent\r\n    extends TypedBaseListComponent<typeof GetFacetListDocument, 'facets'>\r\n    implements OnInit\r\n{\r\n    readonly initialLimit = 3;\r\n    displayLimit: { [id: string]: number } = {};\r\n\r\n    readonly customFields = this.getCustomFieldConfig('Facet');\r\n    readonly filters = this.createFilterCollection()\r\n        .addDateFilters()\r\n        .addFilter({\r\n            name: 'visibility',\r\n            type: { kind: 'boolean' },\r\n            label: _('common.visibility'),\r\n            toFilterInput: value => ({\r\n                isPrivate: { eq: !value },\r\n            }),\r\n        })\r\n        .addCustomFieldFilters(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    readonly sorts = this.createSortCollection()\r\n        .defaultSort('createdAt', 'DESC')\r\n        .addSort({ name: 'id' })\r\n        .addSort({ name: 'createdAt' })\r\n        .addSort({ name: 'updatedAt' })\r\n        .addSort({ name: 'name' })\r\n        .addSort({ name: 'code' })\r\n        .addCustomFieldSorts(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    constructor(protected dataService: DataService) {\r\n        super();\r\n        super.configure({\r\n            document: GetFacetListDocument,\r\n            getItems: data => data.facets,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n\r\n    toggleDisplayLimit(facet: ItemOf<GetFacetListQuery, 'facets'>) {\r\n        if (this.displayLimit[facet.id] === facet.values.length) {\r\n            this.displayLimit[facet.id] = this.initialLimit;\r\n        } else {\r\n            this.displayLimit[facet.id] = facet.values.length;\r\n        }\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n}\r\n","<div *ngFor=\"let group of optionGroups\" class=\"option-groups\">\r\n    <div class=\"name\">\r\n        <label>{{ 'catalog.option' | translate }}</label>\r\n        <input\r\n            #optionGroupName\r\n            placeholder=\"e.g. Size\"\r\n            clrInput\r\n            [(ngModel)]=\"group.name\"\r\n            name=\"name\"\r\n            required\r\n            (keydown.enter)=\"handleEnter($event, optionValueInputComponent)\"\r\n        />\r\n    </div>\r\n    <div class=\"values\">\r\n        <label>{{ 'catalog.option-values' | translate }}</label>\r\n        <vdr-option-value-input\r\n            #optionValueInputComponent\r\n            [(ngModel)]=\"group.values\"\r\n            (ngModelChange)=\"generateVariants()\"\r\n            (edit)=\"generateVariants()\"\r\n            [groupName]=\"group.name\"\r\n            [disabled]=\"group.name === ''\"\r\n        ></vdr-option-value-input>\r\n    </div>\r\n    <div class=\"remove-group\">\r\n        <button\r\n            class=\"button-small mt-2\"\r\n            [title]=\"'catalog.remove-option' | translate\"\r\n            (click)=\"removeOption(group.name)\"\r\n        >\r\n            <clr-icon shape=\"trash\"></clr-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n<button class=\"button mb-2\" (click)=\"addOption()\">\r\n    <clr-icon shape=\"plus\"></clr-icon>\r\n    {{ 'catalog.add-option' | translate }}\r\n</button>\r\n\r\n<ng-container *ngIf=\"stockLocations$ | async as stockLocations\">\r\n    <clr-alert *ngIf=\"stockLocations.length === 0\" clrAlertType=\"warning\" [clrAlertClosable]=\"false\" class=\"\">\r\n        <clr-alert-item>\r\n            <span class=\"alert-text\">\r\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\r\n            </span>\r\n        </clr-alert-item>\r\n    </clr-alert>\r\n\r\n    <div class=\"form-grid mb-2\">\r\n        <vdr-form-field *ngIf=\"stockLocations.length\" [label]=\"'catalog.add-stock-to-location' | translate\">\r\n            <select [(ngModel)]=\"selectedStockLocationId\">\r\n                <option *ngFor=\"let location of stockLocations\" [value]=\"location.id\">\r\n                    {{ location.name }}\r\n                </option>\r\n            </select>\r\n        </vdr-form-field>\r\n    </div>\r\n\r\n    <div class=\"variants-preview\" *ngIf=\"0 < stockLocations.length\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th *ngIf=\"1 < variants.length\">{{ 'common.create' | translate }}</th>\r\n                    <th *ngIf=\"1 < variants.length\">{{ 'catalog.variant' | translate }}</th>\r\n                    <th>{{ 'catalog.sku' | translate }}</th>\r\n                    <th>{{ 'catalog.price' | translate }}</th>\r\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tr\r\n                *ngFor=\"let variant of variants; trackBy: trackByFn\"\r\n                [class.disabled]=\"!variantFormValues[variant.id].value.enabled === false\"\r\n                [formGroup]=\"variantFormValues[variant.id]\"\r\n            >\r\n                <td *ngIf=\"1 < variants.length\">\r\n                    <input type=\"checkbox\" formControlName=\"enabled\" clrCheckbox />\r\n                </td>\r\n                <td *ngIf=\"1 < variants.length\">\r\n                    {{ variant.values.join(' ') }}\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <input type=\"text\" formControlName=\"sku\" [placeholder]=\"'catalog.sku' | translate\" />\r\n                    </vdr-form-field>\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <vdr-currency-input\r\n                            formControlName=\"price\"\r\n                            [currencyCode]=\"currencyCode\"\r\n                        ></vdr-currency-input>\r\n                    </vdr-form-field>\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <input type=\"number\" formControlName=\"stock\" min=\"0\" step=\"1\" />\r\n                    </vdr-form-field>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</ng-container>\r\n","import { Component, ElementRef, EventEmitter, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n    CurrencyCode,\r\n    DataService,\r\n    GetStockLocationListDocument,\r\n    GetStockLocationListQuery,\r\n    ItemOf,\r\n} from '@vendure/admin-ui/core';\r\nimport { generateAllCombinations } from '@vendure/common/lib/shared-utils';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { OptionValueInputComponent } from '../option-value-input/option-value-input.component';\r\n\r\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\r\nexport type CreateVariantValues = {\r\n    optionValues: string[];\r\n    enabled: boolean;\r\n    sku: string;\r\n    price: number;\r\n    stock: number;\r\n};\r\nexport type CreateProductVariantsConfig = {\r\n    groups: Array<{ name: string; values: string[] }>;\r\n    variants: CreateVariantValues[];\r\n    stockLocationId: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'vdr-generate-product-variants',\r\n    templateUrl: './generate-product-variants.component.html',\r\n    styleUrls: ['./generate-product-variants.component.scss'],\r\n})\r\nexport class GenerateProductVariantsComponent implements OnInit {\r\n    @Output() variantsChange = new EventEmitter<CreateProductVariantsConfig>();\r\n    @ViewChildren('optionGroupName', { read: ElementRef }) groupNameInputs: QueryList<ElementRef>;\r\n    optionGroups: Array<{ name: string; values: Array<{ name: string; locked: boolean }> }> = [];\r\n    currencyCode: CurrencyCode;\r\n    variants: Array<{ id: string; values: string[] }>;\r\n    variantFormValues: {\r\n        [id: string]: FormGroup<{\r\n            optionValues: FormControl<string[]>;\r\n            enabled: FormControl<boolean>;\r\n            price: FormControl<number>;\r\n            sku: FormControl<string>;\r\n            stock: FormControl<number>;\r\n        }>;\r\n    } = {};\r\n    stockLocations$: Observable<Array<ItemOf<GetStockLocationListQuery, 'stockLocations'>>>;\r\n    selectedStockLocationId: string | null = null;\r\n    constructor(private dataService: DataService, private formBuilder: FormBuilder) {}\r\n\r\n    ngOnInit() {\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\r\n        });\r\n        this.stockLocations$ = this.dataService\r\n            .query(GetStockLocationListDocument, {\r\n                options: {\r\n                    take: 999,\r\n                },\r\n            })\r\n            .refetchOnChannelChange()\r\n            .mapStream(({ stockLocations }) => stockLocations.items)\r\n            .pipe(\r\n                tap(items => {\r\n                    if (items.length) {\r\n                        this.selectedStockLocationId = items[0].id;\r\n                    }\r\n                }),\r\n            );\r\n\r\n        this.generateVariants();\r\n    }\r\n\r\n    addOption() {\r\n        this.optionGroups.push({ name: '', values: [] });\r\n        const index = this.optionGroups.length - 1;\r\n        setTimeout(() => {\r\n            const input = this.groupNameInputs.get(index)?.nativeElement;\r\n            input?.focus();\r\n        });\r\n    }\r\n\r\n    removeOption(name: string) {\r\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\r\n        this.generateVariants();\r\n    }\r\n\r\n    generateVariants() {\r\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\r\n        const groups = totalValuesCount\r\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\r\n            : [[DEFAULT_VARIANT_CODE]];\r\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\r\n\r\n        this.variants.forEach((variant, index) => {\r\n            if (!this.variantFormValues[variant.id]) {\r\n                const formGroup = this.formBuilder.nonNullable.group({\r\n                    optionValues: [variant.values],\r\n                    enabled: true as boolean,\r\n                    price: this.copyFromDefault(variant.id, 'price', 0),\r\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\r\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\r\n                });\r\n                formGroup.valueChanges.subscribe(() => this.onFormChange());\r\n                if (index === 0) {\r\n                    formGroup.get('price')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('price', formGroup.get('price'));\r\n                    });\r\n                    formGroup.get('sku')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('sku', formGroup.get('sku'));\r\n                    });\r\n                    formGroup.get('stock')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('stock', formGroup.get('stock'));\r\n                    });\r\n                }\r\n                this.variantFormValues[variant.id] = formGroup;\r\n            }\r\n        });\r\n    }\r\n\r\n    trackByFn(index: number, variant: { name: string; values: string[] }) {\r\n        return variant.values.join('|');\r\n    }\r\n\r\n    handleEnter(event: KeyboardEvent, optionValueInputComponent: OptionValueInputComponent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        optionValueInputComponent.focus();\r\n    }\r\n\r\n    copyValuesToPristine(field: 'price' | 'sku' | 'stock', formControl: AbstractControl | null) {\r\n        if (!formControl) {\r\n            return;\r\n        }\r\n        Object.values(this.variantFormValues).forEach(formGroup => {\r\n            const correspondingFormControl = formGroup.get(field) as FormControl;\r\n            if (correspondingFormControl && correspondingFormControl.pristine) {\r\n                correspondingFormControl.setValue(formControl.value, { emitEvent: false });\r\n            }\r\n        });\r\n    }\r\n\r\n    onFormChange() {\r\n        const variantsToCreate = this.variants\r\n            .map(v => this.variantFormValues[v.id].value as CreateVariantValues)\r\n            .filter(v => v.enabled);\r\n        this.variantsChange.emit({\r\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\r\n            variants: variantsToCreate,\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            stockLocationId: this.selectedStockLocationId!,\r\n        });\r\n    }\r\n\r\n    private copyFromDefault<T extends keyof CreateVariantValues>(\r\n        variantId: string,\r\n        prop: T,\r\n        value: CreateVariantValues[T],\r\n    ): CreateVariantValues[T] {\r\n        return variantId !== DEFAULT_VARIANT_CODE\r\n            ? (this.variantFormValues[DEFAULT_VARIANT_CODE].get(prop)?.value as CreateVariantValues[T])\r\n            : value;\r\n    }\r\n}\r\n","import { switchMap } from './switchMap';\nimport { isFunction } from '../util/isFunction';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","<vdr-page-block *ngIf=\"!hideLanguageSelect\">\r\n    <vdr-language-selector\r\n        [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n        [currentLanguageCode]=\"contentLanguage$ | async\"\r\n        (languageCodeChange)=\"setLanguage($event)\"\r\n    ></vdr-language-selector>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    id=\"product-variant-list\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"product-variant-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-sku' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\" [sort]=\"sorts.get('id')\">\r\n        <ng-template let-variant=\"item\">\r\n            {{ variant.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-variant=\"item\">\r\n            {{ variant.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-variant=\"item\">\r\n            {{ variant.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.image' | translate\">\r\n        <ng-template let-variant=\"item\">\r\n            <div class=\"image-placeholder\">\r\n                <img\r\n                    *ngIf=\"variant.featuredAsset as asset; else imagePlaceholder\"\r\n                    [src]=\"asset | assetPreview : 'tiny'\"\r\n                />\r\n                <ng-template #imagePlaceholder>\r\n                    <div class=\"placeholder\">\r\n                        <clr-icon shape=\"image\" size=\"48\"></clr-icon>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'catalog.name' | translate\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-variant=\"item\">\r\n            <a\r\n                class=\"button-ghost\"\r\n                [routerLink]=\"['/catalog/inventory', variant.productId, 'variants', variant.id]\"\r\n                ><span>{{ variant.name }}</span\r\n                ><clr-icon shape=\"arrow right\"\r\n            /></a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'catalog.sku' | translate\" [sort]=\"sorts.get('sku')\">\r\n        <ng-template let-variant=\"item\">\r\n            {{ variant.sku }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\">\r\n        <ng-template let-variant=\"item\">\r\n            <vdr-chip *ngIf=\"variant.enabled\" colorType=\"success\">{{\r\n                'common.enabled' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!variant.enabled\" colorType=\"warning\">{{\r\n                'common.disabled' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.price' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('price')\"\r\n    >\r\n        <ng-template let-variant=\"item\">\r\n            {{ variant.price | localeCurrency : variant.currencyCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.price-with-tax' | translate\" [sort]=\"sorts.get('priceWithTax')\">\r\n        <ng-template let-variant=\"item\">\r\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n\r\n    <vdr-dt2-column [heading]=\"'catalog.stock-on-hand' | translate\" [hiddenByDefault]=\"false\">\r\n        <ng-template let-variant=\"item\">\r\n            <vdr-chip *ngFor=\"let stockLevel of variant.stockLevels\" [title]=\"stockLevel.stockLocation?.name\">\r\n                <div class=\"flex center\">\r\n                    <div>\r\n                        {{ stockLevel.stockOnHand\r\n                        }}<span class=\"ml-1\" *ngIf=\"stockLevel.stockAllocated\"\r\n                            >({{ stockLevel.stockAllocated }} allocated)</span\r\n                        >\r\n                    </div>\r\n                </div>\r\n            </vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column *ngFor=\"let field of customFields\" [customField]=\"field\" [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    LogicalOperator,\n    ProductVariantListQueryDocument,\n    TypedBaseListComponent,\n} from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-product-variant-list',\n    templateUrl: './product-variant-list.component.html',\n    styleUrls: ['./product-variant-list.component.scss'],\n})\nexport class ProductVariantListComponent\n    extends TypedBaseListComponent<typeof ProductVariantListQueryDocument, 'productVariants'>\n    implements OnInit\n{\n    @Input() productId?: string;\n    @Input() hideLanguageSelect = false;\n    readonly customFields = this.getCustomFieldConfig('ProductVariant');\n    readonly filters = this.createFilterCollection()\n        .addDateFilters()\n        .addFilters([\n            {\n                name: 'id',\n                type: { kind: 'text' },\n                label: _('common.id'),\n                filterField: 'id',\n            },\n            {\n                name: 'enabled',\n                type: { kind: 'boolean' },\n                label: _('common.enabled'),\n                filterField: 'enabled',\n            },\n            {\n                name: 'sku',\n                type: { kind: 'text' },\n                label: _('catalog.sku'),\n                filterField: 'sku',\n            },\n            {\n                name: 'price',\n                type: { kind: 'number', inputType: 'currency' },\n                label: _('common.price'),\n                filterField: 'price',\n            },\n            {\n                name: 'priceWithTax',\n                type: { kind: 'number', inputType: 'currency' },\n                label: _('common.price-with-tax'),\n                filterField: 'priceWithTax',\n            },\n        ])\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'sku' },\n            { name: 'price' },\n            { name: 'priceWithTax' },\n        ])\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        this.configure({\n            document: ProductVariantListQueryDocument,\n            getItems: data => data.productVariants,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        sku: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                        ...(this.productId ? { productId: { eq: this.productId } } : {}),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <div class=\"flex clr-flex-row\"></div>\r\n            <vdr-language-selector\r\n                [disabled]=\"isNew$ | async\"\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"languageCode$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            ></vdr-language-selector>\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"product-detail\"></vdr-action-bar-items>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    *vdrIfPermissions=\"updatePermissions\"\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card>\r\n                <vdr-form-field [label]=\"'catalog.visibility' | translate\" for=\"visibility\">\r\n                    <clr-toggle-wrapper *vdrIfPermissions=\"updatePermissions\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            name=\"enabled\"\r\n                            [formControl]=\"detailForm.get(['enabled'])\"\r\n                        />\r\n                        <label>{{ 'common.enabled' | translate }}</label>\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </vdr-card>\r\n            <ng-container *ngIf=\"!(isNew$ | async)\">\r\n                <vdr-card *vdrIfMultichannel [title]=\"'common.channels' | translate\">\r\n                    <vdr-form-item *vdrIfDefaultChannelActive>\r\n                        <div class=\"flex channel-assignment\">\r\n                            <div class=\"mb-2\">\r\n                                <ng-container *ngFor=\"let channel of productChannels$ | async\">\r\n                                    <vdr-chip\r\n                                        *ngIf=\"!isDefaultChannel(channel.code)\"\r\n                                        icon=\"times-circle\"\r\n                                        (iconClick)=\"removeFromChannel(channel.id)\"\r\n                                    >\r\n                                        <vdr-channel-badge [channelCode]=\"channel.code\"></vdr-channel-badge>\r\n                                        {{ channel.code | channelCodeToLabel }}\r\n                                    </vdr-chip>\r\n                                </ng-container>\r\n                            </div>\r\n                            <button class=\"button-small\" (click)=\"assignToChannel()\">\r\n                                <clr-icon shape=\"layers\"></clr-icon>\r\n                                {{ 'catalog.assign-to-channel' | translate }}\r\n                            </button>\r\n                        </div>\r\n                    </vdr-form-item>\r\n                </vdr-card>\r\n            </ng-container>\r\n            <vdr-card *ngIf=\"entity?.optionGroups.length\" [title]=\"'catalog.product-options' | translate\">\r\n                <div class=\"options\">\r\n                    <vdr-chip\r\n                        *ngFor=\"let optionGroup of entity?.optionGroups | sort : 'id'\"\r\n                        [colorFrom]=\"optionGroup.code\"\r\n                        [invert]=\"true\"\r\n                    >\r\n                        {{ optionGroup.name }}\r\n                    </vdr-chip>\r\n                </div>\r\n                <div>\r\n                    <a [routerLink]=\"['options']\" class=\"button-small mt-2\" *vdrIfPermissions=\"updatePermissions\">\r\n                        <clr-icon shape=\"pencil\"></clr-icon>\r\n                        {{ 'catalog.edit-options' | translate }}\r\n                    </a>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'catalog.facets' | translate\">\r\n                <div class=\"facets\">\r\n                    <vdr-facet-value-chip\r\n                        *ngFor=\"let facetValue of facetValues$ | async\"\r\n                        [facetValue]=\"facetValue\"\r\n                        [removable]=\"updatePermissions | hasPermission\"\r\n                        (remove)=\"removeProductFacetValue(facetValue.id)\"\r\n                    ></vdr-facet-value-chip>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        class=\"button-small mt-2\"\r\n                        *vdrIfPermissions=\"updatePermissions\"\r\n                        (click)=\"selectProductFacetValue()\"\r\n                    >\r\n                        <clr-icon shape=\"plus\"></clr-icon>\r\n                        {{ 'catalog.add-facets' | translate }}\r\n                    </button>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\"></vdr-page-entity-info>\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n\r\n        <vdr-page-block>\r\n            <button type=\"submit\" hidden x-data=\"prevents enter key from triggering other buttons\"></button>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <div>\r\n                        <vdr-form-field [label]=\"'catalog.product-name' | translate\" for=\"name\">\r\n                            <input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                formControlName=\"name\"\r\n                                [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                                (input)=\"updateSlug($event.target.value)\"\r\n                            />\r\n                        </vdr-form-field>\r\n                        <div *ngIf=\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\">\r\n                            <clr-checkbox-wrapper>\r\n                                <input\r\n                                    clrCheckbox\r\n                                    type=\"checkbox\"\r\n                                    id=\"auto-update\"\r\n                                    formControlName=\"autoUpdateVariantNames\"\r\n                                />\r\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\r\n                            </clr-checkbox-wrapper>\r\n                        </div>\r\n                    </div>\r\n                    <vdr-form-field\r\n                        [label]=\"'catalog.slug' | translate\"\r\n                        for=\"slug\"\r\n                        [errors]=\"{ pattern: 'catalog.slug-pattern-error' | translate }\"\r\n                    >\r\n                        <input\r\n                            id=\"slug\"\r\n                            type=\"text\"\r\n                            formControlName=\"slug\"\r\n                            [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        class=\"form-grid-span\"\r\n                        [label]=\"'common.description' | translate\"\r\n                        for=\"slug\"\r\n                        [errors]=\"{ pattern: 'catalog.slug-pattern-error' | translate }\"\r\n                    >\r\n                        <vdr-rich-text-editor\r\n                            formControlName=\"description\"\r\n                            [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                        ></vdr-rich-text-editor>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'common.custom-fields' | translate\" *ngIf=\"customFields.length\">\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Product\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                    [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"product-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n            <vdr-card [title]=\"'catalog.assets' | translate\">\r\n                <vdr-assets\r\n                    [assets]=\"assetChanges.assets || entity?.assets\"\r\n                    [featuredAsset]=\"assetChanges.featuredAsset || entity?.featuredAsset\"\r\n                    [updatePermissions]=\"updatePermissions\"\r\n                    (change)=\"assetChanges = $event\"\r\n                ></vdr-assets>\r\n            </vdr-card>\r\n\r\n            <vdr-card [title]=\"'catalog.product-variants' | translate\" [paddingX]=\"isNew$ | async\">\r\n                <div *ngIf=\"isNew$ | async; else variantList\">\r\n                    <vdr-generate-product-variants\r\n                        (variantsChange)=\"createVariantsConfig = $event\"\r\n                    ></vdr-generate-product-variants>\r\n                </div>\r\n                <ng-template #variantList>\r\n                    <vdr-product-variant-list\r\n                        [productId]=\"this.id\"\r\n                        [hideLanguageSelect]=\"true\"\r\n                    ></vdr-product-variant-list>\r\n                </ng-template>\r\n                <div class=\"mx-3\" *ngIf=\"(isNew$ | async) === false\">\r\n                    <a class=\"button\" [routerLink]=\"['manage-variants']\">\r\n                        <clr-icon shape=\"add-text\"></clr-icon>\r\n                        {{ 'catalog.manage-variants' | translate }}</a\r\n                    >\r\n                </div>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    BaseDetailComponent,\r\n    CreateProductInput,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    findTranslation,\r\n    getChannelCodeFromUserStatus,\r\n    getDefaultUiLanguage,\r\n    GetProductDetailDocument,\r\n    GetProductDetailQuery,\r\n    GetProductWithVariantsQuery,\r\n    ItemOf,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    PRODUCT_DETAIL_FRAGMENT,\r\n    ProductDetailFragment,\r\n    ProductVariantFragment,\r\n    ServerConfigService,\r\n    TypedBaseDetailComponent,\r\n    unicodePatternValidator,\r\n    UpdateProductInput,\r\n    UpdateProductMutation,\r\n    UpdateProductOptionInput,\r\n    UpdateProductVariantInput,\r\n    UpdateProductVariantsMutation,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest, concat, EMPTY, from, Observable } from 'rxjs';\r\nimport {\r\n    distinctUntilChanged,\r\n    map,\r\n    mergeMap,\r\n    shareReplay,\r\n    skip,\r\n    switchMap,\r\n    switchMapTo,\r\n    take,\r\n} from 'rxjs/operators';\r\n\r\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\r\nimport { ApplyFacetDialogComponent } from '../apply-facet-dialog/apply-facet-dialog.component';\r\nimport { AssignProductsToChannelDialogComponent } from '../assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\r\nimport { CreateProductVariantsConfig } from '../generate-product-variants/generate-product-variants.component';\r\n\r\ninterface SelectedAssets {\r\n    assets?: Asset[];\r\n    featuredAsset?: Asset;\r\n}\r\n\r\nexport const GET_PRODUCT_DETAIL = gql`\r\n    query GetProductDetail($id: ID!) {\r\n        product(id: $id) {\r\n            ...ProductDetail\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-product-detail2',\r\n    templateUrl: './product-detail.component.html',\r\n    styleUrls: ['./product-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetProductDetailDocument, 'product'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    readonly customFields = this.getCustomFieldConfig('Product');\r\n    detailForm = this.formBuilder.group({\r\n        enabled: true,\r\n        name: ['', Validators.required],\r\n        autoUpdateVariantNames: true,\r\n        slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9_-]+$/)],\r\n        description: '',\r\n        facetValueIds: [[] as string[]],\r\n        customFields: this.formBuilder.group(\r\n            this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n        ),\r\n    });\r\n    assetChanges: SelectedAssets = {};\r\n    productChannels$: Observable<ProductDetailFragment['channels']>;\r\n    facetValues$: Observable<ProductDetailFragment['facetValues']>;\r\n    createVariantsConfig: CreateProductVariantsConfig = { groups: [], variants: [], stockLocationId: '' };\r\n    public readonly updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n\r\n    constructor(\r\n        route: ActivatedRoute,\r\n        router: Router,\r\n        serverConfigService: ServerConfigService,\r\n        private productDetailService: ProductDetailService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        protected dataService: DataService,\r\n        private changeDetector: ChangeDetectorRef,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        const productFacetValues$ = this.entity$.pipe(map(product => product.facetValues));\r\n        const productGroup = this.detailForm;\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const formFacetValueIdChanges$ = productGroup.get('facetValueIds')!.valueChanges.pipe(\r\n            skip(1),\r\n            distinctUntilChanged(),\r\n            switchMap(ids =>\r\n                this.dataService.facet\r\n                    .getFacetValues({ filter: { id: { in: ids } } })\r\n                    .mapSingle(({ facetValues }) => facetValues.items),\r\n            ),\r\n            shareReplay(1),\r\n        );\r\n        this.facetValues$ = concat(\r\n            productFacetValues$.pipe(take(1)),\r\n            productFacetValues$.pipe(switchMapTo(formFacetValueIdChanges$)),\r\n        );\r\n        this.productChannels$ = this.entity$.pipe(map(p => p.channels));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    isDefaultChannel(channelCode: string): boolean {\r\n        return channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n\r\n    assignToChannel() {\r\n        this.productChannels$\r\n            .pipe(\r\n                take(1),\r\n                switchMap(channels =>\r\n                    this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\r\n                        size: 'lg',\r\n                        locals: {\r\n                            productIds: [this.id],\r\n                            currentChannelIds: channels.map(c => c.id),\r\n                        },\r\n                    }),\r\n                ),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    removeFromChannel(channelId: string) {\r\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\r\n            .pipe(\r\n                switchMap(({ channelCode }) =>\r\n                    this.modalService.dialog({\r\n                        title: _('catalog.remove-product-from-channel'),\r\n                        buttons: [\r\n                            { type: 'secondary', label: _('common.cancel') },\r\n                            {\r\n                                type: 'danger',\r\n                                label: _('catalog.remove-from-channel'),\r\n                                translationVars: { channelCode },\r\n                                returnValue: true,\r\n                            },\r\n                        ],\r\n                    }),\r\n                ),\r\n                switchMap(response =>\r\n                    response\r\n                        ? this.dataService.product.removeProductsFromChannel({\r\n                              channelId,\r\n                              productIds: [this.id],\r\n                          })\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('catalog.notify-remove-product-from-channel-success'));\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('catalog.notify-remove-product-from-channel-error'));\r\n                },\r\n            );\r\n    }\r\n\r\n    assignVariantToChannel(variant: ProductVariantFragment) {\r\n        return this.modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n                size: 'lg',\r\n                locals: {\r\n                    productIds: [this.id],\r\n                    productVariantIds: [variant.id],\r\n                    currentChannelIds: variant.channels.map(c => c.id),\r\n                },\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    removeVariantFromChannel({ channelId, variant }: { channelId: string; variant: ProductVariantFragment }) {\r\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\r\n            .pipe(\r\n                switchMap(({ channelCode }) =>\r\n                    this.modalService.dialog({\r\n                        title: _('catalog.remove-product-variant-from-channel'),\r\n                        buttons: [\r\n                            { type: 'secondary', label: _('common.cancel') },\r\n                            {\r\n                                type: 'danger',\r\n                                label: _('catalog.remove-from-channel'),\r\n                                translationVars: { channelCode },\r\n                                returnValue: true,\r\n                            },\r\n                        ],\r\n                    }),\r\n                ),\r\n                switchMap(response =>\r\n                    response\r\n                        ? this.dataService.product.removeVariantsFromChannel({\r\n                              channelId,\r\n                              productVariantIds: [variant.id],\r\n                          })\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('catalog.notify-remove-variant-from-channel-success'));\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('catalog.notify-remove-variant-from-channel-error'));\r\n                },\r\n            );\r\n    }\r\n\r\n    assetsChanged(): boolean {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n\r\n    /**\r\n     * If creating a new product, automatically generate the slug based on the product name.\r\n     */\r\n    updateSlug(nameValue: string) {\r\n        const slugControl = this.detailForm.get('slug');\r\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\r\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n        }\r\n    }\r\n\r\n    selectProductFacetValue() {\r\n        this.displayFacetValueModal().subscribe(facetValueIds => {\r\n            if (facetValueIds) {\r\n                const productGroup = this.detailForm;\r\n                const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n                productGroup.patchValue({\r\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\r\n                });\r\n                productGroup.markAsDirty();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateProductOption(input: UpdateProductOptionInput & { autoUpdate: boolean }) {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([product, languageCode]) =>\r\n                    this.productDetailService.updateProductOption(input, product, languageCode),\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'ProductOption',\r\n                    });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'ProductOption',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    removeProductFacetValue(facetValueId: string) {\r\n        const productGroup = this.detailForm;\r\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n        productGroup.patchValue({\r\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\r\n        });\r\n        productGroup.markAsDirty();\r\n    }\r\n\r\n    private displayFacetValueModal(): Observable<string[] | undefined> {\r\n        return this.modalService\r\n            .fromComponent(ApplyFacetDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n            })\r\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\r\n    }\r\n\r\n    create() {\r\n        const productGroup = this.detailForm;\r\n        if (!productGroup.dirty) {\r\n            return;\r\n        }\r\n\r\n        const newProduct = this.getUpdatedProduct(\r\n            {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                enabled: true,\r\n                languageCode: this.languageCode,\r\n                name: '',\r\n                slug: '',\r\n                featuredAsset: null,\r\n                assets: [],\r\n                description: '',\r\n                translations: [],\r\n                optionGroups: [],\r\n                facetValues: [],\r\n                channels: [],\r\n            },\r\n            productGroup as UntypedFormGroup,\r\n            this.languageCode,\r\n        ) as CreateProductInput;\r\n        this.productDetailService\r\n            .createProductWithVariants(newProduct, this.createVariantsConfig, this.languageCode)\r\n            .subscribe(\r\n                ({ createProductVariants, productId }) => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'Product',\r\n                    });\r\n                    this.assetChanges = {};\r\n                    this.detailForm.markAsPristine();\r\n                    this.router.navigate(['../', productId], { relativeTo: this.route });\r\n                },\r\n                err => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(err);\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'Product',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([product, languageCode]) => {\r\n                    const productGroup = this.detailForm;\r\n                    let productInput: UpdateProductInput | undefined;\r\n                    let variantsInput: UpdateProductVariantInput[] | undefined;\r\n\r\n                    if (productGroup.dirty || this.assetsChanged()) {\r\n                        productInput = this.getUpdatedProduct(\r\n                            product,\r\n                            productGroup as UntypedFormGroup,\r\n                            languageCode,\r\n                        ) as UpdateProductInput;\r\n                    }\r\n\r\n                    return this.productDetailService.updateProduct({\r\n                        product,\r\n                        languageCode,\r\n                        autoUpdate:\r\n                            this.detailForm.get(['product', 'autoUpdateVariantNames'])?.value ?? false,\r\n                        productInput,\r\n                        variantsInput,\r\n                    });\r\n                }),\r\n            )\r\n            .subscribe(\r\n                result => {\r\n                    this.updateSlugAfterSave(result);\r\n                    this.detailForm.markAsPristine();\r\n                    this.assetChanges = {};\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Product',\r\n                    });\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Product',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n\r\n    /**\r\n     * Sets the values of the form on changes to the product or current language.\r\n     */\r\n    protected setFormValues(\r\n        product: NonNullable<GetProductWithVariantsQuery['product']>,\r\n        languageCode: LanguageCode,\r\n    ) {\r\n        const currentTranslation = findTranslation(product, languageCode);\r\n        this.detailForm.patchValue({\r\n            enabled: product.enabled,\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            slug: currentTranslation ? currentTranslation.slug : '',\r\n            description: currentTranslation ? currentTranslation.description : '',\r\n            facetValueIds: product.facetValues.map(fv => fv.id),\r\n        });\r\n\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                product,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedProduct(\r\n        product: NonNullable<GetProductDetailQuery['product']>,\r\n        productFormGroup: UntypedFormGroup,\r\n        languageCode: LanguageCode,\r\n    ): UpdateProductInput | CreateProductInput {\r\n        const updatedProduct = createUpdatedTranslatable({\r\n            translatable: product,\r\n            updatedFields: productFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: product.name || '',\r\n                slug: product.slug || '',\r\n                description: product.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedProduct,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            facetValueIds: productFormGroup.value.facetValueIds,\r\n        } as UpdateProductInput | CreateProductInput;\r\n    }\r\n\r\n    /**\r\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\r\n     */\r\n    private updateSlugAfterSave(results: Array<UpdateProductMutation | UpdateProductVariantsMutation>) {\r\n        const firstResult = results[0];\r\n        const slugControl = this.detailForm.get(['product', 'slug']);\r\n\r\n        function isUpdateMutation(input: any): input is UpdateProductMutation {\r\n            return input.hasOwnProperty('updateProduct');\r\n        }\r\n\r\n        if (slugControl && isUpdateMutation(firstResult)) {\r\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\r\n        }\r\n    }\r\n}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BulkAction,\r\n    createBulkRemoveFromChannelAction,\r\n    DataService,\r\n    DeletionResult,\r\n    GetProductListQuery,\r\n    isMultiChannel,\r\n    ItemOf,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n} from '@vendure/admin-ui/core';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { AssignProductsToChannelDialogComponent } from '../assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\r\nimport { BulkAddFacetValuesDialogComponent } from '../bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component';\r\n\r\nimport { ProductListComponent } from './product-list.component';\r\n\r\nexport const deleteProductsBulkAction: BulkAction<\r\n    ItemOf<GetProductListQuery, 'products'>,\r\n    ProductListComponent\r\n> = {\r\n    location: 'product-list',\r\n    label: _('common.delete'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteProduct) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-bulk-delete-products'),\r\n                translationVars: {\r\n                    count: selection.length,\r\n                },\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response ? dataService.product.deleteProducts(unique(selection.map(p => p.id))) : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(result => {\r\n                let deleted = 0;\r\n                const errors: string[] = [];\r\n                for (const item of result.deleteProducts) {\r\n                    if (item.result === DeletionResult.DELETED) {\r\n                        deleted++;\r\n                    } else if (item.message) {\r\n                        errors.push(item.message);\r\n                    }\r\n                }\r\n                if (0 < deleted) {\r\n                    notificationService.success(_('catalog.notify-bulk-delete-products-success'), {\r\n                        count: deleted,\r\n                    });\r\n                }\r\n                if (0 < errors.length) {\r\n                    notificationService.error(errors.join('\\n'));\r\n                }\r\n                hostComponent.refresh();\r\n                clearSelection();\r\n            });\r\n    },\r\n};\r\n\r\nexport const assignProductsToChannelBulkAction: BulkAction<\r\n    ItemOf<GetProductListQuery, 'products'>,\r\n    ProductListComponent\r\n> = {\r\n    location: 'product-list',\r\n    label: _('catalog.assign-to-channel'),\r\n    icon: 'layers',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\r\n    onClick: ({ injector, selection, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n                size: 'lg',\r\n                locals: {\r\n                    productIds: unique(selection.map(p => p.id)),\r\n                    currentChannelIds: [],\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    clearSelection();\r\n                }\r\n            });\r\n    },\r\n};\r\n\r\nexport const removeProductsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetProductListQuery, 'products'>\r\n>({\r\n    location: 'product-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, productIds, channelId) =>\r\n        dataService.product\r\n            .removeProductsFromChannel({\r\n                channelId: channelId,\r\n                productIds,\r\n            })\r\n            .pipe(map(res => res.removeProductsFromChannel)),\r\n});\r\n\r\nexport const assignFacetValuesToProductsBulkAction: BulkAction<\r\n    ItemOf<GetProductListQuery, 'products'>,\r\n    ProductListComponent\r\n> = {\r\n    location: 'product-list',\r\n    label: _('catalog.edit-facet-values'),\r\n    icon: 'tag',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        const mode = 'product';\r\n        const ids = unique(selection.map(p => p.id));\r\n        return modalService\r\n            .fromComponent(BulkAddFacetValuesDialogComponent, {\r\n                size: 'xl',\r\n                locals: {\r\n                    mode,\r\n                    ids,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    notificationService.success(_('common.notify-bulk-update-success'), {\r\n                        count: selection.length,\r\n                        entity: mode === 'product' ? 'Products' : 'ProductVariants',\r\n                    });\r\n                    clearSelection();\r\n                }\r\n            });\r\n    },\r\n};\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            ></vdr-language-selector>\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"product-list\"></vdr-action-bar-items>\r\n            <a\r\n                class=\"button primary mr-1\"\r\n                [routerLink]=\"['./create']\"\r\n                *vdrIfPermissions=\"['CreateCatalog', 'CreateProduct']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'catalog.create-new-product' | translate }}\r\n            </a>\r\n            <vdr-dropdown>\r\n                <button class=\"icon-button\" vdrDropdownTrigger>\r\n                    <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <button type=\"button\" vdrDropdownItem (click)=\"rebuildSearchIndex()\">\r\n                        <clr-icon shape=\"refresh\" class=\"\"></clr-icon>\r\n                        {{ 'catalog.rebuild-search-index' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    id=\"product-list\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"product-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    ></vdr-bulk-action-menu>\r\n    <!--<ng-template #vdrDt2CustomSearch>\r\n            <div class=\"search-form\">\r\n                <vdr-product-search-input\r\n                    #productSearchInputComponent\r\n                    [facetValueResults]=\"facetValues$ | async\"\r\n                    (searchTermChange)=\"setSearchTerm($event)\"\r\n                    (facetValueChange)=\"setFacetValueIds($event)\"\r\n                ></vdr-product-search-input>\r\n                <vdr-dropdown class=\"search-settings-menu mr3\">\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"icon-button search-index-button\"\r\n                        [title]=\"\r\n                            (pendingSearchIndexUpdates\r\n                                ? 'catalog.pending-search-index-updates'\r\n                                : 'catalog.search-index-controls'\r\n                            ) | translate\r\n                        \"\r\n                        vdrDropdownTrigger\r\n                    >\r\n                        <clr-icon shape=\"cog\"></clr-icon>\r\n                        <vdr-status-badge *ngIf=\"pendingSearchIndexUpdates\" type=\"warning\"></vdr-status-badge>\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                        <h4 class=\"dropdown-header\">{{ 'catalog.search-index-controls' | translate }}</h4>\r\n                        <ng-container *ngIf=\"pendingSearchIndexUpdates\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"run-updates-button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"runPendingSearchIndexUpdates()\"\r\n                                [disabled]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\r\n                            >\r\n                                <vdr-status-badge type=\"warning\"></vdr-status-badge>\r\n                                {{\r\n                                    'catalog.run-pending-search-index-updates'\r\n                                        | translate : { count: pendingSearchIndexUpdates }\r\n                                }}\r\n                            </button>\r\n                            <div class=\"dropdown-divider\"></div>\r\n                        </ng-container>\r\n                        <button\r\n                            type=\"button\"\r\n                            vdrDropdownItem\r\n                            (click)=\"rebuildSearchIndex()\"\r\n                            [disabled]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\r\n                        >\r\n                            {{ 'catalog.rebuild-search-index' | translate }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </div>\r\n        </ng-template>-->\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\" [sort]=\"sorts.get('id')\">\r\n        <ng-template let-product=\"item\">\r\n            {{ product.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-product=\"item\">\r\n            {{ product.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-product=\"item\">\r\n            {{ product.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.image' | translate\">\r\n        <ng-template let-product=\"item\">\r\n            <div class=\"image-placeholder\">\r\n                <img\r\n                    *ngIf=\"product.featuredAsset as asset; else imagePlaceholder\"\r\n                    [src]=\"asset | assetPreview : 'tiny'\"\r\n                />\r\n                <ng-template #imagePlaceholder>\r\n                    <div class=\"placeholder\">\r\n                        <clr-icon shape=\"image\" size=\"48\"></clr-icon>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'catalog.name' | translate\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-product=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', product.id]\"\r\n                ><span>{{ product.name }}</span\r\n                ><clr-icon shape=\"arrow right\"\r\n            /></a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.slug' | translate\" [sort]=\"sorts.get('slug')\">\r\n        <ng-template let-product=\"item\">\r\n            {{ product.slug }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\">\r\n        <ng-template let-product=\"item\">\r\n            <vdr-chip *ngIf=\"product.enabled\" colorType=\"success\">{{\r\n                'common.enabled' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!product.enabled\" colorType=\"warning\">{{\r\n                'common.disabled' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'catalog.number-of-variants' | translate\">\r\n        <ng-template let-product=\"item\">\r\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let customField of customFields\"\r\n        [customField]=\"customField\"\r\n        [sorts]=\"sorts\"\r\n    />\r\n</vdr-data-table-2>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    FacetValueFormInputComponent,\r\n    JobQueueService,\r\n    JobState,\r\n    ModalService,\r\n    NotificationService,\r\n    ProductListQueryDocument,\r\n    TypedBaseListComponent,\r\n} from '@vendure/admin-ui/core';\r\nimport { EMPTY, lastValueFrom } from 'rxjs';\r\nimport { delay, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-products-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.scss'],\r\n})\r\nexport class ProductListComponent\r\n    extends TypedBaseListComponent<typeof ProductListQueryDocument, 'products'>\r\n    implements OnInit\r\n{\r\n    pendingSearchIndexUpdates = 0;\r\n    readonly customFields = this.getCustomFieldConfig('Product');\r\n    readonly filters = this.createFilterCollection()\r\n        .addDateFilters()\r\n        .addFilters([\r\n            {\r\n                name: 'id',\r\n                type: { kind: 'text' },\r\n                label: _('common.id'),\r\n                filterField: 'id',\r\n            },\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'boolean' },\r\n                label: _('common.enabled'),\r\n                filterField: 'enabled',\r\n            },\r\n            {\r\n                name: 'slug',\r\n                type: { kind: 'text' },\r\n                label: _('common.slug'),\r\n                filterField: 'slug',\r\n            },\r\n        ])\r\n        .addFilter({\r\n            name: 'facetValues',\r\n            type: {\r\n                kind: 'custom',\r\n                component: FacetValueFormInputComponent,\r\n                serializeValue: value => value.map(v => v.id).join(','),\r\n                deserializeValue: value => value.split(',').map(id => ({ id })),\r\n                getLabel: value => {\r\n                    if (value.length === 0) {\r\n                        return '';\r\n                    }\r\n                    if (value[0].name) {\r\n                        return value.map(v => v.name).join(', ');\r\n                    } else {\r\n                        return lastValueFrom(\r\n                            this.dataService.facet\r\n                                .getFacetValues({ filter: { id: { in: value.map(v => v.id) } } })\r\n                                .mapSingle(({ facetValues }) =>\r\n                                    facetValues.items.map(fv => fv.name).join(', '),\r\n                                ),\r\n                        );\r\n                    }\r\n                },\r\n            },\r\n            label: _('catalog.facet-values'),\r\n            toFilterInput: (value: any[]) => ({\r\n                facetValueId: {\r\n                    in: value.map(v => v.id),\r\n                },\r\n            }),\r\n        })\r\n        .addCustomFieldFilters(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    readonly sorts = this.createSortCollection()\r\n        .defaultSort('createdAt', 'DESC')\r\n        .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'slug' },\r\n        ])\r\n        .addCustomFieldSorts(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    constructor(\r\n        protected dataService: DataService,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        private jobQueueService: JobQueueService,\r\n    ) {\r\n        super();\r\n        this.configure({\r\n            document: ProductListQueryDocument,\r\n            getItems: data => data.products,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n\r\n    rebuildSearchIndex() {\r\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\r\n            this.notificationService.info(_('catalog.reindexing'));\r\n            this.jobQueueService.addJob(reindex.id, job => {\r\n                if (job.state === JobState.COMPLETED) {\r\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\r\n                    this.notificationService.success(_('catalog.reindex-successful'), {\r\n                        count: job.result.indexedItemCount,\r\n                        time,\r\n                    });\r\n                    this.refresh();\r\n                } else {\r\n                    this.notificationService.error(_('catalog.reindex-error'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteProduct(productId: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-product'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)),\r\n                // Short delay to allow the product to be removed from the search index before\r\n                // refreshing.\r\n                delay(500),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Product',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Product',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","<label class=\"clr-control-label\">{{ 'catalog.taxes' | translate }}</label>\r\n<div *ngIf=\"priceIncludesTax\" class=\"value\">\r\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\r\n</div>\r\n<div *ngIf=\"!priceIncludesTax\" class=\"value\">\r\n    {{\r\n        'catalog.price-with-tax-in-default-zone'\r\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\r\n    }}\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-variant-price-detail',\r\n    templateUrl: './variant-price-detail.component.html',\r\n    styleUrls: ['./variant-price-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantPriceDetailComponent implements OnInit, OnChanges {\r\n    @Input() priceIncludesTax: boolean;\r\n    @Input() price: number;\r\n    @Input() currencyCode: string;\r\n    @Input() taxCategoryId: string;\r\n\r\n    grossPrice$: Observable<number>;\r\n    taxRate$: Observable<number>;\r\n\r\n    private priceChange$ = new BehaviorSubject<number>(0);\r\n    private taxCategoryIdChange$ = new BehaviorSubject<string>('');\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        const taxRates$ = this.dataService.settings\r\n            .getTaxRatesSimple(999, 0, 'cache-first')\r\n            .mapStream(data => data.taxRates.items);\r\n        const activeChannel$ = this.dataService.settings\r\n            .getActiveChannel('cache-first')\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel);\r\n\r\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(\r\n            map(([channel, taxRates, taxCategoryId]) => {\r\n                const defaultTaxZone = channel.defaultTaxZone;\r\n                if (!defaultTaxZone) {\r\n                    return 0;\r\n                }\r\n                const applicableRate = taxRates.find(\r\n                    taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId,\r\n                );\r\n\r\n                if (!applicableRate) {\r\n                    return 0;\r\n                }\r\n                return applicableRate.value;\r\n            }),\r\n        );\r\n\r\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(\r\n            map(([taxRate, price]) => Math.round(price * ((100 + taxRate) / 100))),\r\n        );\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('price' in changes) {\r\n            this.priceChange$.next(changes.price.currentValue);\r\n        }\r\n        if ('taxCategoryId' in changes) {\r\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\r\n        }\r\n    }\r\n}\r\n","<ng-select\r\n    *ngIf=\"(variants$ | async)?.length > 1\"\r\n    [items]=\"variants$ | async\"\r\n    appendTo=\"body\"\r\n    bindValue=\"id\"\r\n    [(ngModel)]=\"selectedVariantId\"\r\n    [searchFn]=\"searchFn\"\r\n    [clearable]=\"false\"\r\n    [placeholder]=\"'catalog.quick-jump-placeholder' | translate\"\r\n    (change)=\"onSelect($event)\"\r\n>\r\n    <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\r\n        {{ item.name }} ({{ item.sku }})\r\n    </ng-template>\r\n</ng-select>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n    DataService,\r\n    GetProductVariantsQuickJumpDocument,\r\n    GetProductVariantsQuickJumpQuery,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst GET_PRODUCT_VARIANTS_QUICK_JUMP = gql`\r\n    query GetProductVariantsQuickJump($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            variants {\r\n                id\r\n                name\r\n                sku\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-product-variant-quick-jump',\r\n    templateUrl: './product-variant-quick-jump.component.html',\r\n    styleUrls: ['./product-variant-quick-jump.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductVariantQuickJumpComponent implements OnInit {\r\n    @Input() productId: string;\r\n    selectedVariantId: string | undefined;\r\n    variants$: Observable<NonNullable<GetProductVariantsQuickJumpQuery['product']>['variants']>;\r\n    constructor(private dataService: DataService, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.variants$ = this.dataService\r\n            .query(GetProductVariantsQuickJumpDocument, {\r\n                id: this.productId,\r\n            })\r\n            .mapSingle(data => data.product?.variants ?? []);\r\n    }\r\n\r\n    searchFn = (\r\n        term: string,\r\n        item: NonNullable<GetProductVariantsQuickJumpQuery['product']>['variants'][number],\r\n    ) =>\r\n        item.name.toLowerCase().includes(term.toLowerCase()) ||\r\n        item.sku.toLowerCase().includes(term.toLowerCase());\r\n\r\n    onSelect(item?: NonNullable<GetProductVariantsQuickJumpQuery['product']>['variants'][number]) {\r\n        if (item) {\r\n            this.router\r\n                .navigate(['catalog', 'inventory', this.productId, 'variants', item.id])\r\n                .then(() => (this.selectedVariantId = undefined));\r\n        }\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left [grow]=\"true\">\r\n            <div class=\"flex center\">\r\n                <ng-container *ngIf=\"availableLanguages$ | async as availableLanguages\">\r\n                    <vdr-language-selector\r\n                        *ngIf=\"availableLanguages.length > 1\"\r\n                        class=\"mr-2\"\r\n                        [disabled]=\"isNew$ | async\"\r\n                        [availableLanguageCodes]=\"availableLanguages\"\r\n                        [currentLanguageCode]=\"languageCode$ | async\"\r\n                        (languageCodeChange)=\"setLanguage($event)\"\r\n                    ></vdr-language-selector>\r\n                </ng-container>\r\n                <vdr-product-variant-quick-jump [productId]=\"entity?.product.id\" />\r\n            </div>\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"product-variant-detail\"></vdr-action-bar-items>\r\n            <button\r\n                *vdrIfPermissions=\"['UpdateCatalog', 'UpdateProduct']\"\r\n                class=\"btn btn-primary\"\r\n                (click)=\"save()\"\r\n                [disabled]=\"\r\n                    (detailForm.invalid ||\r\n                        stockLevelsForm.invalid ||\r\n                        pricesForm.invalid ||\r\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\r\n                    !assetsChanged()\r\n                \"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<form class=\"form\" [formGroup]=\"detailForm\" *ngIf=\"entity$ | async as variant\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar\r\n            ><vdr-card>\r\n                <vdr-form-field [label]=\"'catalog.visibility' | translate\" for=\"visibility\">\r\n                    <clr-toggle-wrapper *vdrIfPermissions=\"['UpdateCatalog', 'UpdateProduct']\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            name=\"enabled\"\r\n                            [formControl]=\"detailForm.get(['enabled'])\"\r\n                        />\r\n                        <label>{{ 'common.enabled' | translate }}</label>\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"variant.options.length\" [title]=\"'catalog.product-options' | translate\">\r\n                <div class=\"options\">\r\n                    <vdr-chip\r\n                        *ngFor=\"let option of variant.options | sort : 'groupId'\"\r\n                        [colorFrom]=\"optionGroupCode(option.groupId)\"\r\n                        [invert]=\"true\"\r\n                    >\r\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\r\n                        {{ optionName(option) }}\r\n                    </vdr-chip>\r\n                </div>\r\n                <div>\r\n                    <a\r\n                        [routerLink]=\"['../../', 'options']\"\r\n                        class=\"button-small mt-2\"\r\n                        *vdrIfPermissions=\"updatePermissions\"\r\n                    >\r\n                        <clr-icon shape=\"pencil\"></clr-icon>\r\n                        {{ 'catalog.edit-options' | translate }}\r\n                    </a>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'catalog.facets' | translate\">\r\n                <div class=\"facets\">\r\n                    <vdr-facet-value-chip\r\n                        *ngFor=\"let facetValue of facetValues$ | async\"\r\n                        [facetValue]=\"facetValue\"\r\n                        [removable]=\"updatePermissions | hasPermission\"\r\n                        (remove)=\"removeFacetValue(facetValue.id)\"\r\n                    ></vdr-facet-value-chip>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        class=\"button-small mt-2\"\r\n                        *vdrIfPermissions=\"updatePermissions\"\r\n                        (click)=\"selectFacetValue()\"\r\n                    >\r\n                        <clr-icon shape=\"plus\"></clr-icon>\r\n                        {{ 'catalog.add-facets' | translate }}\r\n                    </button>\r\n                </div>\r\n            </vdr-card>\r\n\r\n            <vdr-card>\r\n                <vdr-page-entity-info *ngIf=\"entity$ | async as entity\" [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n\r\n        <vdr-page-block>\r\n            <button type=\"submit\" hidden x-data=\"prevents enter key from triggering other buttons\"></button>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'catalog.sku' | translate\" for=\"sku\">\r\n                        <input\r\n                            id=\"sku\"\r\n                            type=\"text\"\r\n                            formControlName=\"sku\"\r\n                            [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'common.custom-fields' | translate\" *ngIf=\"customFields.length\">\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"ProductVariant\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                    [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                />\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"product-variant-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            />\r\n            <vdr-card [title]=\"'catalog.assets' | translate\">\r\n                <vdr-assets\r\n                    [assets]=\"assetChanges.assets || variant.assets\"\r\n                    [featuredAsset]=\"assetChanges.featuredAsset || variant.featuredAsset\"\r\n                    [updatePermissions]=\"updatePermissions\"\r\n                    (change)=\"assetChanges = $event\"\r\n                />\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'catalog.price-and-tax' | translate\">\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'catalog.tax-category' | translate\" for=\"taxCategory\">\r\n                        <select name=\"taxCategory\" formControlName=\"taxCategoryId\">\r\n                            <option\r\n                                *ngFor=\"let taxCategory of taxCategories$ | async\"\r\n                                [value]=\"taxCategory.id\"\r\n                            >\r\n                                {{ taxCategory.name }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                </div>\r\n                <div class=\"form-grid prices\" *ngFor=\"let price of pricesForm.controls\" [formGroup]=\"price\">\r\n                    <vdr-form-field\r\n                        [label]=\"\r\n                            ('catalog.price' | translate) +\r\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\r\n                        \"\r\n                        [tooltip]=\"\r\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\r\n                                ? ('catalog.default-currency' | translate)\r\n                                : undefined\r\n                        \"\r\n                        for=\"price\"\r\n                    >\r\n                        <div class=\"price-wrapper\" [class.pending-deletion]=\"price.value.delete === true\">\r\n                            <vdr-currency-input\r\n                                name=\"price\"\r\n                                [currencyCode]=\"price.value.currencyCode\"\r\n                                [readonly]=\"\r\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\r\n                                \"\r\n                                formControlName=\"price\"\r\n                            />\r\n                            <div *ngIf=\"1 < pricesForm.controls.length\">\r\n                                <button\r\n                                    class=\"button-small delete-button\"\r\n                                    [disabled]=\"price.value.currencyCode === channelDefaultCurrencyCode\"\r\n                                    (click)=\"toggleDeletePrice(price.get('delete'))\"\r\n                                >\r\n                                    <clr-icon shape=\"trash\"></clr-icon>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </vdr-form-field>\r\n                    <vdr-variant-price-detail\r\n                        [price]=\"price.value.price\"\r\n                        [currencyCode]=\"price.value.currencyCode\"\r\n                        [priceIncludesTax]=\"channelPriceIncludesTax$ | async\"\r\n                        [taxCategoryId]=\"detailForm.get('taxCategoryId')!.value\"\r\n                    />\r\n                </div>\r\n                <ng-container *ngIf=\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\">\r\n                    <div *ngIf=\"unusedCurrencyCodes.length\">\r\n                        <vdr-dropdown>\r\n                            <button class=\"button mt-2\" vdrDropdownTrigger>\r\n                                <clr-icon shape=\"plus\"></clr-icon>\r\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\r\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu>\r\n                                <button\r\n                                    vdrDropdownItem\r\n                                    *ngFor=\"let currencyCode of unusedCurrencyCodes\"\r\n                                    (click)=\"addPriceInCurrency(currencyCode)\"\r\n                                >\r\n                                    {{ currencyCode | localeCurrencyName }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </div>\r\n                </ng-container>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'catalog.stock-levels' | translate\">\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field\r\n                        for=\"track-inventory\"\r\n                        [label]=\"'catalog.track-inventory' | translate\"\r\n                        [tooltip]=\"'catalog.track-inventory-tooltip' | translate\"\r\n                    >\r\n                        <select\r\n                            name=\"track-inventory\"\r\n                            formControlName=\"trackInventory\"\r\n                            [disabled]=\"!(updatePermissions | hasPermission)\"\r\n                        >\r\n                            <option [value]=\"GlobalFlag.TRUE\">\r\n                                {{ 'catalog.track-inventory-true' | translate }}\r\n                            </option>\r\n                            <option [value]=\"GlobalFlag.FALSE\">\r\n                                {{ 'catalog.track-inventory-false' | translate }}\r\n                            </option>\r\n                            <option [value]=\"GlobalFlag.INHERIT\">\r\n                                {{ 'catalog.track-inventory-inherit' | translate }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n\r\n                    <vdr-form-item\r\n                        [label]=\"'catalog.out-of-stock-threshold' | translate\"\r\n                        [tooltip]=\"'catalog.out-of-stock-threshold-tooltip' | translate\"\r\n                    >\r\n                        <input\r\n                            type=\"number\"\r\n                            formControlName=\"outOfStockThreshold\"\r\n                            [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                            [vdrDisabled]=\"\r\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\r\n                                inventoryIsNotTracked(detailForm)\r\n                            \"\r\n                        />\r\n                        <clr-toggle-wrapper>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                clrToggle\r\n                                name=\"useGlobalOutOfStockThreshold\"\r\n                                formControlName=\"useGlobalOutOfStockThreshold\"\r\n                                [vdrDisabled]=\"\r\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\r\n                                \"\r\n                            />\r\n                            <label\r\n                                >{{ 'catalog.use-global-value' | translate }} ({{\r\n                                    globalOutOfStockThreshold\r\n                                }})</label\r\n                            >\r\n                        </clr-toggle-wrapper>\r\n                    </vdr-form-item>\r\n                </div>\r\n                <div\r\n                    class=\"form-grid stock-levels\"\r\n                    *ngFor=\"let stockLevel of stockLevelsForm.controls\"\r\n                    [formGroup]=\"stockLevel\"\r\n                >\r\n                    <vdr-form-field\r\n                        [label]=\"\r\n                            stockLevel.get('stockLocationName')?.value +\r\n                            ': ' +\r\n                            ('catalog.stock-on-hand' | translate)\r\n                        \"\r\n                        [for]=\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\"\r\n                    >\r\n                        <input\r\n                            [id]=\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\"\r\n                            type=\"number\"\r\n                            formControlName=\"stockOnHand\"\r\n                            [readonly]=\"!(updatePermissions | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-item\r\n                        [label]=\"\r\n                            stockLevel.get('stockLocationName')?.value +\r\n                            ': ' +\r\n                            ('catalog.stock-allocated' | translate)\r\n                        \"\r\n                    >\r\n                        {{ stockLevel.get('stockAllocated')?.value }}\r\n                    </vdr-form-item>\r\n                </div>\r\n                <ng-container *ngIf=\"unusedStockLocation$ | async as unusedStockLocations\">\r\n                    <div *ngIf=\"unusedStockLocations.length\">\r\n                        <vdr-dropdown>\r\n                            <button class=\"button mt-2\" vdrDropdownTrigger>\r\n                                <clr-icon shape=\"plus\"></clr-icon>\r\n                                {{ 'catalog.add-stock-location' | translate }}\r\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu>\r\n                                <button\r\n                                    vdrDropdownItem\r\n                                    *ngFor=\"let stockLocation of unusedStockLocations\"\r\n                                    (click)=\"addStockLocation(stockLocation)\"\r\n                                >\r\n                                    <clr-icon shape=\"map-marker\"></clr-icon> {{ stockLocation.name }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </div>\r\n                </ng-container>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, UntypedFormGroup } from '@angular/forms';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    CreateProductVariantInput,\n    createUpdatedTranslatable,\n    CurrencyCode,\n    DataService,\n    findTranslation,\n    GetProductVariantDetailDocument,\n    GetProductVariantDetailQuery,\n    GlobalFlag,\n    ItemOf,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    Permission,\n    ProductOptionFragment,\n    ProductVariantUpdateMutationDocument,\n    TypedBaseDetailComponent,\n    UpdateProductVariantInput,\n} from '@vendure/admin-ui/core';\nimport { pick } from '@vendure/common/lib/pick';\nimport { unique } from '@vendure/common/lib/unique';\nimport { combineLatest, concat, Observable } from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map,\n    mergeMap,\n    shareReplay,\n    skip,\n    switchMap,\n    switchMapTo,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\nimport { ApplyFacetDialogComponent } from '../apply-facet-dialog/apply-facet-dialog.component';\n\ninterface SelectedAssets {\n    assets?: Asset[];\n    featuredAsset?: Asset;\n}\n\ninterface VariantFormValue {\n    id: string;\n    enabled: boolean;\n    sku: string;\n    name: string;\n    taxCategoryId: string;\n    stockOnHand: number;\n    useGlobalOutOfStockThreshold: boolean;\n    outOfStockThreshold: number;\n    trackInventory: GlobalFlag;\n    facetValueIds: string[][];\n    customFields?: any;\n}\ntype T = NonNullable<GetProductVariantDetailQuery['productVariant']>;\ntype T1 = T['stockLevels'];\n@Component({\n    selector: 'vdr-product-variant-detail',\n    templateUrl: './product-variant-detail.component.html',\n    styleUrls: ['./product-variant-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantDetailComponent\n    extends TypedBaseDetailComponent<typeof GetProductVariantDetailDocument, 'productVariant'>\n    implements OnInit, OnDestroy\n{\n    public readonly updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    readonly customFields = this.getCustomFieldConfig('ProductVariant');\n    readonly customOptionFields = this.getCustomFieldConfig('ProductOption');\n    stockLevels$: Observable<NonNullable<GetProductVariantDetailQuery['productVariant']>['stockLevels']>;\n    detailForm = this.formBuilder.group<VariantFormValue>({\n        id: '',\n        enabled: false,\n        sku: '',\n        name: '',\n        taxCategoryId: '',\n        stockOnHand: 0,\n        useGlobalOutOfStockThreshold: true,\n        outOfStockThreshold: 0,\n        trackInventory: GlobalFlag.TRUE,\n        facetValueIds: [],\n        customFields: this.formBuilder.group(\n            this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n        ),\n    });\n    stockLevelsForm = this.formBuilder.array<\n        FormGroup<{\n            stockLocationId: FormControl<string | null>;\n            stockLocationName: FormControl<string | null>;\n            stockOnHand: FormControl<number | null>;\n            stockAllocated: FormControl<number | null>;\n        }>\n    >([]);\n    pricesForm = this.formBuilder.array<\n        FormGroup<{\n            price: FormControl<number | null>;\n            currencyCode: FormControl<CurrencyCode | null>;\n            delete: FormControl<boolean | null>;\n        }>\n    >([]);\n    assetChanges: SelectedAssets = {};\n    taxCategories$: Observable<Array<ItemOf<GetProductVariantDetailQuery, 'taxCategories'>>>;\n    unusedStockLocation$: Observable<Array<ItemOf<GetProductVariantDetailQuery, 'stockLocations'>>>;\n    unusedCurrencyCodes$: Observable<string[]>;\n    channelPriceIncludesTax$: Observable<boolean>;\n    readonly GlobalFlag = GlobalFlag;\n    globalTrackInventory: boolean;\n    globalOutOfStockThreshold: number;\n    facetValues$: Observable<NonNullable<GetProductVariantDetailQuery['productVariant']>['facetValues']>;\n    channelDefaultCurrencyCode: CurrencyCode;\n\n    constructor(\n        private productDetailService: ProductDetailService,\n        private formBuilder: FormBuilder,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        protected dataService: DataService,\n        private changeDetector: ChangeDetectorRef,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.init();\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\n            this.globalTrackInventory = globalSettings.trackInventory;\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\n            this.changeDetector.markForCheck();\n        });\n        this.taxCategories$ = this.result$.pipe(map(data => data.taxCategories.items));\n        const availableCurrencyCodes$ = this.result$.pipe(\n            tap(data => (this.channelDefaultCurrencyCode = data.activeChannel.defaultCurrencyCode)),\n            map(data => data.activeChannel.availableCurrencyCodes),\n        );\n        this.unusedCurrencyCodes$ = combineLatest(this.pricesForm.valueChanges, availableCurrencyCodes$).pipe(\n            map(([prices, currencyCodes]) =>\n                currencyCodes.filter(code => !prices.map(p => p.currencyCode).includes(code)),\n            ),\n        );\n        const stockLocations$ = this.result$.pipe(map(data => data.stockLocations.items));\n        this.unusedStockLocation$ = combineLatest(this.entity$, stockLocations$).pipe(\n            map(([entity, stockLocations]) => {\n                const usedIds = entity.stockLevels.map(l => l.stockLocation.id);\n                return stockLocations.filter(l => !usedIds.includes(l.id));\n            }),\n        );\n        this.channelPriceIncludesTax$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\n            .pipe(shareReplay(1));\n        this.stockLevels$ = this.entity$.pipe(map(entity => entity?.stockLevels ?? []));\n        const facetValues$ = this.entity$.pipe(map(variant => variant.facetValues ?? []));\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const formFacetValueIdChanges$ = this.detailForm.get('facetValueIds')!.valueChanges.pipe(\n            skip(1),\n            distinctUntilChanged(),\n            switchMap(ids =>\n                this.dataService.facet\n                    .getFacetValues({ filter: { id: { in: ids } } })\n                    .mapSingle(({ facetValues }) => facetValues.items),\n            ),\n            shareReplay(1),\n        );\n        this.facetValues$ = concat(\n            facetValues$.pipe(take(1)),\n            facetValues$.pipe(switchMapTo(formFacetValueIdChanges$)),\n        );\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    addPriceInCurrency(currencyCode: CurrencyCode) {\n        this.pricesForm.push(\n            this.formBuilder.group({\n                currencyCode,\n                price: 0,\n                delete: false as boolean,\n            }),\n        );\n    }\n\n    toggleDeletePrice(deleteFormControl: FormControl) {\n        deleteFormControl.setValue(!deleteFormControl.value);\n        deleteFormControl.markAsDirty();\n    }\n\n    addStockLocation(stockLocation: ItemOf<GetProductVariantDetailQuery, 'stockLocations'>) {\n        this.stockLevelsForm.push(\n            this.formBuilder.group({\n                stockLocationId: stockLocation.id,\n                stockLocationName: stockLocation.name,\n                stockOnHand: 0,\n                stockAllocated: 0,\n            }),\n        );\n    }\n\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([variant, languageCode]) => {\n                    const formValue = this.detailForm.value;\n                    const input = pick(\n                        this.getUpdatedVariant(\n                            variant,\n                            this.detailForm,\n                            languageCode,\n                        ) as UpdateProductVariantInput,\n                        [\n                            'id',\n                            'enabled',\n                            'translations',\n                            'sku',\n                            'taxCategoryId',\n                            'facetValueIds',\n                            'featuredAssetId',\n                            'assetIds',\n                            'trackInventory',\n                            'outOfStockThreshold',\n                            'useGlobalOutOfStockThreshold',\n                            'customFields',\n                        ],\n                    ) as UpdateProductVariantInput;\n                    if (this.stockLevelsForm.dirty) {\n                        input.stockLevels = this.stockLevelsForm.controls\n                            .filter(control => control.dirty)\n                            .map(control => ({\n                                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                                stockLocationId: control.value.stockLocationId!,\n                                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                                stockOnHand: control.value.stockOnHand!,\n                            }));\n                    }\n                    if (this.pricesForm.dirty) {\n                        input.prices = this.pricesForm.controls\n                            .filter(control => control.dirty)\n                            .map(control => ({\n                                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                                price: control.value.price!,\n                                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                                currencyCode: control.value.currencyCode!,\n                                delete: control.value.delete === true,\n                            }));\n                    }\n                    return this.dataService.mutate(ProductVariantUpdateMutationDocument, {\n                        input: [input],\n                    });\n                }),\n            )\n            .subscribe(\n                result => {\n                    this.detailForm.markAsPristine();\n                    this.stockLevelsForm.markAsPristine();\n                    this.pricesForm.markAsPristine();\n                    this.assetChanges = {};\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'ProductVariant',\n                    });\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'ProductVariant',\n                    });\n                },\n            );\n    }\n\n    assetsChanged(): boolean {\n        return !!Object.values(this.assetChanges).length;\n    }\n\n    inventoryIsNotTracked(formGroup: UntypedFormGroup): boolean {\n        const trackInventory = formGroup.get('trackInventory')?.value;\n        return (\n            trackInventory === GlobalFlag.FALSE ||\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false)\n        );\n    }\n\n    optionGroupCode(optionGroupId: string): string | undefined {\n        const group = this.entity?.product.optionGroups.find(g => g.id === optionGroupId);\n        return group?.code;\n    }\n\n    optionName(option: ProductOptionFragment) {\n        const translation =\n            option.translations.find(t => t.languageCode === this.languageCode) ?? option.translations[0];\n        return translation.name;\n    }\n\n    removeFacetValue(facetValueId: string) {\n        const productGroup = this.detailForm;\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\n        productGroup.patchValue({\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\n        });\n        productGroup.markAsDirty();\n    }\n\n    selectFacetValue() {\n        this.displayFacetValueModal().subscribe(facetValueIds => {\n            if (facetValueIds) {\n                const currentFacetValueIds = this.detailForm.value.facetValueIds ?? [];\n                this.detailForm.patchValue({\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\n                });\n                this.detailForm.markAsDirty();\n            }\n        });\n    }\n\n    private displayFacetValueModal(): Observable<string[] | undefined> {\n        return this.modalService\n            .fromComponent(ApplyFacetDialogComponent, {\n                size: 'md',\n                closable: true,\n            })\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\n    }\n\n    protected setFormValues(\n        variant: NonNullable<GetProductVariantDetailQuery['productVariant']>,\n        languageCode: LanguageCode,\n    ): void {\n        const variantTranslation = findTranslation(variant, languageCode);\n        const facetValueIds = variant.facetValues.map(fv => fv.id);\n        this.detailForm.patchValue({\n            id: variant.id,\n            enabled: variant.enabled,\n            sku: variant.sku,\n            name: variantTranslation ? variantTranslation.name : '',\n            taxCategoryId: variant.taxCategory.id,\n            stockOnHand: variant.stockLevels[0]?.stockOnHand ?? 0,\n            useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\n            outOfStockThreshold: variant.outOfStockThreshold,\n            trackInventory: variant.trackInventory,\n            facetValueIds,\n        });\n        this.stockLevelsForm.clear();\n        for (const stockLevel of variant.stockLevels) {\n            this.stockLevelsForm.push(\n                this.formBuilder.group({\n                    stockLocationId: stockLevel.stockLocation.id,\n                    stockLocationName: stockLevel.stockLocation.name,\n                    stockOnHand: stockLevel.stockOnHand,\n                    stockAllocated: stockLevel.stockAllocated,\n                }),\n            );\n        }\n        this.pricesForm.clear();\n        for (const price of variant.prices) {\n            this.pricesForm.push(\n                this.formBuilder.group({\n                    price: price.price,\n                    currencyCode: price.currencyCode,\n                    delete: false as boolean,\n                }),\n            );\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(\n                this.customFields,\n                this.detailForm.get('customFields'),\n                variant,\n                variantTranslation,\n            );\n        }\n    }\n\n    /**\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\n     * can then be persisted to the API.\n     */\n    private getUpdatedVariant(\n        variant: NonNullable<GetProductVariantDetailQuery['productVariant']>,\n        variantFormGroup: typeof this.detailForm,\n        languageCode: LanguageCode,\n    ): UpdateProductVariantInput | CreateProductVariantInput {\n        const updatedProduct = createUpdatedTranslatable({\n            translatable: variant,\n            updatedFields: variantFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: variant.name || '',\n            },\n        });\n        return {\n            ...updatedProduct,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            facetValueIds: variantFormGroup.value.facetValueIds,\n        } as UpdateProductVariantInput | CreateProductVariantInput;\n    }\n}\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BulkAction,\r\n    DataService,\r\n    DeletionResult,\r\n    GetProductVariantListQuery,\r\n    ItemOf,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    createBulkRemoveFromChannelAction,\r\n    isMultiChannel,\r\n} from '@vendure/admin-ui/core';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { ProductVariant } from 'package/core';\r\nimport { AssignProductsToChannelDialogComponent } from '../assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\r\nimport { ProductVariantListComponent } from './product-variant-list.component';\r\n\r\nexport const assignProductVariantsToChannelBulkAction: BulkAction<\r\n    ItemOf<GetProductVariantListQuery, 'productVariants'>,\r\n    ProductVariantListComponent\r\n> = {\r\n    location: 'product-variant-list',\r\n    label: _('catalog.assign-to-channel'),\r\n    icon: 'layers',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\r\n    onClick: ({ injector, selection, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n                size: 'lg',\r\n                locals: {\r\n                    productVariantIds: unique(selection.map(p => p.id)),\r\n                    currentChannelIds: [],\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    clearSelection();\r\n                }\r\n            });\r\n    },\r\n};\r\n\r\nexport const removeProductVariantsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetProductVariantListQuery, 'productVariants'>\r\n>({\r\n    location: 'product-variant-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, ids, channelId) =>\r\n        dataService.product\r\n            .removeVariantsFromChannel({\r\n                channelId: channelId,\r\n                productVariantIds: ids,\r\n            })\r\n            .pipe(map(res => res.removeProductVariantsFromChannel)),\r\n});\r\n\r\nexport const deleteProductVariantsBulkAction: BulkAction<ProductVariant, ProductVariantListComponent> = {\r\n    location: 'product-variant-list',\r\n    label: _('common.delete'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteProduct) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .dialog({\r\n                title: _('common.confirm-bulk-delete'),\r\n                translationVars: {\r\n                    count: selection.length,\r\n                },\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response\r\n                        ? dataService.product.deleteProductVariants(unique(selection.map(p => p.id)))\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(result => {\r\n                let deleted = 0;\r\n                const errors: string[] = [];\r\n                for (const item of result.deleteProductVariants) {\r\n                    if (item.result === DeletionResult.DELETED) {\r\n                        deleted++;\r\n                    } else if (item.message) {\r\n                        errors.push(item.message);\r\n                    }\r\n                }\r\n                if (0 < deleted) {\r\n                    notificationService.success(_('catalog.notify-bulk-delete-products-success'), {\r\n                        count: deleted,\r\n                    });\r\n                }\r\n                if (0 < errors.length) {\r\n                    notificationService.error(errors.join('\\n'));\r\n                }\r\n                hostComponent.refresh();\r\n                clearSelection();\r\n            });\r\n    },\r\n};\r\n","<table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>{{ 'common.name' | translate }}</th>\r\n            <th>{{ 'catalog.sku' | translate }}</th>\r\n            <ng-container *ngFor=\"let optionGroup of optionGroups | sort: 'id'\">\r\n                <th>{{ optionGroup.name }}</th>\r\n            </ng-container>\r\n            <th>{{ 'catalog.price' | translate }}</th>\r\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\r\n            <th>{{ 'common.enabled' | translate }}</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\">\r\n            <ng-container *ngIf=\"formGroupMap.get(variant.id) as formGroup\" [formGroup]=\"formGroup\">\r\n                <td class=\"left align-middle\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\r\n                    <div class=\"card-img\">\r\n                        <div class=\"featured-asset\">\r\n                            <img\r\n                                *ngIf=\"getFeaturedAsset(variant) as featuredAsset; else placeholder\"\r\n                                [src]=\"featuredAsset | assetPreview: 'tiny'\"\r\n                            />\r\n                            <ng-template #placeholder>\r\n                                <div class=\"placeholder\">\r\n                                    <clr-icon shape=\"image\" size=\"48\"></clr-icon>\r\n                                </div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td class=\"left align-middle\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\r\n                    <clr-input-container>\r\n                        <input\r\n                            clrInput\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            [placeholder]=\"'common.name' | translate\"\r\n                        />\r\n                    </clr-input-container>\r\n                </td>\r\n                <td class=\"left align-middle\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\r\n                    <clr-input-container>\r\n                        <input\r\n                            clrInput\r\n                            type=\"text\"\r\n                            formControlName=\"sku\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            [placeholder]=\"'catalog.sku' | translate\"\r\n                        />\r\n                    </clr-input-container>\r\n                </td>\r\n                <ng-container *ngFor=\"let option of variant.options | sort: 'groupId'\">\r\n                    <td\r\n                        class=\"left align-middle\"\r\n                        [class.disabled]=\"!formGroup.get('enabled')!.value\"\r\n                        [style.color]=\"optionGroupName(option.groupId) | stringToColor\"\r\n                    >\r\n                        {{ option.name }}\r\n                    </td>\r\n                </ng-container>\r\n                <td class=\"left align-middle price\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\r\n                    <clr-input-container>\r\n                        <vdr-currency-input\r\n                            *ngIf=\"!channelPriceIncludesTax\"\r\n                            clrInput\r\n                            [currencyCode]=\"variant.currencyCode\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"price\"\r\n                        ></vdr-currency-input>\r\n                        <vdr-currency-input\r\n                            *ngIf=\"channelPriceIncludesTax\"\r\n                            clrInput\r\n                            [currencyCode]=\"variant.currencyCode\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"priceWithTax\"\r\n                        ></vdr-currency-input>\r\n                    </clr-input-container>\r\n                </td>\r\n                <td class=\"left align-middle stock\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\r\n                    <clr-input-container>\r\n                        <input\r\n                            clrInput\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            step=\"1\"\r\n                            formControlName=\"stockOnHand\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </clr-input-container>\r\n                </td>\r\n                <td class=\"left align-middle stock\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            name=\"enabled\"\r\n                            formControlName=\"enabled\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </clr-toggle-wrapper>\r\n                </td>\r\n            </ng-container>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormGroup } from '@angular/forms';\r\nimport { Asset, Permission, ProductDetailFragment, ProductVariantFragment } from '@vendure/admin-ui/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\ninterface SelectedAssets {\r\n    assets?: Asset[];\r\n    featuredAsset?: Asset;\r\n}\r\n\r\ninterface PaginationConfig {\r\n    totalItems: number;\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-product-variants-table',\r\n    templateUrl: './product-variants-table.component.html',\r\n    styleUrls: ['./product-variants-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductVariantsTableComponent implements OnInit, OnDestroy {\r\n    @Input('productVariantsFormArray') formArray: UntypedFormArray;\r\n    @Input() variants: ProductVariantFragment[];\r\n    @Input() paginationConfig: PaginationConfig;\r\n    @Input() channelPriceIncludesTax: boolean;\r\n    @Input() optionGroups: ProductDetailFragment['optionGroups'];\r\n    @Input() pendingAssetChanges: { [variantId: string]: SelectedAssets };\r\n    formGroupMap = new Map<string, UntypedFormGroup>();\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n    private subscription: Subscription;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.formArray.valueChanges\r\n            .pipe(\r\n                map(value => value.length),\r\n                debounceTime(1),\r\n                distinctUntilChanged(),\r\n            )\r\n            .subscribe(() => {\r\n                this.buildFormGroupMap();\r\n            });\r\n\r\n        this.buildFormGroupMap();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    trackByFn(index: number, item: any) {\r\n        if ((item as any).id != null) {\r\n            return (item as any).id;\r\n        } else {\r\n            return index;\r\n        }\r\n    }\r\n\r\n    getFeaturedAsset(variant: ProductVariantFragment) {\r\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\r\n    }\r\n\r\n    optionGroupName(optionGroupId: string): string | undefined {\r\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\r\n        return group && group.name;\r\n    }\r\n\r\n    private buildFormGroupMap() {\r\n        this.formGroupMap.clear();\r\n        for (const controlGroup of this.formArray.controls) {\r\n            this.formGroupMap.set(controlGroup.value.id, controlGroup as UntypedFormGroup);\r\n        }\r\n        this.changeDetector.markForCheck();\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"stock-location-detail\"></vdr-action-bar-items>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n                    *vdrIfPermissions=\"'UpdateStockLocation'\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!('UpdateStockLocation' | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        class=\"form-grid-span\"\r\n                        [label]=\"'common.description' | translate\"\r\n                        for=\"slug\"\r\n                        [errors]=\"{ pattern: 'catalog.slug-pattern-error' | translate }\"\r\n                    >\r\n                        <vdr-rich-text-editor\r\n                            formControlName=\"description\"\r\n                            [readonly]=\"!('UpdateStockLocation' | hasPermission)\"\r\n                        ></vdr-rich-text-editor>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"StockLocation\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"stock-location-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    CreateStockLocationDocument,\n    CreateStockLocationInput,\n    DataService,\n    GetStockLocationDetailDocument,\n    NotificationService,\n    StockLocationDetailFragment,\n    TypedBaseDetailComponent,\n    UpdateStockLocationDocument,\n    UpdateStockLocationInput,\n} from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { mergeMap, take } from 'rxjs/operators';\n\nconst STOCK_LOCATION_DETAIL_FRAGMENT = gql`\n    fragment StockLocationDetail on StockLocation {\n        id\n        createdAt\n        updatedAt\n        name\n        description\n    }\n`;\n\nexport const GET_STOCK_LOCATION_DETAIL = gql`\n    query GetStockLocationDetail($id: ID!) {\n        stockLocation(id: $id) {\n            ...StockLocationDetail\n        }\n    }\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\n`;\n\nexport const CREATE_STOCK_LOCATION = gql`\n    mutation CreateStockLocation($input: CreateStockLocationInput!) {\n        createStockLocation(input: $input) {\n            ...StockLocationDetail\n        }\n    }\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\n`;\n\nexport const UPDATE_STOCK_LOCATION = gql`\n    mutation UpdateStockLocation($input: UpdateStockLocationInput!) {\n        updateStockLocation(input: $input) {\n            ...StockLocationDetail\n        }\n    }\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\n`;\n\n@Component({\n    selector: 'vdr-stock-location-detail',\n    templateUrl: './stock-location-detail.component.html',\n    styleUrls: ['./stock-location-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockLocationDetailComponent\n    extends TypedBaseDetailComponent<typeof GetStockLocationDetailDocument, 'stockLocation'>\n    implements OnInit, OnDestroy\n{\n    customFields = this.getCustomFieldConfig('StockLocation');\n    detailForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: [''],\n        customFields: this.formBuilder.group(\n            this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n        ),\n    });\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { name, description, customFields } = this.detailForm.value;\n        if (!name) {\n            return;\n        }\n        const input = {\n            name,\n            description,\n            customFields,\n        } satisfies CreateStockLocationInput;\n        this.dataService.mutate(CreateStockLocationDocument, { input }).subscribe(\n            data => {\n                this.notificationService.success(_('common.notify-create-success'), {\n                    entity: 'StockLocation',\n                });\n                this.detailForm.markAsPristine();\n                this.changeDetector.markForCheck();\n                this.router.navigate(['../', data.createStockLocation.id], { relativeTo: this.route });\n            },\n            err => {\n                this.notificationService.error(_('common.notify-create-error'), {\n                    entity: 'StockLocation',\n                });\n            },\n        );\n    }\n\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(\n                take(1),\n                mergeMap(taxRate => {\n                    const input = {\n                        id: taxRate.id,\n                        name: formValue.name,\n                        description: formValue.description,\n                        customFields: formValue.customFields,\n                    } satisfies UpdateStockLocationInput;\n                    return this.dataService.mutate(UpdateStockLocationDocument, { input });\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'StockLocation',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'StockLocation',\n                    });\n                },\n            );\n    }\n\n    /**\n     * Update the form values when the entity changes.\n     */\n    protected setFormValues(entity: StockLocationDetailFragment): void {\n        this.detailForm.patchValue({\n            name: entity.name,\n            description: entity.description,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n}\n","import {\r\n    AssignStockLocationsToChannelDocument,\r\n    createBulkAssignToChannelAction,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    DeleteStockLocationsDocument,\r\n    DeletionResult,\r\n    GetStockLocationListQuery,\r\n    ItemOf,\r\n    Permission,\r\n    RemoveStockLocationsFromChannelDocument,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst DELETE_STOCK_LOCATIONS = gql`\r\n    mutation DeleteStockLocations($input: [DeleteStockLocationInput!]!) {\r\n        deleteStockLocations(input: $input) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nconst ASSIGN_STOCK_LOCATIONS_TO_CHANNEL = gql`\r\n    mutation AssignStockLocationsToChannel($input: AssignStockLocationsToChannelInput!) {\r\n        assignStockLocationsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nconst REMOVE_STOCK_LOCATIONS_FROM_CHANNEL = gql`\r\n    mutation RemoveStockLocationsFromChannel($input: RemoveStockLocationsFromChannelInput!) {\r\n        removeStockLocationsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const deleteStockLocationsBulkAction = createBulkDeleteAction<\r\n    ItemOf<GetStockLocationListQuery, 'stockLocations'>\r\n>({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteStockLocation) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService\r\n            .mutate(DeleteStockLocationsDocument, {\r\n                input: ids.map(id => ({ id })),\r\n            })\r\n            .pipe(map(res => res.deleteStockLocations)),\r\n    shouldRetryItem: response => response.result === DeletionResult.NOT_DELETED,\r\n});\r\n\r\nexport const assignStockLocationsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetStockLocationListQuery, 'stockLocations'>\r\n>({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, stockLocationIds, channelId) =>\r\n        dataService\r\n            .mutate(AssignStockLocationsToChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    stockLocationIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.assignStockLocationsToChannel)),\r\n});\r\n\r\nexport const removeStockLocationsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetStockLocationListQuery, 'stockLocations'>\r\n>({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, stockLocationIds, channelId) =>\r\n        dataService\r\n            .mutate(RemoveStockLocationsFromChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    stockLocationIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.removeStockLocationsFromChannel)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"stock-location-list\"></vdr-action-bar-items>\r\n            <a\r\n                class=\"button primary\"\r\n                *vdrIfPermissions=\"['CreateStockLocation']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'catalog.create-new-stock-location' | translate }}\r\n            </a>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    id=\"stock-location-list\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"stock-location-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\" [sort]=\"sorts.get('id')\">\r\n        <ng-template let-stockLocation=\"item\">\r\n            {{ stockLocation.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-stockLocation=\"item\">\r\n            {{ stockLocation.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-stockLocation=\"item\">\r\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-stockLocation=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', stockLocation.id]\"\r\n                ><span>{{ stockLocation.name }}</span\r\n                ><clr-icon shape=\"arrow right\"\r\n            /></a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.description' | translate\" [sort]=\"sorts.get('description')\">\r\n        <ng-template let-stockLocation=\"item\">\r\n            <div class=\"description\" [innerHTML]=\"stockLocation.description\"></div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let field of customFields\"\r\n        [customField]=\"field\"\r\n        [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { GetStockLocationListDocument, TypedBaseListComponent } from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\n\r\nexport const GET_STOCK_LOCATION_LIST = gql`\r\n    query GetStockLocationList($options: StockLocationListOptions) {\r\n        stockLocations(options: $options) {\r\n            items {\r\n                ...StockLocationListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment StockLocationListItem on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-stock-location-list',\r\n    templateUrl: './stock-location-list.component.html',\r\n    styleUrls: ['./stock-location-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StockLocationListComponent\r\n    extends TypedBaseListComponent<typeof GetStockLocationListDocument, 'stockLocations'>\r\n    implements OnInit\r\n{\r\n    readonly customFields = this.getCustomFieldConfig('StockLocation');\r\n    readonly filters = this.createFilterCollection()\r\n        .addDateFilters()\r\n        .addFilters([\r\n            {\r\n                name: 'id',\r\n                type: { kind: 'text' },\r\n                label: _('common.id'),\r\n                filterField: 'id',\r\n            },\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'text' },\r\n                label: _('common.enabled'),\r\n                filterField: 'name',\r\n            },\r\n            {\r\n                name: 'sku',\r\n                type: { kind: 'text' },\r\n                label: _('catalog.sku'),\r\n                filterField: 'description',\r\n            },\r\n        ])\r\n        .addCustomFieldFilters(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    readonly sorts = this.createSortCollection()\r\n        .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'description' },\r\n        ])\r\n        .addCustomFieldSorts(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    constructor() {\r\n        super();\r\n        this.configure({\r\n            document: GetStockLocationListDocument,\r\n            getItems: data => data.stockLocations,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n}\r\n","<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\r\n<vdr-form-field [label]=\"'catalog.option-name' | translate\" for=\"name\">\r\n    <input\r\n        id=\"name\"\r\n        type=\"text\"\r\n        #nameInput=\"ngModel\"\r\n        [(ngModel)]=\"name\"\r\n        required\r\n        (input)=\"updateCode($event.target.value)\"\r\n    />\r\n</vdr-form-field>\r\n<vdr-form-field [label]=\"'common.code' | translate\" for=\"code\">\r\n    <input id=\"code\" type=\"text\" #codeInput=\"ngModel\" required [(ngModel)]=\"code\" pattern=\"[a-z0-9_-]+\" />\r\n</vdr-form-field>\r\n<clr-checkbox-wrapper>\r\n    <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"updateVariantName\" />\r\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\r\n</clr-checkbox-wrapper>\r\n<section *ngIf=\"customFields.length\">\r\n    <label>{{ 'common.custom-fields' | translate }}</label>\r\n    <vdr-tabbed-custom-fields\r\n        entityName=\"ProductOption\"\r\n        [customFields]=\"customFields\"\r\n        [customFieldsFormGroup]=\"customFieldsForm\"\r\n        [readonly]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\r\n    ></vdr-tabbed-custom-fields>\r\n</section>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button\r\n        type=\"submit\"\r\n        (click)=\"update()\"\r\n        [disabled]=\"\r\n            nameInput.invalid ||\r\n            codeInput.invalid ||\r\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\r\n        \"\r\n        class=\"btn btn-primary\"\r\n    >\r\n        {{ 'catalog.update-product-option' | translate }}\r\n    </button>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\r\nimport {\r\n    CustomFieldConfig,\r\n    LanguageCode,\r\n    ProductVariantFragment,\r\n    UpdateProductOptionInput,\r\n    createUpdatedTranslatable,\r\n    Dialog,\r\n} from '@vendure/admin-ui/core';\r\n\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\n\r\n@Component({\r\n    selector: 'vdr-update-product-option-dialog',\r\n    templateUrl: './update-product-option-dialog.component.html',\r\n    styleUrls: ['./update-product-option-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpdateProductOptionDialogComponent\r\n    implements Dialog<UpdateProductOptionInput & { autoUpdate: boolean }>, OnInit\r\n{\r\n    resolveWith: (result?: UpdateProductOptionInput & { autoUpdate: boolean }) => void;\r\n    updateVariantName = true;\r\n    // Provided by caller\r\n    productOption: ProductVariantFragment['options'][number];\r\n    activeLanguage: LanguageCode;\r\n    name: string;\r\n    code: string;\r\n    customFields: CustomFieldConfig[];\r\n    codeInputTouched = false;\r\n    customFieldsForm: UntypedFormGroup;\r\n\r\n    ngOnInit(): void {\r\n        const currentTranslation = this.productOption.translations.find(\r\n            t => t.languageCode === this.activeLanguage,\r\n        );\r\n        this.name = currentTranslation?.name ?? '';\r\n        this.code = this.productOption.code;\r\n        this.customFieldsForm = new UntypedFormGroup({});\r\n        if (this.customFields) {\r\n            const cfCurrentTranslation =\r\n                (currentTranslation && (currentTranslation as any).customFields) || {};\r\n\r\n            for (const fieldDef of this.customFields) {\r\n                const key = fieldDef.name;\r\n                const value =\r\n                    fieldDef.type === 'localeString'\r\n                        ? cfCurrentTranslation[key]\r\n                        : (this.productOption as any).customFields[key];\r\n                this.customFieldsForm.addControl(fieldDef.name, new UntypedFormControl(value));\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const result = createUpdatedTranslatable({\r\n            translatable: this.productOption,\r\n            languageCode: this.activeLanguage,\r\n            updatedFields: {\r\n                code: this.code,\r\n                name: this.name,\r\n                customFields: this.customFieldsForm.value,\r\n            },\r\n            customFieldConfig: this.customFields,\r\n            defaultTranslation: {\r\n                languageCode: this.activeLanguage,\r\n                name: '',\r\n            },\r\n        });\r\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    updateCode(nameValue: string) {\r\n        if (!this.codeInputTouched && !this.productOption.code) {\r\n            this.code = normalizeString(nameValue, '-');\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, ROUTES } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    AssetDetailQueryDocument,\r\n    BulkActionRegistryService,\r\n    CollectionDetailQueryDocument,\r\n    detailComponentWithResolver,\r\n    GetFacetDetailDocument,\r\n    GetProductDetailDocument,\r\n    GetProductVariantDetailDocument,\r\n    GetStockLocationDetailDocument,\r\n    PageService,\r\n    SharedModule,\r\n} from '@vendure/admin-ui/core';\r\n\r\nimport { createRoutes } from './catalog.routes';\r\nimport { ApplyFacetDialogComponent } from './components/apply-facet-dialog/apply-facet-dialog.component';\r\nimport { AssetDetailComponent } from './components/asset-detail/asset-detail.component';\r\nimport { AssetListComponent } from './components/asset-list/asset-list.component';\r\nimport { AssetsComponent } from './components/assets/assets.component';\r\nimport { AssignProductsToChannelDialogComponent } from './components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\r\nimport { BulkAddFacetValuesDialogComponent } from './components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component';\r\nimport { CollectionContentsComponent } from './components/collection-contents/collection-contents.component';\r\nimport { CollectionDataTableComponent } from './components/collection-data-table/collection-data-table.component';\r\nimport { CollectionDetailComponent } from './components/collection-detail/collection-detail.component';\r\nimport { CollectionBreadcrumbPipe } from './components/collection-list/collection-breadcrumb.pipe';\r\nimport {\r\n    assignCollectionsToChannelBulkAction,\r\n    deleteCollectionsBulkAction,\r\n    moveCollectionsBulkAction,\r\n    removeCollectionsFromChannelBulkAction,\r\n} from './components/collection-list/collection-list-bulk-actions';\r\nimport { CollectionListComponent } from './components/collection-list/collection-list.component';\r\nimport { CollectionTreeNodeComponent } from './components/collection-tree/collection-tree-node.component';\r\nimport { CollectionTreeComponent } from './components/collection-tree/collection-tree.component';\r\nimport { ConfirmVariantDeletionDialogComponent } from './components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component';\r\nimport { CreateProductOptionGroupDialogComponent } from './components/create-product-option-group-dialog/create-product-option-group-dialog.component';\r\nimport { CreateProductVariantDialogComponent } from './components/create-product-variant-dialog/create-product-variant-dialog.component';\r\nimport { FacetDetailComponent } from './components/facet-detail/facet-detail.component';\r\nimport {\r\n    assignFacetsToChannelBulkAction,\r\n    deleteFacetsBulkAction,\r\n    removeFacetsFromChannelBulkAction,\r\n} from './components/facet-list/facet-list-bulk-actions';\r\nimport { FacetListComponent } from './components/facet-list/facet-list.component';\r\nimport { GenerateProductVariantsComponent } from './components/generate-product-variants/generate-product-variants.component';\r\nimport { MoveCollectionsDialogComponent } from './components/move-collections-dialog/move-collections-dialog.component';\r\nimport { OptionValueInputComponent } from './components/option-value-input/option-value-input.component';\r\nimport { ProductDetailComponent } from './components/product-detail/product-detail.component';\r\nimport {\r\n    assignFacetValuesToProductsBulkAction,\r\n    assignProductsToChannelBulkAction,\r\n    deleteProductsBulkAction,\r\n    removeProductsFromChannelBulkAction,\r\n} from './components/product-list/product-list-bulk-actions';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { ProductOptionsEditorComponent } from './components/product-options-editor/product-options-editor.component';\r\nimport { ProductVariantDetailComponent } from './components/product-variant-detail/product-variant-detail.component';\r\nimport { ProductVariantListComponent } from './components/product-variant-list/product-variant-list.component';\r\nimport {\r\n    assignProductVariantsToChannelBulkAction,\r\n    removeProductVariantsFromChannelBulkAction,\r\n    deleteProductVariantsBulkAction,\r\n} from './components/product-variant-list/product-variant-list-bulk-actions';\r\nimport { ProductVariantQuickJumpComponent } from './components/product-variant-quick-jump/product-variant-quick-jump.component';\r\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\r\nimport { ProductVariantsTableComponent } from './components/product-variants-table/product-variants-table.component';\r\nimport { StockLocationDetailComponent } from './components/stock-location-detail/stock-location-detail.component';\r\nimport {\r\n    assignStockLocationsToChannelBulkAction,\r\n    deleteStockLocationsBulkAction,\r\n    removeStockLocationsFromChannelBulkAction,\r\n} from './components/stock-location-list/stock-location-list-bulk-actions';\r\nimport { StockLocationListComponent } from './components/stock-location-list/stock-location-list.component';\r\nimport { UpdateProductOptionDialogComponent } from './components/update-product-option-dialog/update-product-option-dialog.component';\r\nimport { VariantPriceDetailComponent } from './components/variant-price-detail/variant-price-detail.component';\r\n\r\nconst CATALOG_COMPONENTS = [\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    FacetListComponent,\r\n    FacetDetailComponent,\r\n    GenerateProductVariantsComponent,\r\n    ApplyFacetDialogComponent,\r\n    AssetListComponent,\r\n    AssetsComponent,\r\n    VariantPriceDetailComponent,\r\n    CollectionListComponent,\r\n    CollectionDetailComponent,\r\n    CollectionTreeComponent,\r\n    CollectionTreeNodeComponent,\r\n    CollectionContentsComponent,\r\n    ProductVariantsTableComponent,\r\n    OptionValueInputComponent,\r\n    UpdateProductOptionDialogComponent,\r\n    ProductVariantsEditorComponent,\r\n    AssignProductsToChannelDialogComponent,\r\n    AssetDetailComponent,\r\n    ConfirmVariantDeletionDialogComponent,\r\n    ProductOptionsEditorComponent,\r\n    BulkAddFacetValuesDialogComponent,\r\n    CollectionDataTableComponent,\r\n    CollectionBreadcrumbPipe,\r\n    MoveCollectionsDialogComponent,\r\n    ProductVariantListComponent,\r\n    ProductDetailComponent,\r\n    ProductVariantDetailComponent,\r\n    CreateProductVariantDialogComponent,\r\n    CreateProductOptionGroupDialogComponent,\r\n    ProductVariantQuickJumpComponent,\r\n    StockLocationListComponent,\r\n];\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild([])],\r\n    exports: [...CATALOG_COMPONENTS],\r\n    declarations: [...CATALOG_COMPONENTS, StockLocationDetailComponent],\r\n    providers: [\r\n        {\r\n            provide: ROUTES,\r\n            useFactory: (pageService: PageService) => createRoutes(pageService),\r\n            multi: true,\r\n            deps: [PageService],\r\n        },\r\n    ],\r\n})\r\nexport class CatalogModule {\r\n    constructor(\r\n        private bulkActionRegistryService: BulkActionRegistryService,\r\n        private pageService: PageService,\r\n    ) {\r\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignProductsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignProductVariantsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeProductsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeProductVariantsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteProductsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteProductVariantsBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(assignFacetsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeFacetsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteFacetsBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(moveCollectionsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignCollectionsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeCollectionsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteCollectionsBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(assignStockLocationsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeStockLocationsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteStockLocationsBulkAction);\r\n\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: _('catalog.products'),\r\n            route: '',\r\n            component: ProductListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-detail',\r\n            tab: _('catalog.product'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ProductDetailComponent,\r\n                query: GetProductDetailDocument,\r\n                entityKey: 'product',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('catalog.create-new-product'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: _('catalog.product-variants'),\r\n            route: 'variants',\r\n            component: ProductVariantListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'stock-location-detail',\r\n            tab: _('catalog.stock-location'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: StockLocationDetailComponent,\r\n                query: GetStockLocationDetailDocument,\r\n                entityKey: 'stockLocation',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('catalog.create-new-stock-location'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: _('catalog.stock-locations'),\r\n            route: 'stock-locations',\r\n            component: StockLocationListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-variant-detail',\r\n            tab: _('catalog.product-variants'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ProductVariantDetailComponent,\r\n                query: GetProductVariantDetailDocument,\r\n                entityKey: 'productVariant',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: `${entity?.product.name}`,\r\n                        link: ['/catalog', 'inventory', entity?.product.id],\r\n                    },\r\n                    {\r\n                        label: `${entity?.name} (${entity?.sku})`,\r\n                        link: ['variants', entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'facet-list',\r\n            tab: _('catalog.facets'),\r\n            route: '',\r\n            component: FacetListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'facet-detail',\r\n            tab: _('catalog.facet'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: FacetDetailComponent,\r\n                query: GetFacetDetailDocument,\r\n                entityKey: 'facet',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('catalog.create-new-facet'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'collection-list',\r\n            tab: _('catalog.collections'),\r\n            route: '',\r\n            component: CollectionListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'collection-detail',\r\n            tab: _('catalog.collection'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: CollectionDetailComponent,\r\n                query: CollectionDetailQueryDocument,\r\n                entityKey: 'collection',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('catalog.create-new-collection'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'asset-list',\r\n            tab: _('catalog.assets'),\r\n            route: '',\r\n            component: AssetListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'asset-detail',\r\n            tab: _('catalog.asset'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: AssetDetailComponent,\r\n                query: AssetDetailQueryDocument,\r\n                entityKey: 'asset',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: `${entity?.name}`,\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nconst PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT = gql`\r\n    fragment ProductListQueryProductFragment on Product {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        slug\r\n        featuredAsset {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            preview\r\n            focalPoint {\r\n                x\r\n                y\r\n            }\r\n        }\r\n        variantList {\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PRODUCT_LIST_QUERY = gql`\r\n    query ProductListQuery($options: ProductListOptions) {\r\n        products(options: $options) {\r\n            items {\r\n                ...ProductListQueryProductFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT}\r\n`;\r\n","import { ASSET_FRAGMENT, PRODUCT_OPTION_FRAGMENT } from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\n\r\nexport const PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT = gql`\r\n    fragment ProductVariantDetailQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        prices {\r\n            price\r\n            currencyCode\r\n        }\r\n        priceWithTax\r\n        stockOnHand\r\n        stockAllocated\r\n        trackInventory\r\n        outOfStockThreshold\r\n        useGlobalOutOfStockThreshold\r\n        taxRateApplied {\r\n            id\r\n            name\r\n            value\r\n        }\r\n        taxCategory {\r\n            id\r\n            name\r\n        }\r\n        sku\r\n        options {\r\n            ...ProductOption\r\n        }\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocationId\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        facetValues {\r\n            id\r\n            code\r\n            name\r\n            facet {\r\n                id\r\n                name\r\n            }\r\n        }\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        channels {\r\n            id\r\n            code\r\n        }\r\n        product {\r\n            id\r\n            name\r\n            optionGroups {\r\n                id\r\n                name\r\n                code\r\n                translations {\r\n                    id\r\n                    languageCode\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PRODUCT_VARIANT_DETAIL_QUERY = gql`\r\n    query GetProductVariantDetail($id: ID!) {\r\n        productVariant(id: $id) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n        stockLocations(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                description\r\n            }\r\n        }\r\n        taxCategories(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                isDefault\r\n            }\r\n            totalItems\r\n        }\r\n        activeChannel {\r\n            id\r\n            availableCurrencyCodes\r\n            defaultCurrencyCode\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n\r\nexport const PRODUCT_VARIANT_UPDATE_MUTATION = gql`\r\n    mutation ProductVariantUpdateMutation($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n","import { ASSET_FRAGMENT } from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\n\r\nconst PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT = gql`\r\n    fragment ProductVariantListQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        productId\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        priceWithTax\r\n        trackInventory\r\n        outOfStockThreshold\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockLocationId\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        useGlobalOutOfStockThreshold\r\n        sku\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n    }\r\n\r\n    ${ASSET_FRAGMENT}\r\n`;\r\n\r\nexport const PRODUCT_VARIANT_LIST_QUERY = gql`\r\n    query ProductVariantListQuery($options: ProductVariantListOptions!) {\r\n        productVariants(options: $options) {\r\n            items {\r\n                ...ProductVariantListQueryProductVariantFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n"],"x_google_ignoreList":[54]}