{"version":3,"file":"171.1e3eeab5e40c4da3.js","mappings":"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","names":["i0","_r11","ctx_r10","create","ctx_r0","saveButtonEnabled","_r14","ctx_r13","save","ctx_r12","PromotionDetailComponent_ng_template_12_button_0_Template","entity_r15","ctx_r5","customFields","detailForm","get","$event","_r19","ctx_r18","removeCondition","i_r17","condition_r16","ctx_r6","getConditionDefinition","condition_r21","_r23","$implicit","ctx_r22","addCondition","description","PromotionDetailComponent_vdr_dropdown_50_button_6_Template","ctx_r7","getAvailableConditions","_r27","ctx_r26","removeAction","i_r25","action_r24","ctx_r8","getActionDefinition","action_r29","_r31","ctx_r30","addAction","PromotionDetailComponent_vdr_dropdown_55_button_6_Template","ctx_r9","getAvailableActions","GET_PROMOTION_DETAIL","gql","PROMOTION_FRAGMENT","PromotionDetailComponent","TypedBaseDetailComponent","constructor","changeDetector","dataService","formBuilder","notificationService","super","this","getCustomFieldConfig","group","name","Validators","enabled","couponCode","perCustomerUsageLimit","startsAt","endsAt","conditions","array","actions","reduce","hash","field","allConditions","allActions","ngOnInit","init","promotion","getPromotionActionsAndConditions","single$","subscribe","data","promotionActions","promotionConditions","markForCheck","ngOnDestroy","destroy","filter","o","find","c","code","condition","a","action","dirty","valid","length","value","addOperation","markAsDirty","removeOperation","formArrayOf","key","input","getUpdatedPromotion","id","createdAt","updatedAt","translations","languageCode","createPromotion","__typename","success","_","entity","markAsPristine","router","navigate","relativeTo","route","error","message","err","combineLatest","entity$","languageCode$","pipe","take","mergeMap","paymentMethod","updatePromotion","formGroup","formValue","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","mapOperationsToInputs","setFormValues","currentTranslation","findTranslation","patchValue","forEach","setCustomFieldFormValues","operations","formValueOperations","map","i","arguments","Object","values","args","j","encodeConfigArgValue","operation","operationsArray","collection","findIndex","argsHash","output","arg","getConfigArgValue","getDefaultArgValue","push","control","argName","def","argDef","getDefaultConfigArgValue","Error","index","removeAt","splice","t","i1","i2","core","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","setLanguage","PromotionDetailComponent_button_10_Template","PromotionDetailComponent_ng_template_12_Template","PromotionDetailComponent_vdr_card_17_Template","PromotionDetailComponent_vdr_card_18_Template","PromotionDetailComponent_vdr_card_44_Template","PromotionDetailComponent_div_48_Template","PromotionDetailComponent_vdr_dropdown_50_Template","PromotionDetailComponent_div_53_Template","PromotionDetailComponent_vdr_dropdown_55_Template","isNew$","availableLanguages$","_r1","deletePromotionsBulkAction","createBulkDeleteAction","location","requiresPermission","Permission","getItemName","item","bulkDelete","ids","deletePromotions","res","assignPromotionsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","promotionIds","channelId","mutate","AssignPromotionsToChannelDocument","assignPromotionsToChannel","removePromotionsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","RemovePromotionsFromChannelDocument","removePromotionsFromChannel","_c0","promotion_r11","promotion_r12","promotion_r13","_c1","promotion_r14","PromotionListComponent_ng_template_31_vdr_chip_0_Template","PromotionListComponent_ng_template_31_vdr_chip_1_Template","promotion_r15","promotion_r18","promotion_r19","promotion_r20","promotion_r21","customField_r22","sorts","GET_PROMOTION_LIST","PromotionListComponent","TypedBaseListComponent","filters","createFilterCollection","addDateFilters","addFilters","type","kind","label","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSorts","addCustomFieldSorts","configure","document","GetPromotionListDocument","getItems","promotions","setVariables","skip","createQueryOptions","searchTermControl","refreshListOnChanges","valueChanges","searchTerm","createFilterInput","sort","createSortInput","filterOperator","LogicalOperator","contains","options","PromotionListComponent_a_8_Template","setPageNumber","setItemsPerPage","PromotionListComponent_ng_template_19_Template","PromotionListComponent_ng_template_22_Template","PromotionListComponent_ng_template_25_Template","PromotionListComponent_ng_template_28_Template","PromotionListComponent_ng_template_31_Template","PromotionListComponent_ng_template_34_Template","PromotionListComponent_ng_template_37_Template","PromotionListComponent_ng_template_40_Template","PromotionListComponent_ng_template_43_Template","PromotionListComponent_vdr_dt2_custom_field_column_44_Template","contentLanguage$","items$","itemsPerPage$","totalItems$","currentPage$","selectionManager","createRoutes","pageService","path","component","PageComponent","locationId","breadcrumb","children","getPageTabRoutes","link","promotionBreadcrumb","params","detailBreadcrumb","breadcrumbKey","getName","MarketingModule","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","query","GetPromotionDetailDocument","entityKey","getBreadcrumbs","oAB","cJS","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./src/lib/marketing/src/components/promotion-detail/promotion-detail.component.html","./src/lib/marketing/src/components/promotion-detail/promotion-detail.component.ts","./src/lib/marketing/src/components/promotion-list/promotion-list-bulk-actions.ts","./src/lib/marketing/src/components/promotion-list/promotion-list.component.html","./src/lib/marketing/src/components/promotion-list/promotion-list.component.ts","./src/lib/marketing/src/marketing.routes.ts","./src/lib/marketing/src/marketing.module.ts"],"sourcesContent":["<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <div class=\"flex clr-align-items-center\">\r\n                <vdr-language-selector\r\n                    [disabled]=\"isNew$ | async\"\r\n                    [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                    [currentLanguageCode]=\"languageCode$ | async\"\r\n                    (languageCodeChange)=\"setLanguage($event)\"\r\n                ></vdr-language-selector>\r\n            </div>\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"promotion-detail\"></vdr-action-bar-items>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"'UpdatePromotion'\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *vdrIfPermissions=\"'UpdatePromotion'\">\r\n                <clr-toggle-wrapper>\r\n                    <input type=\"checkbox\" clrToggle name=\"enabled\" formControlName=\"enabled\" />\r\n                    <label>{{ 'common.enabled' | translate }}</label>\r\n                </clr-toggle-wrapper>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-rich-text-editor\r\n                        class=\"form-grid-span\"\r\n                        formControlName=\"description\"\r\n                        [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                        [label]=\"'common.description' | translate\"\r\n                    ></vdr-rich-text-editor>\r\n                    <vdr-form-field [label]=\"'marketing.starts-at' | translate\" for=\"startsAt\">\r\n                        <vdr-datetime-picker formControlName=\"startsAt\"></vdr-datetime-picker>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'marketing.ends-at' | translate\" for=\"endsAt\">\r\n                        <vdr-datetime-picker formControlName=\"endsAt\"></vdr-datetime-picker>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'marketing.coupon-code' | translate\" for=\"couponCode\">\r\n                        <input\r\n                            id=\"couponCode\"\r\n                            [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                            type=\"text\"\r\n                            formControlName=\"couponCode\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'marketing.per-customer-limit' | translate\"\r\n                        for=\"perCustomerUsageLimit\"\r\n                    >\r\n                        <input\r\n                            id=\"perCustomerUsageLimit\"\r\n                            [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"999\"\r\n                            formControlName=\"perCustomerUsageLimit\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                [title]=\"'common.custom-fields' | translate\"\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Promotion\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                    [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"promotion-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n\r\n            <vdr-card [title]=\"'marketing.conditions' | translate\" formArrayName=\"conditions\">\r\n                <div *ngFor=\"let condition of conditions; index as i\">\r\n                    <vdr-configurable-input\r\n                        (remove)=\"removeCondition($event)\"\r\n                        [position]=\"i\"\r\n                        [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                        [operation]=\"condition\"\r\n                        [operationDefinition]=\"getConditionDefinition(condition)\"\r\n                        [formControlName]=\"i\"\r\n                    ></vdr-configurable-input>\r\n                </div>\r\n                <div>\r\n                    <vdr-dropdown *vdrIfPermissions=\"'UpdatePromotion'\">\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'marketing.add-condition' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let condition of getAvailableConditions()\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                class=\"item-wrap\"\r\n                                (click)=\"addCondition(condition)\"\r\n                            >\r\n                                {{ condition.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'marketing.actions' | translate\" formArrayName=\"actions\">\r\n                <div *ngFor=\"let action of actions; index as i\">\r\n                    <vdr-configurable-input\r\n                        (remove)=\"removeAction($event)\"\r\n                        [position]=\"i\"\r\n                        [operation]=\"action\"\r\n                        [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                        [operationDefinition]=\"getActionDefinition(action)\"\r\n                        [formControlName]=\"i\"\r\n                    ></vdr-configurable-input>\r\n                </div>\r\n                <div>\r\n                    <vdr-dropdown *vdrIfPermissions=\"'UpdatePromotion'\">\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'marketing.add-action' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let action of getAvailableActions()\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                class=\"item-wrap\"\r\n                                (click)=\"addAction(action)\"\r\n                            >\r\n                                {{ action.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, UntypedFormArray, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    ConfigurableOperationInput,\r\n    CreatePromotionInput,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    encodeConfigArgValue,\r\n    findTranslation,\r\n    getConfigArgValue,\r\n    getDefaultConfigArgValue,\r\n    GetPromotionDetailDocument,\r\n    LanguageCode,\r\n    NotificationService,\r\n    PROMOTION_FRAGMENT,\r\n    PromotionFragment,\r\n    TypedBaseDetailComponent,\r\n    UpdatePromotionInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_PROMOTION_DETAIL = gql`\r\n    query GetPromotionDetail($id: ID!) {\r\n        promotion(id: $id) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-promotion-detail',\r\n    templateUrl: './promotion-detail.component.html',\r\n    styleUrls: ['./promotion-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PromotionDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetPromotionDetailDocument, 'promotion'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Promotion');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        description: '',\r\n        enabled: true,\r\n        couponCode: null as string | null,\r\n        perCustomerUsageLimit: null as number | null,\r\n        startsAt: null,\r\n        endsAt: null,\r\n        conditions: this.formBuilder.array([]),\r\n        actions: this.formBuilder.array([]),\r\n        customFields: this.formBuilder.group(\r\n            this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n        ),\r\n    });\r\n    conditions: ConfigurableOperation[] = [];\r\n    actions: ConfigurableOperation[] = [];\r\n\r\n    private allConditions: ConfigurableOperationDefinition[] = [];\r\n    private allActions: ConfigurableOperationDefinition[] = [];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('Promotion');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.promotion.getPromotionActionsAndConditions().single$.subscribe(data => {\r\n            this.allActions = data.promotionActions;\r\n            this.allConditions = data.promotionConditions;\r\n            this.changeDetector.markForCheck();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    getAvailableConditions(): ConfigurableOperationDefinition[] {\r\n        return this.allConditions.filter(o => !this.conditions.find(c => c.code === o.code));\r\n    }\r\n\r\n    getConditionDefinition(condition: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\r\n        return this.allConditions.find(c => c.code === condition.code);\r\n    }\r\n\r\n    getAvailableActions(): ConfigurableOperationDefinition[] {\r\n        return this.allActions.filter(o => !this.actions.find(a => a.code === o.code));\r\n    }\r\n\r\n    getActionDefinition(action: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\r\n        return this.allActions.find(c => c.code === action.code);\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return !!(\r\n            this.detailForm.dirty &&\r\n            this.detailForm.valid &&\r\n            (this.conditions.length !== 0 || this.detailForm.value.couponCode) &&\r\n            this.actions.length !== 0\r\n        );\r\n    }\r\n\r\n    addCondition(condition: ConfigurableOperation) {\r\n        this.addOperation('conditions', condition);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    addAction(action: ConfigurableOperation) {\r\n        this.addOperation('actions', action);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeCondition(condition: ConfigurableOperation) {\r\n        this.removeOperation('conditions', condition);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeAction(action: ConfigurableOperation) {\r\n        this.removeOperation('actions', action);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    formArrayOf(key: 'conditions' | 'actions'): UntypedFormArray {\r\n        return this.detailForm.get(key) as UntypedFormArray;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n\r\n        const input = this.getUpdatedPromotion(\r\n            {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                startsAt: '',\r\n                endsAt: '',\r\n                name: '',\r\n                description: '',\r\n                couponCode: null,\r\n                perCustomerUsageLimit: null,\r\n                enabled: false,\r\n                conditions: [],\r\n                actions: [],\r\n                translations: [],\r\n            },\r\n            this.detailForm,\r\n            this.languageCode,\r\n        ) as CreatePromotionInput;\r\n        this.dataService.promotion.createPromotion(input).subscribe(\r\n            ({ createPromotion }) => {\r\n                switch (createPromotion.__typename) {\r\n                    case 'Promotion':\r\n                        this.notificationService.success(_('common.notify-create-success'), {\r\n                            entity: 'Promotion',\r\n                        });\r\n                        this.detailForm.markAsPristine();\r\n                        this.changeDetector.markForCheck();\r\n                        this.router.navigate(['../', createPromotion.id], { relativeTo: this.route });\r\n                        break;\r\n                    case 'MissingConditionsError':\r\n                        this.notificationService.error(createPromotion.message);\r\n                        break;\r\n                }\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Promotion',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([paymentMethod, languageCode]) => {\r\n                    const input = this.getUpdatedPromotion(\r\n                        paymentMethod,\r\n                        this.detailForm,\r\n                        languageCode,\r\n                    ) as UpdatePromotionInput;\r\n                    return this.dataService.promotion.updatePromotion(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Promotion',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Promotion',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedPromotion(\r\n        promotion: PromotionFragment,\r\n        formGroup: UntypedFormGroup,\r\n        languageCode: LanguageCode,\r\n    ): UpdatePromotionInput | CreatePromotionInput {\r\n        const formValue = formGroup.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: promotion,\r\n            updatedFields: formValue,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: promotion.name || '',\r\n                description: promotion.description || '',\r\n            },\r\n        });\r\n\r\n        return {\r\n            ...input,\r\n            conditions: this.mapOperationsToInputs(this.conditions, formValue.conditions),\r\n            actions: this.mapOperationsToInputs(this.actions, formValue.actions),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: PromotionFragment, languageCode: LanguageCode): void {\r\n        const currentTranslation = findTranslation(entity, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name,\r\n            description: currentTranslation?.description,\r\n            enabled: entity.enabled,\r\n            couponCode: entity.couponCode,\r\n            perCustomerUsageLimit: entity.perCustomerUsageLimit,\r\n            startsAt: entity.startsAt,\r\n            endsAt: entity.endsAt,\r\n        });\r\n        entity.conditions.forEach(o => {\r\n            this.addOperation('conditions', o);\r\n        });\r\n        entity.actions.forEach(o => this.addOperation('actions', o));\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    private mapOperationsToInputs(\r\n        operations: ConfigurableOperation[],\r\n        formValueOperations: any,\r\n    ): ConfigurableOperationInput[] {\r\n        return operations.map((o, i) => ({\r\n            code: o.code,\r\n            arguments: Object.values<any>(formValueOperations[i].args).map((value, j) => ({\r\n                name: o.args[j].name,\r\n                value: encodeConfigArgValue(value),\r\n            })),\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Adds a new condition or action to the promotion.\r\n     */\r\n    private addOperation(key: 'conditions' | 'actions', operation: ConfigurableOperation) {\r\n        const operationsArray = this.formArrayOf(key);\r\n        const collection = key === 'conditions' ? this.conditions : this.actions;\r\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\r\n        if (index === -1) {\r\n            const argsHash = operation.args.reduce(\r\n                (output, arg) => ({\r\n                    ...output,\r\n                    [arg.name]:\r\n                        getConfigArgValue(arg.value) ?? this.getDefaultArgValue(key, operation, arg.name),\r\n                }),\r\n                {},\r\n            );\r\n            operationsArray.push(\r\n                this.formBuilder.control({\r\n                    code: operation.code,\r\n                    args: argsHash,\r\n                }),\r\n            );\r\n            collection.push({\r\n                code: operation.code,\r\n                args: operation.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\r\n            });\r\n        }\r\n    }\r\n\r\n    private getDefaultArgValue(\r\n        key: 'conditions' | 'actions',\r\n        operation: ConfigurableOperation,\r\n        argName: string,\r\n    ) {\r\n        const def =\r\n            key === 'conditions'\r\n                ? this.allConditions.find(c => c.code === operation.code)\r\n                : this.allActions.find(a => a.code === operation.code);\r\n        if (def) {\r\n            const argDef = def.args.find(a => a.name === argName);\r\n            if (argDef) {\r\n                return getDefaultConfigArgValue(argDef);\r\n            }\r\n        }\r\n        throw new Error(`Could not determine default value for \"argName\"`);\r\n    }\r\n\r\n    /**\r\n     * Removes a condition or action from the promotion.\r\n     */\r\n    private removeOperation(key: 'conditions' | 'actions', operation: ConfigurableOperation) {\r\n        const operationsArray = this.formArrayOf(key);\r\n        const collection = key === 'conditions' ? this.conditions : this.actions;\r\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\r\n        if (index !== -1) {\r\n            operationsArray.removeAt(index);\r\n            collection.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    AssignPromotionsToChannelDocument,\r\n    createBulkAssignToChannelAction,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    GetPromotionListQuery,\r\n    ItemOf,\r\n    Permission,\r\n    RemovePromotionsFromChannelDocument,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst ASSIGN_PROMOTIONS_TO_CHANNEL = gql`\r\n    mutation AssignPromotionsToChannel($input: AssignPromotionsToChannelInput!) {\r\n        assignPromotionsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nconst REMOVE_PROMOTIONS_FROM_CHANNEL = gql`\r\n    mutation RemovePromotionsFromChannel($input: RemovePromotionsFromChannelInput!) {\r\n        removePromotionsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const deletePromotionsBulkAction = createBulkDeleteAction<ItemOf<GetPromotionListQuery, 'promotions'>>(\r\n    {\r\n        location: 'promotion-list',\r\n        requiresPermission: Permission.DeletePromotion,\r\n        getItemName: item => item.name,\r\n        bulkDelete: (dataService, ids) =>\r\n            dataService.promotion.deletePromotions(ids).pipe(map(res => res.deletePromotions)),\r\n    },\r\n);\r\n\r\nexport const assignPromotionsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetPromotionListQuery, 'promotions'>\r\n>({\r\n    location: 'promotion-list',\r\n    requiresPermission: Permission.UpdatePromotion,\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, promotionIds, channelId) =>\r\n        dataService\r\n            .mutate(AssignPromotionsToChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    promotionIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.assignPromotionsToChannel)),\r\n});\r\n\r\nexport const removePromotionsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetPromotionListQuery, 'promotions'>\r\n>({\r\n    location: 'promotion-list',\r\n    requiresPermission: Permission.DeleteCatalog,\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, promotionIds, channelId) =>\r\n        dataService\r\n            .mutate(RemovePromotionsFromChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    promotionIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.removePromotionsFromChannel)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                   [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                   [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                   (languageCodeChange)=\"setLanguage($event)\"\r\n               ></vdr-language-selector>\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"customer-list\"></vdr-action-bar-items>\r\n            <a class=\"btn btn-primary\" [routerLink]=\"['./create']\" *vdrIfPermissions=\"'CreatePromotion'\">\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'marketing.create-new-promotion' | translate }}\r\n            </a>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<vdr-data-table-2\r\n    id=\"promotion-list\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"promotion-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'marketing.search-by-name-or-coupon-code' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-promotion=\"item\">{{ promotion.id }}</ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-promotion=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', promotion.id]\"\r\n                ><span> {{ promotion.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\">\r\n        <ng-template let-promotion=\"item\">\r\n            <vdr-chip *ngIf=\"promotion.enabled\" colorType=\"success\">{{\r\n                'common.enabled' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!promotion.enabled\" colorType=\"warning\">{{\r\n                'common.disabled' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'marketing.coupon-code' | translate\" [sort]=\"sorts.get('couponCode')\">\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.couponCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'marketing.starts-at' | translate\" [sort]=\"sorts.get('startsAt')\">\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.startsAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'marketing.ends-at' | translate\" [sort]=\"sorts.get('endsAt')\">\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.endsAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'marketing.per-customer-limit' | translate\"\r\n        [sort]=\"sorts.get('perCustomerUsageLimit')\"\r\n        [hiddenByDefault]=\"true\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.perCustomerUsageLimit }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column *ngFor=\"let customField of customFields\" [customField]=\"customField\" [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    GetPromotionListDocument,\r\n    LogicalOperator,\r\n    PROMOTION_FRAGMENT,\r\n    PromotionListOptions,\r\n    PromotionSortParameter,\r\n    TypedBaseListComponent,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\n\r\nexport const GET_PROMOTION_LIST = gql`\r\n    query GetPromotionList($options: PromotionListOptions) {\r\n        promotions(options: $options) {\r\n            items {\r\n                ...Promotion\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-promotion-list',\r\n    templateUrl: './promotion-list.component.html',\r\n    styleUrls: ['./promotion-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PromotionListComponent\r\n    extends TypedBaseListComponent<typeof GetPromotionListDocument, 'promotions'>\r\n    implements OnInit\r\n{\r\n    readonly customFields = this.getCustomFieldConfig('Promotion');\r\n    readonly filters = this.createFilterCollection()\r\n        .addDateFilters()\r\n        .addFilters([\r\n            {\r\n                name: 'startsAt',\r\n                type: { kind: 'dateRange' },\r\n                label: _('marketing.starts-at'),\r\n                filterField: 'startsAt',\r\n            },\r\n            {\r\n                name: 'endsAt',\r\n                type: { kind: 'dateRange' },\r\n                label: _('marketing.ends-at'),\r\n                filterField: 'endsAt',\r\n            },\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'boolean' },\r\n                label: _('common.enabled'),\r\n                filterField: 'enabled',\r\n            },\r\n            {\r\n                name: 'name',\r\n                type: { kind: 'text' },\r\n                label: _('common.name'),\r\n                filterField: 'name',\r\n            },\r\n            {\r\n                name: 'couponCode',\r\n                type: { kind: 'text' },\r\n                label: _('marketing.coupon-code'),\r\n                filterField: 'couponCode',\r\n            },\r\n            {\r\n                name: 'desc',\r\n                type: { kind: 'text' },\r\n                label: _('common.description'),\r\n                filterField: 'description',\r\n            },\r\n            {\r\n                name: 'usageLimit',\r\n                type: { kind: 'number' },\r\n                label: _('marketing.per-customer-limit'),\r\n                filterField: 'perCustomerUsageLimit',\r\n            },\r\n        ])\r\n        .addCustomFieldFilters(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    readonly sorts = this.createSortCollection()\r\n        .defaultSort('createdAt', 'DESC')\r\n        .addSorts([\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'startsAt' },\r\n            { name: 'endsAt' },\r\n            { name: 'name' },\r\n            { name: 'couponCode' },\r\n            { name: 'perCustomerUsageLimit' },\r\n        ])\r\n        .addCustomFieldSorts(this.customFields)\r\n        .connectToRoute(this.route);\r\n\r\n    constructor() {\r\n        super();\r\n        super.configure({\r\n            document: GetPromotionListDocument,\r\n            getItems: data => data.promotions,\r\n            setVariables: (skip, take) => this.createQueryOptions(skip, take, this.searchTermControl.value),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n\r\n    private createQueryOptions(\r\n        skip: number,\r\n        take: number,\r\n        searchTerm: string | null,\r\n    ): { options: PromotionListOptions } {\r\n        const filter = this.filters.createFilterInput();\r\n        const sort = this.sorts.createSortInput();\r\n        let filterOperator = LogicalOperator.AND;\r\n        if (searchTerm) {\r\n            filter.couponCode = { contains: searchTerm };\r\n            filter.name = { contains: searchTerm };\r\n            filterOperator = LogicalOperator.OR;\r\n        }\r\n\r\n        return {\r\n            options: {\r\n                skip,\r\n                take,\r\n                filter,\r\n                filterOperator,\r\n                sort,\r\n            },\r\n        };\r\n    }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { detailBreadcrumb, PageComponent, PageService, PromotionFragment } from '@vendure/admin-ui/core';\r\n\r\nexport const createRoutes = (pageService: PageService): Route[] => [\r\n    {\r\n        path: 'promotions',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'promotion-list',\r\n            breadcrumb: _('breadcrumb.promotions'),\r\n        },\r\n        children: pageService.getPageTabRoutes('promotion-list'),\r\n    },\r\n    {\r\n        path: 'promotions/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'promotion-detail',\r\n            breadcrumb: { label: _('breadcrumb.promotions'), link: ['../', 'promotions'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('promotion-detail'),\r\n    },\r\n];\r\n\r\nexport function promotionBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<PromotionFragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.promotions',\r\n        getName: promotion => promotion.name,\r\n        route: 'promotions',\r\n    });\r\n}\r\n","import { AsyncPipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, ROUTES } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BulkActionRegistryService,\n    detailComponentWithResolver,\n    GetPromotionDetailDocument,\n    PageService,\n    SharedModule,\n} from '@vendure/admin-ui/core';\n\nimport { PromotionDetailComponent } from './components/promotion-detail/promotion-detail.component';\nimport {\n    assignPromotionsToChannelBulkAction,\n    deletePromotionsBulkAction,\n    removePromotionsFromChannelBulkAction,\n} from './components/promotion-list/promotion-list-bulk-actions';\nimport { PromotionListComponent } from './components/promotion-list/promotion-list.component';\nimport { createRoutes } from './marketing.routes';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild([]), SharedModule, AsyncPipe, SharedModule],\n    providers: [\n        {\n            provide: ROUTES,\n            useFactory: (pageService: PageService) => createRoutes(pageService),\n            multi: true,\n            deps: [PageService],\n        },\n    ],\n    declarations: [PromotionListComponent, PromotionDetailComponent],\n})\nexport class MarketingModule {\n    constructor(private bulkActionRegistryService: BulkActionRegistryService, pageService: PageService) {\n        bulkActionRegistryService.registerBulkAction(assignPromotionsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removePromotionsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deletePromotionsBulkAction);\n\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'promotion-list',\n            tab: _('breadcrumb.promotions'),\n            route: '',\n            component: PromotionListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'promotion-detail',\n            tab: _('marketing.promotion'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: PromotionDetailComponent,\n                query: GetPromotionDetailDocument,\n                entityKey: 'promotion',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : _('marketing.create-new-promotion'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n    }\n}\n"],"x_google_ignoreList":[]}