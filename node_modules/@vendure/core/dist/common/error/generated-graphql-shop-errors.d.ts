/** This file was generated by the graphql-errors-plugin, which is part of the "codegen" npm script. */
export type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
    DateTime: any;
    JSON: any;
    Money: any;
    Upload: any;
};
export declare class ErrorResult {
    readonly __typename: string;
    readonly errorCode: string;
    readonly message: Scalars['String'];
}
export declare class AlreadyLoggedInError extends ErrorResult {
    readonly __typename = "AlreadyLoggedInError";
    readonly errorCode: any;
    readonly message = "ALREADY_LOGGED_IN_ERROR";
    constructor();
}
export declare class CouponCodeExpiredError extends ErrorResult {
    readonly __typename = "CouponCodeExpiredError";
    readonly errorCode: any;
    readonly message = "COUPON_CODE_EXPIRED_ERROR";
    readonly couponCode: Scalars['String'];
    constructor(input: {
        couponCode: Scalars['String'];
    });
}
export declare class CouponCodeInvalidError extends ErrorResult {
    readonly __typename = "CouponCodeInvalidError";
    readonly errorCode: any;
    readonly message = "COUPON_CODE_INVALID_ERROR";
    readonly couponCode: Scalars['String'];
    constructor(input: {
        couponCode: Scalars['String'];
    });
}
export declare class CouponCodeLimitError extends ErrorResult {
    readonly __typename = "CouponCodeLimitError";
    readonly errorCode: any;
    readonly message = "COUPON_CODE_LIMIT_ERROR";
    readonly couponCode: Scalars['String'];
    readonly limit: Scalars['Int'];
    constructor(input: {
        couponCode: Scalars['String'];
        limit: Scalars['Int'];
    });
}
export declare class EmailAddressConflictError extends ErrorResult {
    readonly __typename = "EmailAddressConflictError";
    readonly errorCode: any;
    readonly message = "EMAIL_ADDRESS_CONFLICT_ERROR";
    constructor();
}
export declare class GuestCheckoutError extends ErrorResult {
    readonly __typename = "GuestCheckoutError";
    readonly errorCode: any;
    readonly message = "GUEST_CHECKOUT_ERROR";
    readonly errorDetail: Scalars['String'];
    constructor(input: {
        errorDetail: Scalars['String'];
    });
}
export declare class IdentifierChangeTokenExpiredError extends ErrorResult {
    readonly __typename = "IdentifierChangeTokenExpiredError";
    readonly errorCode: any;
    readonly message = "IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR";
    constructor();
}
export declare class IdentifierChangeTokenInvalidError extends ErrorResult {
    readonly __typename = "IdentifierChangeTokenInvalidError";
    readonly errorCode: any;
    readonly message = "IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR";
    constructor();
}
export declare class IneligiblePaymentMethodError extends ErrorResult {
    readonly __typename = "IneligiblePaymentMethodError";
    readonly errorCode: any;
    readonly message = "INELIGIBLE_PAYMENT_METHOD_ERROR";
    readonly eligibilityCheckerMessage: any;
    constructor(input: {
        eligibilityCheckerMessage: any;
    });
}
export declare class IneligibleShippingMethodError extends ErrorResult {
    readonly __typename = "IneligibleShippingMethodError";
    readonly errorCode: any;
    readonly message = "INELIGIBLE_SHIPPING_METHOD_ERROR";
    constructor();
}
export declare class InsufficientStockError extends ErrorResult {
    readonly __typename = "InsufficientStockError";
    readonly errorCode: any;
    readonly message = "INSUFFICIENT_STOCK_ERROR";
    readonly order: any;
    readonly quantityAvailable: Scalars['Int'];
    constructor(input: {
        order: any;
        quantityAvailable: Scalars['Int'];
    });
}
export declare class InvalidCredentialsError extends ErrorResult {
    readonly __typename = "InvalidCredentialsError";
    readonly errorCode: any;
    readonly message = "INVALID_CREDENTIALS_ERROR";
    readonly authenticationError: Scalars['String'];
    constructor(input: {
        authenticationError: Scalars['String'];
    });
}
export declare class MissingPasswordError extends ErrorResult {
    readonly __typename = "MissingPasswordError";
    readonly errorCode: any;
    readonly message = "MISSING_PASSWORD_ERROR";
    constructor();
}
export declare class NativeAuthStrategyError extends ErrorResult {
    readonly __typename = "NativeAuthStrategyError";
    readonly errorCode: any;
    readonly message = "NATIVE_AUTH_STRATEGY_ERROR";
    constructor();
}
export declare class NegativeQuantityError extends ErrorResult {
    readonly __typename = "NegativeQuantityError";
    readonly errorCode: any;
    readonly message = "NEGATIVE_QUANTITY_ERROR";
    constructor();
}
export declare class NoActiveOrderError extends ErrorResult {
    readonly __typename = "NoActiveOrderError";
    readonly errorCode: any;
    readonly message = "NO_ACTIVE_ORDER_ERROR";
    constructor();
}
export declare class NotVerifiedError extends ErrorResult {
    readonly __typename = "NotVerifiedError";
    readonly errorCode: any;
    readonly message = "NOT_VERIFIED_ERROR";
    constructor();
}
export declare class OrderLimitError extends ErrorResult {
    readonly __typename = "OrderLimitError";
    readonly errorCode: any;
    readonly message = "ORDER_LIMIT_ERROR";
    readonly maxItems: Scalars['Int'];
    constructor(input: {
        maxItems: Scalars['Int'];
    });
}
export declare class OrderModificationError extends ErrorResult {
    readonly __typename = "OrderModificationError";
    readonly errorCode: any;
    readonly message = "ORDER_MODIFICATION_ERROR";
    constructor();
}
export declare class OrderPaymentStateError extends ErrorResult {
    readonly __typename = "OrderPaymentStateError";
    readonly errorCode: any;
    readonly message = "ORDER_PAYMENT_STATE_ERROR";
    constructor();
}
export declare class OrderStateTransitionError extends ErrorResult {
    readonly __typename = "OrderStateTransitionError";
    readonly errorCode: any;
    readonly message = "ORDER_STATE_TRANSITION_ERROR";
    readonly fromState: Scalars['String'];
    readonly toState: Scalars['String'];
    readonly transitionError: Scalars['String'];
    constructor(input: {
        fromState: Scalars['String'];
        toState: Scalars['String'];
        transitionError: Scalars['String'];
    });
}
export declare class PasswordAlreadySetError extends ErrorResult {
    readonly __typename = "PasswordAlreadySetError";
    readonly errorCode: any;
    readonly message = "PASSWORD_ALREADY_SET_ERROR";
    constructor();
}
export declare class PasswordResetTokenExpiredError extends ErrorResult {
    readonly __typename = "PasswordResetTokenExpiredError";
    readonly errorCode: any;
    readonly message = "PASSWORD_RESET_TOKEN_EXPIRED_ERROR";
    constructor();
}
export declare class PasswordResetTokenInvalidError extends ErrorResult {
    readonly __typename = "PasswordResetTokenInvalidError";
    readonly errorCode: any;
    readonly message = "PASSWORD_RESET_TOKEN_INVALID_ERROR";
    constructor();
}
export declare class PasswordValidationError extends ErrorResult {
    readonly __typename = "PasswordValidationError";
    readonly errorCode: any;
    readonly message = "PASSWORD_VALIDATION_ERROR";
    readonly validationErrorMessage: Scalars['String'];
    constructor(input: {
        validationErrorMessage: Scalars['String'];
    });
}
export declare class PaymentDeclinedError extends ErrorResult {
    readonly __typename = "PaymentDeclinedError";
    readonly errorCode: any;
    readonly message = "PAYMENT_DECLINED_ERROR";
    readonly paymentErrorMessage: Scalars['String'];
    constructor(input: {
        paymentErrorMessage: Scalars['String'];
    });
}
export declare class PaymentFailedError extends ErrorResult {
    readonly __typename = "PaymentFailedError";
    readonly errorCode: any;
    readonly message = "PAYMENT_FAILED_ERROR";
    readonly paymentErrorMessage: Scalars['String'];
    constructor(input: {
        paymentErrorMessage: Scalars['String'];
    });
}
export declare class VerificationTokenExpiredError extends ErrorResult {
    readonly __typename = "VerificationTokenExpiredError";
    readonly errorCode: any;
    readonly message = "VERIFICATION_TOKEN_EXPIRED_ERROR";
    constructor();
}
export declare class VerificationTokenInvalidError extends ErrorResult {
    readonly __typename = "VerificationTokenInvalidError";
    readonly errorCode: any;
    readonly message = "VERIFICATION_TOKEN_INVALID_ERROR";
    constructor();
}
export declare const shopErrorOperationTypeResolvers: {
    UpdateOrderItemsResult: {
        __resolveType(value: any): any;
    };
    AddPaymentToOrderResult: {
        __resolveType(value: any): any;
    };
    ApplyCouponCodeResult: {
        __resolveType(value: any): any;
    };
    AuthenticationResult: {
        __resolveType(value: any): any;
    };
    NativeAuthenticationResult: {
        __resolveType(value: any): any;
    };
    RefreshCustomerVerificationResult: {
        __resolveType(value: any): any;
    };
    RegisterCustomerAccountResult: {
        __resolveType(value: any): any;
    };
    RemoveOrderItemsResult: {
        __resolveType(value: any): any;
    };
    RequestPasswordResetResult: {
        __resolveType(value: any): any;
    };
    RequestUpdateCustomerEmailAddressResult: {
        __resolveType(value: any): any;
    };
    ResetPasswordResult: {
        __resolveType(value: any): any;
    };
    SetCustomerForOrderResult: {
        __resolveType(value: any): any;
    };
    ActiveOrderResult: {
        __resolveType(value: any): any;
    };
    SetOrderShippingMethodResult: {
        __resolveType(value: any): any;
    };
    TransitionOrderToStateResult: {
        __resolveType(value: any): any;
    };
    UpdateCustomerEmailAddressResult: {
        __resolveType(value: any): any;
    };
    UpdateCustomerPasswordResult: {
        __resolveType(value: any): any;
    };
    VerifyCustomerAccountResult: {
        __resolveType(value: any): any;
    };
};
